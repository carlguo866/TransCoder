public static String getStackTrace ( final Throwable ex ) { final StringWriter sw = new StringWriter ( ) ; final PrintWriter pw = new PrintWriter ( sw , true ) ; ex . printStackTrace ( pw ) ; pw . flush ( ) ; sw . flush ( ) ; return sw . toString ( ) ; }
public static Throwable getRootCause ( Throwable throwable ) { if ( throwable . getCause ( ) != null ) return getRootCause ( throwable . getCause ( ) ) ; return throwable ; }
public static void main ( String [ ] args ) { test ( ) ; }
private static void test ( ) { for ( int j = 0 ; j < 5 ; ++ j ) { long x = 0 ; for ( int i = Integer . MIN_VALUE ; i < Integer . MAX_VALUE ; ++ i ) { x += i ; } System . out . println ( " sum : ▁ " + x ) ; if ( x != - 4294967295l ) { System . out . println ( " FAILED " ) ; System . exit ( 97 ) ; } } }
static String createNameFromUID ( String uid ) { return uid . substring ( 0 , uid . length ( ) - ( UID_SUFFIX . length ( ) ) ) ; }
