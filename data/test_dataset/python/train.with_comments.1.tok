<DOCUMENT_ID="PaulWay/insights-core/tree/master/insights/parsers/tests/test_foreman_log.py"> from insights . tests import context_wrap NEW_LINE from insights . parsers . foreman_log import SatelliteLog , ProductionLog NEW_LINE from insights . parsers . foreman_log import CandlepinLog , ProxyLog NEW_LINE PRODUCTION_LOG = """ STRNEWLINE 2015-11-13 ▁ 03:30:07 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 1783ms ▁ ( Views : ▁ 0.2ms ▁ | ▁ ActiveRecord : ▁ 172.9ms ) STRNEWLINE 2015-11-13 ▁ 03:30:07 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : V2 : : RepositoriesController # sync _ complete ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 03:30:07 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " call _ report " = > " [ FILTERED ] " , ▁ " event _ type " = > " repo . sync . finish " , ▁ " payload " = > { " importer _ id " = > " yum _ importer " , ▁ " exception " = > nil , ▁ " repo _ id " = > " 1 - Gulfstream _ Aerospace _ Corp _ - Red _ Hat _ Enterprise _ Linux _ Server - Red _ Hat _ Satellite _ Tools _ 6_1 _ for _ RHEL _ 6 _ Server _ RPMs _ i386 " , ▁ " traceback " = > nil , ▁ " started " = > " 2015-11-13T08:30:00Z " , ▁ " _ ns " = > " repo _ sync _ results " , ▁ " completed " = > " 2015-11-13T08:30:06Z " , ▁ " importer _ type _ id " = > " yum _ importer " , ▁ " error _ message " = > nil , ▁ " summary " = > { " content " = > { " state " = > " FINISHED " } , ▁ " comps " = > { " state " = > " FINISHED " } , ▁ " distribution " = > { " state " = > " FINISHED " } , ▁ " errata " = > { " state " = > " FINISHED " } , ▁ " metadata " = > { " state " = > " FINISHED " } } , ▁ " added _ count " = > 0 , ▁ " result " = > " success " , ▁ " updated _ count " = > 3 , ▁ " details " = > { " content " = > { " size _ total " = > 0 , ▁ " items _ left " = > 0 , ▁ " items _ total " = > 0 , ▁ " state " = > " FINISHED " , ▁ " size _ left " = > 0 , ▁ " details " = > { " rpm _ total " = > 0 , ▁ " rpm _ done " = > 0 , ▁ " drpm _ total " = > 0 , ▁ " drpm _ done " = > 0 } , ▁ " error _ details " = > [ ] } , ▁ " comps " = > { " state " = > " FINISHED " } , ▁ " distribution " = > { " items _ total " = > 0 , ▁ " state " = > " FINISHED " , ▁ " error _ details " = > [ ] , ▁ " items _ left " = > 0 } , ▁ " errata " = > { " state " = > " FINISHED " } , ▁ " metadata " = > { " state " = > " FINISHED " } } , ▁ " id " = > " 56459f8ef301a213bbfd87bb " , ▁ " removed _ count " = > 0 } , ▁ " token " = > " oQumn3XsKrdRkijuvpCNhKF2PDWZt6az " , ▁ " api _ version " = > " v2 " , ▁ " repository " = > { } } STRNEWLINE 2015-11-13 ▁ 03:30:07 ▁ [ I ] ▁ Sync _ complete ▁ called ▁ for ▁ Red ▁ Hat ▁ Satellite ▁ Tools ▁ 6.1 ▁ for ▁ RHEL ▁ 6 ▁ Server ▁ RPMs ▁ i386 , ▁ running ▁ after _ sync . STRNEWLINE 2015-11-13 ▁ 03:30:09 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 1995ms ▁ ( Views : ▁ 0.2ms ▁ | ▁ ActiveRecord : ▁ 81.5ms ) STRNEWLINE 2015-11-13 ▁ 03:30:10 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : V2 : : RepositoriesController # sync _ complete ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 03:30:10 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " call _ report " = > " [ FILTERED ] " , ▁ " event _ type " = > " repo . sync . finish " , ▁ " payload " = > { " importer _ id " = > " yum _ importer " , ▁ " exception " = > nil , ▁ " repo _ id " = > " 1 - Gulfstream _ Aerospace _ Corp _ - Red _ Hat _ Enterprise _ Linux _ Server - Red _ Hat _ Satellite _ Tools _ 6_1 _ for _ RHEL _ 5 _ Server _ RPMs _ i386 " , ▁ " traceback " = > nil , ▁ " started " = > " 2015-11-13T08:30:05Z " , ▁ " _ ns " = > " repo _ sync _ results " , ▁ " completed " = > " 2015-11-13T08:30:10Z " , ▁ " importer _ type _ id " = > " yum _ importer " , ▁ " error _ message " = > nil , ▁ " summary " = > { " content " = > { " state " = > " FINISHED " } , ▁ " comps " = > { " state " = > " FINISHED " } , ▁ " distribution " = > { " state " = > " FINISHED " } , ▁ " errata " = > { " state " = > " FINISHED " } , ▁ " metadata " = > { " state " = > " FINISHED " } } , ▁ " added _ count " = > 0 , ▁ " result " = > " success " , ▁ " updated _ count " = > 3 , ▁ " details " = > { " content " = > { " size _ total " = > 0 , ▁ " items _ left " = > 0 , ▁ " items _ total " = > 0 , ▁ " state " = > " FINISHED " , ▁ " size _ left " = > 0 , ▁ " details " = > { " rpm _ total " = > 0 , ▁ " rpm _ done " = > 0 , ▁ " drpm _ total " = > 0 , ▁ " drpm _ done " = > 0 } , ▁ " error _ details " = > [ ] } , ▁ " comps " = > { " state " = > " FINISHED " } , ▁ " distribution " = > { " items _ total " = > 0 , ▁ " state " = > " FINISHED " , ▁ " error _ details " = > [ ] , ▁ " items _ left " = > 0 } , ▁ " errata " = > { " state " = > " FINISHED " } , ▁ " metadata " = > { " state " = > " FINISHED " } } , ▁ " id " = > " 56459f92f301a2137cd6b802 " , ▁ " removed _ count " = > 0 } , ▁ " token " = > " oQumn3XsKrdRkijuvpCNhKF2PDWZt6az " , ▁ " api _ version " = > " v2 " , ▁ " repository " = > { } } STRNEWLINE 2015-11-13 ▁ 03:30:10 ▁ [ I ] ▁ Sync _ complete ▁ called ▁ for ▁ Red ▁ Hat ▁ Satellite ▁ Tools ▁ 6.1 ▁ for ▁ RHEL ▁ 5 ▁ Server ▁ RPMs ▁ i386 , ▁ running ▁ after _ sync . STRNEWLINE 2015-11-13 ▁ 03:30:11 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 03:30:11 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 03:30:11 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 818ms ▁ ( Views : ▁ 0.2ms ▁ | ▁ ActiveRecord : ▁ 77.2ms ) STRNEWLINE 2015-11-13 ▁ 03:30:17 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 03:30:26 ▁ [ I ] ▁ Sync _ complete ▁ called ▁ for ▁ RHN ▁ Tools ▁ for ▁ Red ▁ Hat ▁ Enterprise ▁ Linux ▁ 5 ▁ Server ▁ RPMs ▁ x86_64 ▁ 5Server , ▁ running ▁ after _ sync . STRNEWLINE 2015-11-13 ▁ 03:50:46 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 2583ms ▁ ( Views : ▁ 2.7ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 06:58:25 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " id " = > " cfd7275b - 8cce - 4323-8d1f - 55ef85eca883 " } STRNEWLINE 2015-11-13 ▁ 06:58:25 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 249ms ▁ ( Views : ▁ 3.1ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 06:59:26 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : Rhsm : : CandlepinProxiesController # consumer _ show ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 06:59:26 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " id " = > " cfd7275b - 8cce - 4323-8d1f - 55ef85eca883 " } STRNEWLINE 2015-11-13 ▁ 06:59:26 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 84ms ▁ ( Views : ▁ 3.1ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 07:00:12 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 07:00:12 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 07:00:12 ▁ [ I ] ▁ Connecting ▁ to ▁ database ▁ specified ▁ by ▁ database . yml STRNEWLINE 2015-11-13 ▁ 07:00:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Organization . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:00:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Organization . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:00:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Location . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:00:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Location . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:00:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Organization . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " facts " = > " [ FILTERED ] " , ▁ " name " = > " infrhnpl002 . gac . gulfaero . com " , ▁ " certname " = > " infrhnpl002 . gac . gulfaero . com " , ▁ " apiv " = > " v2 " , ▁ : host = > { " name " = > " infrhnpl002 . gac . gulfaero . com " , ▁ " certname " = > " infrhnpl002 . gac . gulfaero . com " } } STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Import ▁ facts ▁ for ▁ ' infrhnpl002 . gac . gulfaero . com ' ▁ completed . ▁ Added : ▁ 0 , ▁ Updated : ▁ 6 , ▁ Deleted ▁ 0 ▁ facts STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Completed ▁ 201 ▁ Created ▁ in ▁ 251ms ▁ ( Views : ▁ 179.3ms ▁ | ▁ ActiveRecord : ▁ 0.0ms ) STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Processing ▁ by ▁ HostsController # externalNodes ▁ as ▁ YML STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " name " = > " infrhnpl002 . gac . gulfaero . com " } STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ ▁ ▁ Rendered ▁ text ▁ template ▁ ( 0.0ms ) STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 48ms ▁ ( Views : ▁ 0.5ms ▁ | ▁ ActiveRecord : ▁ 6.6ms ) STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Processing ▁ by ▁ Api : : V2 : : ReportsController # create ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " report " = > " [ FILTERED ] " , ▁ " apiv " = > " v2 " } STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ ▁ ▁ Rendered ▁ text ▁ template ▁ ( 0.0ms ) STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ processing ▁ report ▁ for ▁ infrhnpl002 . gac . gulfaero . com STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Imported ▁ report ▁ for ▁ infrhnpl002 . gac . gulfaero . com ▁ in ▁ 0.02 ▁ seconds STRNEWLINE 2015-11-13 ▁ 07:09:22 ▁ [ I ] ▁ Completed ▁ 201 ▁ Created ▁ in ▁ 28ms ▁ ( Views : ▁ 1.2ms ▁ | ▁ ActiveRecord : ▁ 0.0ms ) STRNEWLINE 2015-11-13 ▁ 07:30:17 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Organization . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:30:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Location . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:30:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Location . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:30:18 ▁ [ W ] ▁ Creating ▁ scope ▁ : completer _ scope . ▁ Overwriting ▁ existing ▁ method ▁ Location . completer _ scope . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Client ▁ connected . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Connected ▁ to ▁ server . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Client ▁ connected . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Connected ▁ to ▁ server . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Client ▁ connected . STRNEWLINE 2015-11-13 ▁ 07:30:25 ▁ [ I ] ▁ Connected ▁ to ▁ server . STRNEWLINE 2015-11-13 ▁ 07:30:30 ▁ [ I ] ▁ init ▁ config ▁ for ▁ SecureHeaders : : Configuration STRNEWLINE 2015-11-13 ▁ 07:30:30 ▁ [ I ] ▁ init ▁ config ▁ for ▁ SecureHeaders : : Configuration STRNEWLINE 2015-11-13 ▁ 07:30:30 ▁ [ I ] ▁ init ▁ config ▁ for ▁ SecureHeaders : : Configuration STRNEWLINE 2015-11-13 ▁ 07:30:32 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : Rhsm : : CandlepinProxiesController # consumer _ show ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 07:30:32 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " id " = > " cfd7275b - 8cce - 4323-8d1f - 55ef85eca883 " } STRNEWLINE 2015-11-13 ▁ 07:30:32 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 110ms ▁ ( Views : ▁ 2.7ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 07:30:33 ▁ [ I ] ▁ 2015-11-13 ▁ 07:30:33 ▁ - 0500 : ▁ Expired ▁ 48 ▁ Reports STRNEWLINE 2015-11-13 ▁ 07:30:33 ▁ [ I ] ▁ Client ▁ disconnected . STRNEWLINE 2015-11-13 ▁ 09:41:58 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 93ms ▁ ( Views : ▁ 2.9ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 09:42:58 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : Rhsm : : CandlepinProxiesController # consumer _ show ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 09:42:58 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " id " = > " cfd7275b - 8cce - 4323-8d1f - 55ef85eca883 " } STRNEWLINE 2015-11-13 ▁ 09:42:58 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 80ms ▁ ( Views : ▁ 3.6ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE 2015-11-13 ▁ 09:43:58 ▁ [ I ] ▁ Processing ▁ by ▁ Katello : : Api : : Rhsm : : CandlepinProxiesController # consumer _ show ▁ as ▁ JSON STRNEWLINE 2015-11-13 ▁ 09:43:58 ▁ [ I ] ▁ ▁ ▁ Parameters : ▁ { " id " = > " cfd7275b - 8cce - 4323-8d1f - 55ef85eca883 " } STRNEWLINE 2015-11-13 ▁ 09:43:59 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 80ms ▁ ( Views : ▁ 2.9ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) STRNEWLINE """ . strip ( ) NEW_LINE SATELLITE_OUT = """ STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config : : Pulp _ client / Foreman _ config _ entry [ pulp _ client _ cert ] / require : ▁ requires ▁ Class [ Certs : : Pulp _ client ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config : : Pulp _ client / Foreman _ config _ entry [ pulp _ client _ cert ] / require : ▁ requires ▁ Exec [ foreman - rake - db : seed ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config : : Pulp _ client / Foreman _ config _ entry [ pulp _ client _ key ] / require : ▁ requires ▁ Class [ Certs : : Pulp _ client ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config : : Pulp _ client / Foreman _ config _ entry [ pulp _ client _ key ] / require : ▁ requires ▁ Exec [ foreman - rake - db : seed ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config / File [ / etc / foreman / plugins / katello . yaml ] / before : ▁ requires ▁ Class [ Foreman : : Database ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config / File [ / etc / foreman / plugins / katello . yaml ] / before : ▁ requires ▁ Exec [ foreman - rake - db : migrate ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config / File [ / etc / foreman / plugins / katello . yaml ] / notify : ▁ subscribes ▁ to ▁ Service [ foreman - tasks ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config / File [ / etc / foreman / plugins / katello . yaml ] / notify : ▁ subscribes ▁ to ▁ Class [ Foreman : : Service ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Katello : : Config / Foreman : : Config : : Passenger : : Fragment [ katello ] / require : ▁ requires ▁ Class [ Foreman : : Config : : Passenger ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / notify : ▁ subscribes ▁ to ▁ Class [ Certs : : Candlepin ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Cert [ kam1opapp999 . connex . bclc . com - qpid - broker ] / notify : ▁ subscribes ▁ to ▁ Pubkey [ / etc / pki / katello / certs / kam1opapp999 . connex . bclc . com - qpid - broker . crt ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Pubkey [ / etc / pki / katello / certs / kam1opapp999 . connex . bclc . com - qpid - broker . crt ] / notify : ▁ subscribes ▁ to ▁ Privkey [ / etc / pki / katello / private / kam1opapp999 . connex . bclc . com - qpid - broker . key ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Privkey [ / etc / pki / katello / private / kam1opapp999 . connex . bclc . com - qpid - broker . key ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / pki / katello / private / kam1opapp999 . connex . bclc . com - qpid - broker . key ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / private / kam1opapp999 . connex . bclc . com - qpid - broker . key ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / pki / katello / nssdb ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / nssdb ] / notify : ▁ subscribes ▁ to ▁ Exec [ generate - nss - password ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ generate - nss - password ] / before : ▁ requires ▁ File [ / etc / pki / katello / nssdb / nss _ db _ password - file ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / nssdb / nss _ db _ password - file ] / notify : ▁ subscribes ▁ to ▁ Exec [ create - nss - db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ create - nss - db ] / before : ▁ requires ▁ Exec [ delete ▁ ca ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ create - nss - db ] / before : ▁ requires ▁ Exec [ delete ▁ broker ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ create - nss - db ] / before : ▁ requires ▁ Exec [ delete ▁ amqp - client ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ create - nss - db ] / notify : ▁ subscribes ▁ to ▁ Certs : : Ssltools : : Certutil [ ca ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Certs : : Ssltools : : Certutil [ ca ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / pki / katello / nssdb / cert8 . db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Certs : : Ssltools : : Certutil [ ca ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / pki / katello / nssdb / key3 . db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Certs : : Ssltools : : Certutil [ ca ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / pki / katello / nssdb / secmod . db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / nssdb / cert8 . db ] / notify : ▁ subscribes ▁ to ▁ Certs : : Ssltools : : Certutil [ broker ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / nssdb / key3 . db ] / notify : ▁ subscribes ▁ to ▁ Certs : : Ssltools : : Certutil [ broker ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / File [ / etc / pki / katello / nssdb / secmod . db ] / notify : ▁ subscribes ▁ to ▁ Certs : : Ssltools : : Certutil [ broker ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Certs : : Ssltools : : Certutil [ broker ] / notify : ▁ subscribes ▁ to ▁ Exec [ generate - pfx - for - nss - db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ generate - pfx - for - nss - db ] / notify : ▁ subscribes ▁ to ▁ Exec [ add - private - key - to - nss - db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Qpid / Exec [ add - private - key - to - nss - db ] / notify : ▁ subscribes ▁ to ▁ Service [ qpidd ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / notify : ▁ subscribes ▁ to ▁ Class [ Candlepin ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Cert [ java - client ] / notify : ▁ subscribes ▁ to ▁ Pubkey [ / etc / pki / katello / certs / java - client . crt ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / File [ / etc / pki / katello / keystore _ password - file ] / notify : ▁ subscribes ▁ to ▁ Exec [ candlepin - generate - ssl - keystore ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Exec [ candlepin - generate - ssl - keystore ] / notify : ▁ subscribes ▁ to ▁ File [ / usr / share / tomcat / conf / keystore ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / File [ / usr / share / tomcat / conf / keystore ] / notify : ▁ subscribes ▁ to ▁ Service [ tomcat ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Pubkey [ / etc / pki / katello / certs / java - client . crt ] / notify : ▁ subscribes ▁ to ▁ Privkey [ / etc / pki / katello / private / java - client . key ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Privkey [ / etc / pki / katello / private / java - client . key ] / notify : ▁ subscribes ▁ to ▁ Certs : : Ssltools : : Certutil [ amqp - client ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Certs : : Ssltools : : Certutil [ amqp - client ] / subscribe : ▁ subscribes ▁ to ▁ Exec [ create - nss - db ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Certs : : Ssltools : : Certutil [ amqp - client ] / notify : ▁ subscribes ▁ to ▁ Service [ qpidd ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Certs : : Ssltools : : Certutil [ amqp - client ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / candlepin / certs / amqp ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / File [ / etc / candlepin / certs / amqp ] / notify : ▁ subscribes ▁ to ▁ Exec [ create ▁ candlepin ▁ qpid ▁ exchange ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Exec [ create ▁ candlepin ▁ qpid ▁ exchange ] / require : ▁ requires ▁ Service [ qpidd ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Exec [ create ▁ candlepin ▁ qpid ▁ exchange ] / notify : ▁ subscribes ▁ to ▁ Exec [ import ▁ CA ▁ into ▁ Candlepin ▁ truststore ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Exec [ import ▁ CA ▁ into ▁ Candlepin ▁ truststore ] / notify : ▁ subscribes ▁ to ▁ Exec [ import ▁ client ▁ certificate ▁ into ▁ Candlepin ▁ keystore ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / Exec [ import ▁ client ▁ certificate ▁ into ▁ Candlepin ▁ keystore ] / notify : ▁ subscribes ▁ to ▁ File [ / etc / candlepin / certs / amqp / candlepin . jks ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Certs : : Candlepin / File [ / etc / candlepin / certs / amqp / candlepin . jks ] / notify : ▁ subscribes ▁ to ▁ Service [ tomcat ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Candlepin / notify : ▁ subscribes ▁ to ▁ Class [ Qpid ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Candlepin : : Install / notify : ▁ subscribes ▁ to ▁ Class [ Candlepin : : Config ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Candlepin : : Config / notify : ▁ subscribes ▁ to ▁ Class [ Candlepin : : Database ] STRNEWLINE [ DEBUG ▁ 2016-08-11 ▁ 13:09:49 ▁ main ] ▁ ▁ / Stage [ main ] / Candlepin : : Database / notify : ▁ subscribes ▁ to ▁ Class [ Candlepin : : Service ] STRNEWLINE """ . strip ( ) NEW_LINE CANDLEPIN_LOG = """ STRNEWLINE 2016-09-09 ▁ 13:45:52,650 ▁ [ req = bd5a4284 - d280-4fc5 - a3d5 - fc976b7aa5cc , ▁ org = ] ▁ INFO ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Request : ▁ verb = GET , ▁ uri = / candlepin / consumers / f7677b4b - c470-4626-86a4-2fdf2546af4b STRNEWLINE 2016-09-09 ▁ 13:45:52,784 ▁ [ req = bd5a4284 - d280-4fc5 - a3d5 - fc976b7aa5cc , ▁ org = ING _ Luxembourg _ SA ] ▁ INFO ▁ ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Response : ▁ status = 200 , ▁ content - type = " application / json " , ▁ time = 134 STRNEWLINE 2016-09-09 ▁ 13:45:52,947 ▁ [ req = 909ca4c5 - f24e - 4212-8f23 - cc754d06ac57 , ▁ org = ] ▁ INFO ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Request : ▁ verb = GET , ▁ uri = / candlepin / consumers / f7677b4b - c470-4626-86a4-2fdf2546af4b / content _ overrides STRNEWLINE 2016-09-09 ▁ 13:45:52,976 ▁ [ req = 909ca4c5 - f24e - 4212-8f23 - cc754d06ac57 , ▁ org = ] ▁ INFO ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Response : ▁ status = 200 , ▁ content - type = " application / json " , ▁ time = 29 STRNEWLINE 2016-09-09 ▁ 13:45:53,072 ▁ [ req = 49becd26-5dfe - 4d2f - 8667-470519230d88 , ▁ org = ] ▁ INFO ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Request : ▁ verb = GET , ▁ uri = / candlepin / consumers / f7677b4b - c470-4626-86a4-2fdf2546af4b / release STRNEWLINE 2016-09-09 ▁ 13:45:53,115 ▁ [ req = 49becd26-5dfe - 4d2f - 8667-470519230d88 , ▁ org = ING _ Luxembourg _ SA ] ▁ INFO ▁ ▁ org . candlepin . common . filter . LoggingFilter ▁ - ▁ Response : ▁ status = 200 , ▁ content - type = " application / json " , ▁ time = 43 STRNEWLINE """ . strip ( ) NEW_LINE PROXY_LOG = """ STRNEWLINE 127.0.0.1 ▁ - ▁ - ▁ [ 31 / May / 2016:09:42:28 ▁ - 0400 ] ▁ " GET ▁ / puppet / environments / KT _ Encore _ Library _ RHEL _ 6_5 / classes ▁ HTTP / 1.1 " ▁ 200 ▁ 76785 ▁ 6.1205 STRNEWLINE 127.0.0.1 ▁ - ▁ - ▁ [ 31 / May / 2016:09:42:38 ▁ - 0400 ] ▁ " GET ▁ / puppet / environments / KT _ Encore _ Library _ RHEL _ 7_6 / classes ▁ HTTP / 1.1 " ▁ 200 ▁ 76785 ▁ 4.4754 STRNEWLINE 127.0.0.1 ▁ - ▁ - ▁ [ 31 / May / 2016:09:42:49 ▁ - 0400 ] ▁ " GET ▁ / puppet / environments / KT _ Encore _ Library _ RHEL6_8 / classes ▁ HTTP / 1.1 " ▁ 200 ▁ 76785 ▁ 4.5776 STRNEWLINE 127.0.0.1 ▁ - ▁ - ▁ [ 31 / May / 2016:09:57:34 ▁ - 0400 ] ▁ " GET ▁ / tftp / serverName ▁ HTTP / 1.1 " ▁ 200 ▁ 38 ▁ 0.0014 STRNEWLINE E , ▁ [ 2016-05-31T09:57:34.884636 ▁ # 4494 ] ▁ ERROR ▁ - - ▁ : ▁ Record ▁ 172.16.100.0/172.16.100.17 ▁ not ▁ found ▁ ] STRNEWLINE """ . strip ( ) NEW_LINE def test_production_log ( ) : NEW_LINE INDENT fm_log = ProductionLog ( context_wrap ( PRODUCTION_LOG ) ) NEW_LINE assert 2 == len ( fm_log . get ( " Rendered ▁ text ▁ template " ) ) NEW_LINE assert " Expired ▁ 48 ▁ Reports " in fm_log NEW_LINE assert fm_log . get ( " Completed ▁ 200 ▁ OK ▁ in ▁ 93" ) [ 0 ] == "2015-11-13 ▁ 09:41:58 ▁ [ I ] ▁ Completed ▁ 200 ▁ OK ▁ in ▁ 93ms ▁ ( Views : ▁ 2.9ms ▁ | ▁ ActiveRecord : ▁ 0.3ms ) " NEW_LINE DEDENT def test_proxy_log ( ) : NEW_LINE INDENT px_log = ProxyLog ( context_wrap ( PROXY_LOG ) ) NEW_LINE assert " ERROR ▁ - - ▁ " in px_log NEW_LINE assert len ( px_log . get ( " KT _ Encore _ Library _ RHEL " ) ) == 3 NEW_LINE DEDENT def test_candlepin_log ( ) : NEW_LINE INDENT cp_log = CandlepinLog ( context_wrap ( CANDLEPIN_LOG ) ) NEW_LINE assert " req = 49becd26-5dfe - 4d2f - 8667-470519230d88" in cp_log NEW_LINE assert len ( cp_log . get ( " req = bd5a4284 - d280-4fc5 - a3d5 - fc976b7aa5cc " ) ) == 2 NEW_LINE DEDENT def test_satellite_log ( ) : NEW_LINE INDENT sat_log = SatelliteLog ( context_wrap ( SATELLITE_OUT ) ) NEW_LINE assert " subscribes ▁ to ▁ Class [ Qpid ] " in sat_log NEW_LINE assert len ( sat_log . get ( " notify : ▁ subscribes ▁ to ▁ Class [ " ) ) == 7 NEW_LINE DEDENT </DOCUMENT>
<DOCUMENT_ID="adobe/chromium/tree/master/third_party/closure_linter/closure_linter/error_fixer.py"> # ! / usr / bin / env ▁ python ENDCOM # ▁ Copyright ▁ 2007 ▁ The ▁ Closure ▁ Linter ▁ Authors . ▁ All ▁ Rights ▁ Reserved . ENDCOM # ▁ Licensed ▁ under ▁ the ▁ Apache ▁ License , ▁ Version ▁ 2.0 ▁ ( the ▁ " License " ) ; ENDCOM # ▁ you ▁ may ▁ not ▁ use ▁ this ▁ file ▁ except ▁ in ▁ compliance ▁ with ▁ the ▁ License . ENDCOM # ▁ You ▁ may ▁ obtain ▁ a ▁ copy ▁ of ▁ the ▁ License ▁ at ENDCOM # ▁ http : / / www . apache . org / licenses / LICENSE - 2.0 ENDCOM # ▁ Unless ▁ required ▁ by ▁ applicable ▁ law ▁ or ▁ agreed ▁ to ▁ in ▁ writing , ▁ software ENDCOM # ▁ distributed ▁ under ▁ the ▁ License ▁ is ▁ distributed ▁ on ▁ an ▁ " AS - IS " ▁ BASIS , ENDCOM # ▁ WITHOUT ▁ WARRANTIES ▁ OR ▁ CONDITIONS ▁ OF ▁ ANY ▁ KIND , ▁ either ▁ express ▁ or ▁ implied . ENDCOM # ▁ See ▁ the ▁ License ▁ for ▁ the ▁ specific ▁ language ▁ governing ▁ permissions ▁ and ENDCOM # ▁ limitations ▁ under ▁ the ▁ License . ENDCOM """ Main ▁ class ▁ responsible ▁ for ▁ automatically ▁ fixing ▁ simple ▁ style ▁ violations . """ NEW_LINE __author__ = ' robbyw @ google . com ▁ ( Robert ▁ Walker ) ' NEW_LINE import re NEW_LINE import gflags as flags NEW_LINE from closure_linter import errors NEW_LINE from closure_linter import javascriptstatetracker NEW_LINE from closure_linter import javascripttokens NEW_LINE from closure_linter import requireprovidesorter NEW_LINE from closure_linter import tokenutil NEW_LINE from closure_linter . common import errorhandler NEW_LINE # ▁ Shorthand ENDCOM Token = javascripttokens . JavaScriptToken NEW_LINE Type = javascripttokens . JavaScriptTokenType NEW_LINE END_OF_FLAG_TYPE = re . compile ( r ' ( } ? \s * ) $ ' ) NEW_LINE # ▁ Regex ▁ to ▁ represent ▁ common ▁ mistake ▁ inverting ▁ author ▁ name ▁ and ▁ email ▁ as ENDCOM # ▁ @ author ▁ User ▁ Name ▁ ( user @ company ) ENDCOM INVERTED_AUTHOR_SPEC = re . compile ( r ' ( ? P < leading _ whitespace > \s * ) ' ' ( ? P < name > [ ^ ( ] + ) ' ' ( ? P < whitespace _ after _ name > \s + ) ' ' ( ? P < email > [ ^ \s ] + @ [ ^ ) \s ] + ) ' ' ( ? P < trailing _ characters > . * ) ' ) FLAGS = flags . FLAGS NEW_LINE flags . DEFINE_boolean ( ' disable _ indentation _ fixing ' , False , ' Whether ▁ to ▁ disable ▁ automatic ▁ fixing ▁ of ▁ indentation . ' ) NEW_LINE class ErrorFixer ( errorhandler . ErrorHandler ) : NEW_LINE INDENT """ Object ▁ that ▁ fixes ▁ simple ▁ style ▁ errors . """ NEW_LINE def __init__ ( self , external_file = None ) : NEW_LINE INDENT """ Initialize ▁ the ▁ error ▁ fixer . STRNEWLINE STRNEWLINE ▁ Args : STRNEWLINE ▁ external _ file : ▁ If ▁ included , ▁ all ▁ output ▁ will ▁ be ▁ directed ▁ to ▁ this ▁ file STRNEWLINE ▁ instead ▁ of ▁ overwriting ▁ the ▁ files ▁ the ▁ errors ▁ are ▁ found ▁ in . STRNEWLINE ▁ """ NEW_LINE errorhandler . ErrorHandler . __init__ ( self ) NEW_LINE self . _file_name = None NEW_LINE self . _file_token = None NEW_LINE self . _external_file = external_file NEW_LINE DEDENT def HandleFile ( self , filename , first_token ) : NEW_LINE INDENT """ Notifies ▁ this ▁ ErrorPrinter ▁ that ▁ subsequent ▁ errors ▁ are ▁ in ▁ filename . STRNEWLINE STRNEWLINE ▁ Args : STRNEWLINE ▁ filename : ▁ The ▁ name ▁ of ▁ the ▁ file ▁ about ▁ to ▁ be ▁ checked . STRNEWLINE ▁ first _ token : ▁ The ▁ first ▁ token ▁ in ▁ the ▁ file . STRNEWLINE ▁ """ NEW_LINE self . _file_name = filename NEW_LINE self . _file_token = first_token NEW_LINE self . _file_fix_count = 0 NEW_LINE self . _file_changed_lines = set ( ) NEW_LINE DEDENT def _AddFix ( self , tokens ) : NEW_LINE INDENT """ Adds ▁ the ▁ fix ▁ to ▁ the ▁ internal ▁ count . STRNEWLINE STRNEWLINE ▁ Args : STRNEWLINE ▁ tokens : ▁ The ▁ token ▁ or ▁ sequence ▁ of ▁ tokens ▁ changed ▁ to ▁ fix ▁ an ▁ error . STRNEWLINE ▁ """ NEW_LINE self . _file_fix_count += 1 NEW_LINE if hasattr ( tokens , ' line _ number ' ) : NEW_LINE INDENT self . _file_changed_lines . add ( tokens . line_number ) NEW_LINE DEDENT else : NEW_LINE INDENT for token in tokens : NEW_LINE INDENT self . _file_changed_lines . add ( token . line_number ) NEW_LINE DEDENT DEDENT DEDENT def HandleError ( self , error ) : NEW_LINE INDENT """ Attempts ▁ to ▁ fix ▁ the ▁ error . STRNEWLINE STRNEWLINE ▁ Args : STRNEWLINE ▁ error : ▁ The ▁ error ▁ object STRNEWLINE ▁ """ NEW_LINE code = error . code NEW_LINE token = error . token NEW_LINE if code == errors . JSDOC_PREFER_QUESTION_TO_PIPE_NULL : NEW_LINE INDENT iterator = token . attached_object . type_start_token NEW_LINE if iterator . type == Type . DOC_START_BRACE or iterator . string . isspace ( ) : NEW_LINE INDENT iterator = iterator . next NEW_LINE DEDENT leading_space = len ( iterator . string ) - len ( iterator . string . lstrip ( ) ) NEW_LINE iterator . string = ' % s ? % s ' % ( ' ▁ ' * leading_space , iterator . string . lstrip ( ) ) NEW_LINE # ▁ Cover ▁ the ▁ no ▁ outer ▁ brace ▁ case ▁ where ▁ the ▁ end ▁ token ▁ is ▁ part ▁ of ▁ the ▁ type . ENDCOM while iterator and iterator != token . attached_object . type_end_token . next : NEW_LINE INDENT iterator . string = iterator . string . replace ( ' null | ' , ' ' ) . replace ( ' | null ' , ' ' ) NEW_LINE iterator = iterator . next NEW_LINE # ▁ Create ▁ a ▁ new ▁ flag ▁ object ▁ with ▁ updated ▁ type ▁ info . ENDCOM DEDENT token . attached_object = javascriptstatetracker . JsDocFlag ( token ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . JSDOC_MISSING_OPTIONAL_TYPE : NEW_LINE INDENT iterator = token . attached_object . type_end_token NEW_LINE if iterator . type == Type . DOC_END_BRACE or iterator . string . isspace ( ) : NEW_LINE INDENT iterator = iterator . previous NEW_LINE DEDENT ending_space = len ( iterator . string ) - len ( iterator . string . rstrip ( ) ) NEW_LINE iterator . string = ' % s = % s ' % ( iterator . string . rstrip ( ) , ' ▁ ' * ending_space ) NEW_LINE # ▁ Create ▁ a ▁ new ▁ flag ▁ object ▁ with ▁ updated ▁ type ▁ info . ENDCOM token . attached_object = javascriptstatetracker . JsDocFlag ( token ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code in ( errors . MISSING_SEMICOLON_AFTER_FUNCTION , errors . MISSING_SEMICOLON ) : NEW_LINE INDENT semicolon_token = Token ( ' ; ' , Type . SEMICOLON , token . line , token . line_number ) NEW_LINE tokenutil . InsertTokenAfter ( semicolon_token , token ) NEW_LINE token . metadata . is_implied_semicolon = False NEW_LINE semicolon_token . metadata . is_implied_semicolon = False NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code in ( errors . ILLEGAL_SEMICOLON_AFTER_FUNCTION , errors . REDUNDANT_SEMICOLON , errors . COMMA_AT_END_OF_LITERAL ) : NEW_LINE INDENT tokenutil . DeleteToken ( token ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . INVALID_JSDOC_TAG : NEW_LINE INDENT if token . string == ' @ returns ' : NEW_LINE INDENT token . string = ' @ return ' NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT DEDENT elif code == errors . FILE_MISSING_NEWLINE : NEW_LINE # ▁ This ▁ error ▁ is ▁ fixed ▁ implicitly ▁ by ▁ the ▁ way ▁ we ▁ restore ▁ the ▁ file ENDCOM INDENT self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . MISSING_SPACE : NEW_LINE INDENT if error . position : NEW_LINE INDENT if error . position . IsAtBeginning ( ) : NEW_LINE INDENT tokenutil . InsertSpaceTokenAfter ( token . previous ) NEW_LINE DEDENT elif error . position . IsAtEnd ( token . string ) : NEW_LINE INDENT tokenutil . InsertSpaceTokenAfter ( token ) NEW_LINE DEDENT else : NEW_LINE INDENT token . string = error . position . Set ( token . string , ' ▁ ' ) NEW_LINE DEDENT self . _AddFix ( token ) NEW_LINE DEDENT DEDENT elif code == errors . EXTRA_SPACE : NEW_LINE INDENT if error . position : NEW_LINE INDENT token . string = error . position . Set ( token . string , ' ' ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT DEDENT elif code == errors . JSDOC_TAG_DESCRIPTION_ENDS_WITH_INVALID_CHARACTER : NEW_LINE INDENT token . string = error . position . Set ( token . string , ' . ' ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . MISSING_LINE : NEW_LINE INDENT if error . position . IsAtBeginning ( ) : NEW_LINE INDENT tokenutil . InsertBlankLineAfter ( token . previous ) NEW_LINE DEDENT else : NEW_LINE INDENT tokenutil . InsertBlankLineAfter ( token ) NEW_LINE DEDENT self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . EXTRA_LINE : NEW_LINE INDENT tokenutil . DeleteToken ( token ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT elif code == errors . WRONG_BLANK_LINE_COUNT : NEW_LINE INDENT if not token . previous : NEW_LINE # ▁ TODO ( user ) : ▁ Add ▁ an ▁ insertBefore ▁ method ▁ to ▁ tokenutil . ENDCOM INDENT return NEW_LINE DEDENT num_lines = error . fix_data NEW_LINE should_delete = False NEW_LINE if num_lines < 0 : NEW_LINE INDENT num_lines *= - 1 NEW_LINE should_delete = True NEW_LINE DEDENT for i in xrange ( 1 , num_lines + 1 ) : NEW_LINE INDENT if should_delete : NEW_LINE # ▁ TODO ( user ) : ▁ DeleteToken ▁ should ▁ update ▁ line ▁ numbers . ENDCOM INDENT tokenutil . DeleteToken ( token . previous ) NEW_LINE DEDENT else : NEW_LINE INDENT tokenutil . InsertBlankLineAfter ( token . previous ) NEW_LINE DEDENT self . _AddFix ( token ) NEW_LINE DEDENT DEDENT elif code == errors . UNNECESSARY_DOUBLE_QUOTED_STRING : NEW_LINE INDENT end_quote = tokenutil . Search ( token , Type . DOUBLE_QUOTE_STRING_END ) NEW_LINE if end_quote : NEW_LINE INDENT single_quote_start = Token ( " ' " , Type . SINGLE_QUOTE_STRING_START , token . line , token . line_number ) NEW_LINE single_quote_end = Token ( " ' " , Type . SINGLE_QUOTE_STRING_START , end_quote . line , token . line_number ) NEW_LINE tokenutil . InsertTokenAfter ( single_quote_start , token ) NEW_LINE tokenutil . InsertTokenAfter ( single_quote_end , end_quote ) NEW_LINE tokenutil . DeleteToken ( token ) NEW_LINE tokenutil . DeleteToken ( end_quote ) NEW_LINE self . _AddFix ( [ token , end_quote ] ) NEW_LINE DEDENT DEDENT elif code == errors . MISSING_BRACES_AROUND_TYPE : NEW_LINE INDENT fixed_tokens = [ ] NEW_LINE start_token = token . attached_object . type_start_token NEW_LINE if start_token . type != Type . DOC_START_BRACE : NEW_LINE INDENT leading_space = ( len ( start_token . string ) - len ( start_token . string . lstrip ( ) ) ) NEW_LINE if leading_space : NEW_LINE INDENT start_token = tokenutil . SplitToken ( start_token , leading_space ) NEW_LINE # ▁ Fix ▁ case ▁ where ▁ start ▁ and ▁ end ▁ token ▁ were ▁ the ▁ same . ENDCOM if token . attached_object . type_end_token == start_token . previous : NEW_LINE INDENT token . attached_object . type_end_token = start_token NEW_LINE DEDENT DEDENT new_token = Token ( ' { ' , Type . DOC_START_BRACE , start_token . line , start_token . line_number ) NEW_LINE tokenutil . InsertTokenAfter ( new_token , start_token . previous ) NEW_LINE token . attached_object . type_start_token = new_token NEW_LINE fixed_tokens . append ( new_token ) NEW_LINE DEDENT end_token = token . attached_object . type_end_token NEW_LINE if end_token . type != Type . DOC_END_BRACE : NEW_LINE # ▁ If ▁ the ▁ start ▁ token ▁ was ▁ a ▁ brace , ▁ the ▁ end ▁ token ▁ will ▁ be ▁ a ENDCOM # ▁ FLAG _ ENDING _ TYPE ▁ token , ▁ if ▁ there ▁ wasn ' t ▁ a ▁ starting ▁ brace ▁ then ENDCOM # ▁ the ▁ end ▁ token ▁ is ▁ the ▁ last ▁ token ▁ of ▁ the ▁ actual ▁ type . ENDCOM INDENT last_type = end_token NEW_LINE if not fixed_tokens : NEW_LINE INDENT last_type = end_token . previous NEW_LINE DEDENT while last_type . string . isspace ( ) : NEW_LINE INDENT last_type = last_type . previous NEW_LINE # ▁ If ▁ there ▁ was ▁ no ▁ starting ▁ brace ▁ then ▁ a ▁ lone ▁ end ▁ brace ▁ wouldn ' t ▁ have ENDCOM # ▁ been ▁ type ▁ end ▁ token . ▁ Now ▁ that ▁ we ' ve ▁ added ▁ any ▁ missing ▁ start ▁ brace , ENDCOM # ▁ see ▁ if ▁ the ▁ last ▁ effective ▁ type ▁ token ▁ was ▁ an ▁ end ▁ brace . ENDCOM DEDENT if last_type . type != Type . DOC_END_BRACE : NEW_LINE INDENT trailing_space = ( len ( last_type . string ) - len ( last_type . string . rstrip ( ) ) ) NEW_LINE if trailing_space : NEW_LINE INDENT tokenutil . SplitToken ( last_type , len ( last_type . string ) - trailing_space ) NEW_LINE DEDENT new_token = Token ( ' } ' , Type . DOC_END_BRACE , last_type . line , last_type . line_number ) NEW_LINE tokenutil . InsertTokenAfter ( new_token , last_type ) NEW_LINE token . attached_object . type_end_token = new_token NEW_LINE fixed_tokens . append ( new_token ) NEW_LINE DEDENT DEDENT self . _AddFix ( fixed_tokens ) NEW_LINE DEDENT elif code == errors . GOOG_REQUIRES_NOT_ALPHABETIZED : NEW_LINE INDENT require_start_token = error . fix_data NEW_LINE sorter = requireprovidesorter . RequireProvideSorter ( ) NEW_LINE sorter . FixRequires ( require_start_token ) NEW_LINE self . _AddFix ( require_start_token ) NEW_LINE DEDENT elif code == errors . GOOG_PROVIDES_NOT_ALPHABETIZED : NEW_LINE INDENT provide_start_token = error . fix_data NEW_LINE sorter = requireprovidesorter . RequireProvideSorter ( ) NEW_LINE sorter . FixProvides ( provide_start_token ) NEW_LINE self . _AddFix ( provide_start_token ) NEW_LINE DEDENT elif code == errors . UNNECESSARY_BRACES_AROUND_INHERIT_DOC : NEW_LINE INDENT if token . previous . string == ' { ' and token . next . string == ' } ' : NEW_LINE INDENT tokenutil . DeleteToken ( token . previous ) NEW_LINE tokenutil . DeleteToken ( token . next ) NEW_LINE self . _AddFix ( [ token ] ) NEW_LINE DEDENT DEDENT elif code == errors . INVALID_AUTHOR_TAG_DESCRIPTION : NEW_LINE INDENT match = INVERTED_AUTHOR_SPEC . match ( token . string ) NEW_LINE if match : NEW_LINE INDENT token . string = ' % s % s % s ( % s ) % s ' % ( match . group ( ' leading _ whitespace ' ) , match . group ( ' email ' ) , match . group ( ' whitespace _ after _ name ' ) , match . group ( ' name ' ) , match . group ( ' trailing _ characters ' ) ) NEW_LINE self . _AddFix ( token ) NEW_LINE DEDENT DEDENT elif ( code == errors . WRONG_INDENTATION and not FLAGS . disable_indentation_fixing ) : NEW_LINE INDENT token = tokenutil . GetFirstTokenInSameLine ( token ) NEW_LINE actual = error . position . start NEW_LINE expected = error . position . length NEW_LINE if token . type in ( Type . WHITESPACE , Type . PARAMETERS ) and actual != 0 : NEW_LINE INDENT token . string = token . string . lstrip ( ) + ( ' ▁ ' * expected ) NEW_LINE self . _AddFix ( [ token ] ) NEW_LINE DEDENT else : NEW_LINE # ▁ We ▁ need ▁ to ▁ add ▁ indentation . ENDCOM INDENT new_token = Token ( ' ▁ ' * expected , Type . WHITESPACE , token . line , token . line_number ) NEW_LINE # ▁ Note ▁ that ▁ we ' ll ▁ never ▁ need ▁ to ▁ add ▁ indentation ▁ at ▁ the ▁ first ▁ line , ENDCOM # ▁ since ▁ it ▁ will ▁ always ▁ not ▁ be ▁ indented . ▁ Therefore ▁ it ' s ▁ safe ▁ to ▁ assume ENDCOM # ▁ token . previous ▁ exists . ENDCOM tokenutil . InsertTokenAfter ( new_token , token . previous ) NEW_LINE self . _AddFix ( [ token ] ) NEW_LINE DEDENT DEDENT elif code in [ errors . MALFORMED_END_OF_SCOPE_COMMENT , errors . MISSING_END_OF_SCOPE_COMMENT ] : NEW_LINE # ▁ Only ▁ fix ▁ cases ▁ where ▁ } ) ; ▁ is ▁ found ▁ with ▁ no ▁ trailing ▁ content ▁ on ▁ the ▁ line ENDCOM # ▁ other ▁ than ▁ a ▁ comment . ▁ Value ▁ of ▁ ' token ' ▁ is ▁ set ▁ to ▁ } ▁ for ▁ this ▁ error . ENDCOM INDENT if ( token . type == Type . END_BLOCK and token . next . type == Type . END_PAREN and token . next . next . type == Type . SEMICOLON ) : NEW_LINE INDENT current_token = token . next . next . next NEW_LINE removed_tokens = [ ] NEW_LINE while current_token and current_token . line_number == token . line_number : NEW_LINE INDENT if current_token . IsAnyType ( Type . WHITESPACE , Type . START_SINGLE_LINE_COMMENT , Type . COMMENT ) : NEW_LINE INDENT removed_tokens . append ( current_token ) NEW_LINE current_token = current_token . next NEW_LINE DEDENT else : NEW_LINE INDENT return NEW_LINE DEDENT DEDENT if removed_tokens : NEW_LINE INDENT tokenutil . DeleteTokens ( removed_tokens [ 0 ] , len ( removed_tokens ) ) NEW_LINE DEDENT whitespace_token = Token ( ' ▁ ▁ ' , Type . WHITESPACE , token . line , token . line_number ) NEW_LINE start_comment_token = Token ( ' / / ' , Type . START_SINGLE_LINE_COMMENT , token . line , token . line_number ) NEW_LINE comment_token = Token ( ' ▁ goog . scope ' , Type . COMMENT , token . line , token . line_number ) NEW_LINE insertion_tokens = [ whitespace_token , start_comment_token , comment_token ] NEW_LINE tokenutil . InsertTokensAfter ( insertion_tokens , token . next . next ) NEW_LINE self . _AddFix ( removed_tokens + insertion_tokens ) NEW_LINE DEDENT DEDENT elif code in [ errors . EXTRA_GOOG_PROVIDE , errors . EXTRA_GOOG_REQUIRE ] : NEW_LINE INDENT tokens_in_line = tokenutil . GetAllTokensInSameLine ( token ) NEW_LINE tokenutil . DeleteTokens ( tokens_in_line [ 0 ] , len ( tokens_in_line ) ) NEW_LINE self . _AddFix ( tokens_in_line ) NEW_LINE DEDENT elif code in [ errors . MISSING_GOOG_PROVIDE , errors . MISSING_GOOG_REQUIRE ] : NEW_LINE INDENT is_provide = code == errors . MISSING_GOOG_PROVIDE NEW_LINE is_require = code == errors . MISSING_GOOG_REQUIRE NEW_LINE missing_namespaces = error . fix_data [ 0 ] NEW_LINE need_blank_line = error . fix_data [ 1 ] NEW_LINE if need_blank_line is None : NEW_LINE # ▁ TODO ( user ) : ▁ This ▁ happens ▁ when ▁ there ▁ are ▁ no ▁ existing ENDCOM # ▁ goog . provide ▁ or ▁ goog . require ▁ statements ▁ to ▁ position ▁ new ▁ statements ENDCOM # ▁ relative ▁ to . ▁ Consider ▁ handling ▁ this ▁ case ▁ with ▁ a ▁ heuristic . ENDCOM INDENT return NEW_LINE DEDENT insert_location = token . previous NEW_LINE # ▁ If ▁ inserting ▁ a ▁ missing ▁ require ▁ with ▁ no ▁ existing ▁ requires , ▁ insert ▁ a ENDCOM # ▁ blank ▁ line ▁ first . ENDCOM if need_blank_line and is_require : NEW_LINE INDENT tokenutil . InsertBlankLineAfter ( insert_location ) NEW_LINE insert_location = insert_location . next NEW_LINE DEDENT for missing_namespace in missing_namespaces : NEW_LINE INDENT new_tokens = self . _GetNewRequireOrProvideTokens ( is_provide , missing_namespace , insert_location . line_number + 1 ) NEW_LINE tokenutil . InsertLineAfter ( insert_location , new_tokens ) NEW_LINE insert_location = new_tokens [ - 1 ] NEW_LINE self . _AddFix ( new_tokens ) NEW_LINE # ▁ If ▁ inserting ▁ a ▁ missing ▁ provide ▁ with ▁ no ▁ existing ▁ provides , ▁ insert ▁ a ENDCOM # ▁ blank ▁ line ▁ after . ENDCOM DEDENT if need_blank_line and is_provide : NEW_LINE INDENT tokenutil . InsertBlankLineAfter ( insert_location ) NEW_LINE DEDENT DEDENT DEDENT def _GetNewRequireOrProvideTokens ( self , is_provide , namespace , line_number ) : NEW_LINE INDENT """ Returns ▁ a ▁ list ▁ of ▁ tokens ▁ to ▁ create ▁ a ▁ goog . require / provide ▁ statement . STRNEWLINE STRNEWLINE ▁ Args : STRNEWLINE ▁ is _ provide : ▁ True ▁ if ▁ getting ▁ tokens ▁ for ▁ a ▁ provide , ▁ False ▁ for ▁ require . STRNEWLINE ▁ namespace : ▁ The ▁ required ▁ or ▁ provided ▁ namespaces ▁ to ▁ get ▁ tokens ▁ for . STRNEWLINE ▁ line _ number : ▁ The ▁ line ▁ number ▁ the ▁ new ▁ require ▁ or ▁ provide ▁ statement ▁ will ▁ be STRNEWLINE ▁ on . STRNEWLINE STRNEWLINE ▁ Returns : STRNEWLINE ▁ Tokens ▁ to ▁ create ▁ a ▁ new ▁ goog . require ▁ or ▁ goog . provide ▁ statement . STRNEWLINE ▁ """ NEW_LINE string = ' goog . require ' NEW_LINE if is_provide : NEW_LINE INDENT string = ' goog . provide ' NEW_LINE DEDENT line_text = string + ' ( \ ' ' + namespace + ' \ ' ) ; \n ' NEW_LINE return [ Token ( string , Type . IDENTIFIER , line_text , line_number ) , Token ( ' ( ' , Type . START_PAREN , line_text , line_number ) , Token ( ' \ ' ' , Type . SINGLE_QUOTE_STRING_START , line_text , line_number ) , Token ( namespace , Type . STRING_TEXT , line_text , line_number ) , Token ( ' \ ' ' , Type . SINGLE_QUOTE_STRING_END , line_text , line_number ) , Token ( ' ) ' , Type . END_PAREN , line_text , line_number ) , Token ( ' ; ' , Type . SEMICOLON , line_text , line_number ) ] NEW_LINE DEDENT def FinishFile ( self ) : NEW_LINE INDENT """ Called ▁ when ▁ the ▁ current ▁ file ▁ has ▁ finished ▁ style ▁ checking . STRNEWLINE STRNEWLINE ▁ Used ▁ to ▁ go ▁ back ▁ and ▁ fix ▁ any ▁ errors ▁ in ▁ the ▁ file . STRNEWLINE ▁ """ NEW_LINE if self . _file_fix_count : NEW_LINE INDENT f = self . _external_file NEW_LINE if not f : NEW_LINE INDENT print ' Fixed ▁ % d ▁ errors ▁ in ▁ % s ' % ( self . _file_fix_count , self . _file_name ) NEW_LINE f = open ( self . _file_name , ' w ' ) NEW_LINE DEDENT token = self . _file_token NEW_LINE char_count = 0 NEW_LINE while token : NEW_LINE INDENT f . write ( token . string ) NEW_LINE char_count += len ( token . string ) NEW_LINE if token . IsLastInLine ( ) : NEW_LINE INDENT f . write ( ' \n ' ) NEW_LINE if char_count > 80 and token . line_number in self . _file_changed_lines : NEW_LINE INDENT print ' WARNING : ▁ Line ▁ % d ▁ of ▁ % s ▁ is ▁ now ▁ longer ▁ than ▁ 80 ▁ characters . ' % ( token . line_number , self . _file_name ) NEW_LINE DEDENT char_count = 0 NEW_LINE DEDENT token = token . next NEW_LINE DEDENT if not self . _external_file : NEW_LINE # ▁ Close ▁ the ▁ file ▁ if ▁ we ▁ created ▁ it ENDCOM INDENT f . close ( ) NEW_LINE DEDENT DEDENT DEDENT DEDENT </DOCUMENT>
<DOCUMENT_ID="petecummings/django-cms/tree/master/cms/south_migrations/0015_modified_by_added.py"> # ▁ - * - ▁ coding : ▁ utf - 8 ▁ - * - ENDCOM import datetime NEW_LINE from south . db import db NEW_LINE from south . v2 import SchemaMigration NEW_LINE from django . db import models NEW_LINE try : NEW_LINE INDENT from django . contrib . auth import get_user_model NEW_LINE DEDENT except ImportError : # ▁ django ▁ < ▁ 1.5 ENDCOM NEW_LINE INDENT from django . contrib . auth . models import User NEW_LINE DEDENT else : NEW_LINE INDENT User = get_user_model ( ) NEW_LINE DEDENT user_orm_label = ' % s . % s ' % ( User . _meta . app_label , User . _meta . object_name ) NEW_LINE user_model_label = ' % s . % s ' % ( User . _meta . app_label , User . _meta . model_name ) NEW_LINE user_ptr_name = ' % s _ ptr ' % User . _meta . object_name . lower ( ) NEW_LINE class Migration ( SchemaMigration ) : NEW_LINE INDENT def forwards ( self , orm ) : NEW_LINE # ▁ Dummy ▁ migration ENDCOM INDENT pass NEW_LINE DEDENT def backwards ( self , orm ) : NEW_LINE # ▁ Dummy ▁ migration ENDCOM INDENT pass NEW_LINE DEDENT models = { ' auth . group ' : { ' Meta ' : { ' object _ name ' : ' Group ' } , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' unique ' : ' True ' , ' max _ length ' : '80' } ) , ' permissions ' : ( ' django . db . models . fields . related . ManyToManyField ' , [ ] , { ' to ' : " orm [ ' auth . Permission ' ] " , ' symmetrical ' : ' False ' , ' blank ' : ' True ' } ) } , ' auth . permission ' : { ' Meta ' : { ' ordering ' : " ( ' content _ type _ _ app _ label ' , ▁ ' content _ type _ _ model ' , ▁ ' codename ' ) " , ' unique _ together ' : " ( ( ' content _ type ' , ▁ ' codename ' ) , ) " , ' object _ name ' : ' Permission ' } , ' codename ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) , ' content _ type ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' contenttypes . ContentType ' ] " } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '50' } ) } , user_model_label : { ' Meta ' : { ' object _ name ' : User . __name__ , ' db _ table ' : " ' % s ' " % User . _meta . db_table } , ' date _ joined ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' default ' : ' datetime . datetime . now ' } ) , ' email ' : ( ' django . db . models . fields . EmailField ' , [ ] , { ' max _ length ' : '75' , ' blank ' : ' True ' } ) , ' first _ name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '30' , ' blank ' : ' True ' } ) , ' groups ' : ( ' django . db . models . fields . related . ManyToManyField ' , [ ] , { ' to ' : " orm [ ' auth . Group ' ] " , ' symmetrical ' : ' False ' , ' blank ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' is _ active ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' is _ staff ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' is _ superuser ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' last _ login ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' default ' : ' datetime . datetime . now ' } ) , ' last _ name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '30' , ' blank ' : ' True ' } ) , ' password ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '128' } ) , ' user _ permissions ' : ( ' django . db . models . fields . related . ManyToManyField ' , [ ] , { ' to ' : " orm [ ' auth . Permission ' ] " , ' symmetrical ' : ' False ' , ' blank ' : ' True ' } ) , ' username ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' unique ' : ' True ' , ' max _ length ' : '30' } ) } , ' cms . cmsplugin ' : { ' Meta ' : { ' object _ name ' : ' CMSPlugin ' } , ' changed _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' auto _ now ' : ' True ' , ' blank ' : ' True ' } ) , ' creation _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' default ' : ' datetime . datetime . now ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' language ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '15' , ' db _ index ' : ' True ' } ) , ' level ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' lft ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' parent ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' cms . CMSPlugin ' ] " , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' placeholder ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' cms . Placeholder ' ] " , ' null ' : ' True ' } ) , ' plugin _ type ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '50' , ' db _ index ' : ' True ' } ) , ' position ' : ( ' django . db . models . fields . PositiveSmallIntegerField ' , [ ] , { ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' rght ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' tree _ id ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) } , ' cms . globalpagepermission ' : { ' Meta ' : { ' object _ name ' : ' GlobalPagePermission ' } , ' can _ add ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ change ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ change _ advanced _ settings ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' can _ change _ permissions ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' can _ delete ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ moderate ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ move _ page ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ publish ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ recover _ page ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ view ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' group ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' auth . Group ' ] " , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' sites ' : ( ' django . db . models . fields . related . ManyToManyField ' , [ ] , { ' symmetrical ' : ' False ' , ' to ' : " orm [ ' sites . Site ' ] " , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' user ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' % s ' ] " % user_orm_label , ' null ' : ' True ' , ' blank ' : ' True ' } ) } , ' cms . page ' : { ' Meta ' : { ' ordering ' : " ( ' site ' , ▁ ' tree _ id ' , ▁ ' lft ' ) " , ' object _ name ' : ' Page ' } , ' changed _ by ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '70' } ) , ' changed _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' auto _ now ' : ' True ' , ' blank ' : ' True ' } ) , ' created _ by ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '70' } ) , ' creation _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' auto _ now _ add ' : ' True ' , ' blank ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' in _ navigation ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' , ' db _ index ' : ' True ' } ) , ' level ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' lft ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' limit _ visibility _ in _ menu ' : ( ' django . db . models . fields . SmallIntegerField ' , [ ] , { ' default ' : ' None ' , ' null ' : ' True ' , ' db _ index ' : ' True ' , ' blank ' : ' True ' } ) , ' login _ required ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' moderator _ state ' : ( ' django . db . models . fields . SmallIntegerField ' , [ ] , { ' default ' : '1' , ' blank ' : ' True ' } ) , ' navigation _ extenders ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' db _ index ' : ' True ' , ' max _ length ' : '80' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' parent ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' blank ' : ' True ' , ' related _ name ' : " ' children ' " , ' null ' : ' True ' , ' to ' : " orm [ ' cms . Page ' ] " } ) , ' placeholders ' : ( ' django . db . models . fields . related . ManyToManyField ' , [ ] , { ' to ' : " orm [ ' cms . Placeholder ' ] " , ' symmetrical ' : ' False ' } ) , ' publication _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' db _ index ' : ' True ' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' publication _ end _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' db _ index ' : ' True ' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' published ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' publisher _ is _ draft ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' , ' db _ index ' : ' True ' } ) , ' publisher _ public ' : ( ' django . db . models . fields . related . OneToOneField ' , [ ] , { ' related _ name ' : " ' publisher _ draft ' " , ' unique ' : ' True ' , ' null ' : ' True ' , ' to ' : " orm [ ' cms . Page ' ] " } ) , ' publisher _ state ' : ( ' django . db . models . fields . SmallIntegerField ' , [ ] , { ' default ' : '0' , ' db _ index ' : ' True ' } ) , ' reverse _ id ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' db _ index ' : ' True ' , ' max _ length ' : '40' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' rght ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) , ' site ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' sites . Site ' ] " } ) , ' soft _ root ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' , ' db _ index ' : ' True ' } ) , ' template ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) , ' tree _ id ' : ( ' django . db . models . fields . PositiveIntegerField ' , [ ] , { ' db _ index ' : ' True ' } ) } , ' cms . pagemoderator ' : { ' Meta ' : { ' object _ name ' : ' PageModerator ' } , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' moderate _ children ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' moderate _ descendants ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' moderate _ page ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' page ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' cms . Page ' ] " } ) , ' user ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' % s ' ] " % user_orm_label } ) } , ' cms . pagemoderatorstate ' : { ' Meta ' : { ' ordering ' : " ( ' page ' , ▁ ' action ' , ▁ ' - created ' ) " , ' object _ name ' : ' PageModeratorState ' } , ' action ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '3' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' created ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' auto _ now _ add ' : ' True ' , ' blank ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' message ' : ( ' django . db . models . fields . TextField ' , [ ] , { ' default ' : " ' ' " , ' max _ length ' : '1000' , ' blank ' : ' True ' } ) , ' page ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' cms . Page ' ] " } ) , ' user ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' % s ' ] " % user_orm_label , ' null ' : ' True ' } ) } , ' cms . pagepermission ' : { ' Meta ' : { ' object _ name ' : ' PagePermission ' } , ' can _ add ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ change ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ change _ advanced _ settings ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' can _ change _ permissions ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' can _ delete ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ moderate ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ move _ page ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ publish ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' True ' } ) , ' can _ view ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' } ) , ' grant _ on ' : ( ' django . db . models . fields . IntegerField ' , [ ] , { ' default ' : '5' } ) , ' group ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' auth . Group ' ] " , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' page ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' cms . Page ' ] " , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' user ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' to ' : " orm [ ' % s ' ] " % user_orm_label , ' null ' : ' True ' , ' blank ' : ' True ' } ) } , ' cms . pageuser ' : { ' Meta ' : { ' object _ name ' : ' PageUser ' , ' _ ormbases ' : [ user_orm_label ] } , ' created _ by ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' related _ name ' : " ' created _ users ' " , ' to ' : " orm [ ' % s ' ] " % user_orm_label } ) , ' user _ ptr ' : ( ' django . db . models . fields . related . OneToOneField ' , [ ] , { ' to ' : " orm [ ' % s ' ] " % user_orm_label , ' unique ' : ' True ' , ' primary _ key ' : ' True ' } ) } , ' cms . pageusergroup ' : { ' Meta ' : { ' object _ name ' : ' PageUserGroup ' , ' _ ormbases ' : [ ' auth . Group ' ] } , ' created _ by ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' related _ name ' : " ' created _ usergroups ' " , ' to ' : " orm [ ' % s ' ] " % user_orm_label } ) , ' group _ ptr ' : ( ' django . db . models . fields . related . OneToOneField ' , [ ] , { ' to ' : " orm [ ' auth . Group ' ] " , ' unique ' : ' True ' , ' primary _ key ' : ' True ' } ) } , ' cms . placeholder ' : { ' Meta ' : { ' object _ name ' : ' Placeholder ' } , ' default _ width ' : ( ' django . db . models . fields . PositiveSmallIntegerField ' , [ ] , { ' null ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' slot ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '50' , ' db _ index ' : ' True ' } ) } , ' cms . title ' : { ' Meta ' : { ' unique _ together ' : " ( ( ' language ' , ▁ ' page ' ) , ) " , ' object _ name ' : ' Title ' } , ' application _ urls ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' db _ index ' : ' True ' , ' max _ length ' : '200' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' creation _ date ' : ( ' django . db . models . fields . DateTimeField ' , [ ] , { ' default ' : ' datetime . datetime . now ' } ) , ' has _ url _ overwrite ' : ( ' django . db . models . fields . BooleanField ' , [ ] , { ' default ' : ' False ' , ' db _ index ' : ' True ' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' language ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '15' , ' db _ index ' : ' True ' } ) , ' menu _ title ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' meta _ description ' : ( ' django . db . models . fields . TextField ' , [ ] , { ' max _ length ' : '255' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' meta _ keywords ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' page ' : ( ' django . db . models . fields . related . ForeignKey ' , [ ] , { ' related _ name ' : " ' title _ set ' " , ' to ' : " orm [ ' cms . Page ' ] " } ) , ' page _ title ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' path ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' , ' db _ index ' : ' True ' } ) , ' redirect ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' , ' null ' : ' True ' , ' blank ' : ' True ' } ) , ' slug ' : ( ' django . db . models . fields . SlugField ' , [ ] , { ' max _ length ' : '255' } ) , ' title ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '255' } ) } , ' contenttypes . contenttype ' : { ' Meta ' : { ' ordering ' : " ( ' name ' , ) " , ' unique _ together ' : " ( ( ' app _ label ' , ▁ ' model ' ) , ) " , ' object _ name ' : ' ContentType ' , ' db _ table ' : " ' django _ content _ type ' " } , ' app _ label ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' model ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) , ' name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) } , ' sites . site ' : { ' Meta ' : { ' ordering ' : " ( ' domain ' , ) " , ' object _ name ' : ' Site ' , ' db _ table ' : " ' django _ site ' " } , ' domain ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '100' } ) , ' id ' : ( ' django . db . models . fields . AutoField ' , [ ] , { ' primary _ key ' : ' True ' } ) , ' name ' : ( ' django . db . models . fields . CharField ' , [ ] , { ' max _ length ' : '50' } ) } } NEW_LINE complete_apps = [ ' cms ' ] NEW_LINE DEDENT </DOCUMENT>
<DOCUMENT_ID="xianjunzhengbackup/Cloud-Native-Python/tree/master/env/lib/python3.6/site-packages/pip/_vendor/progress/__init__.py"> # ▁ Copyright ▁ ( c ) ▁ 2012 ▁ Giorgos ▁ Verigakis ▁ < verigak @ gmail . com > ENDCOM # ▁ Permission ▁ to ▁ use , ▁ copy , ▁ modify , ▁ and ▁ distribute ▁ this ▁ software ▁ for ▁ any ENDCOM # ▁ purpose ▁ with ▁ or ▁ without ▁ fee ▁ is ▁ hereby ▁ granted , ▁ provided ▁ that ▁ the ▁ above ENDCOM # ▁ copyright ▁ notice ▁ and ▁ this ▁ permission ▁ notice ▁ appear ▁ in ▁ all ▁ copies . ENDCOM # ▁ THE ▁ SOFTWARE ▁ IS ▁ PROVIDED ▁ " AS ▁ IS " ▁ AND ▁ THE ▁ AUTHOR ▁ DISCLAIMS ▁ ALL ▁ WARRANTIES ENDCOM # ▁ WITH ▁ REGARD ▁ TO ▁ THIS ▁ SOFTWARE ▁ INCLUDING ▁ ALL ▁ IMPLIED ▁ WARRANTIES ▁ OF ENDCOM # ▁ MERCHANTABILITY ▁ AND ▁ FITNESS . ▁ IN ▁ NO ▁ EVENT ▁ SHALL ▁ THE ▁ AUTHOR ▁ BE ▁ LIABLE ▁ FOR ENDCOM # ▁ ANY ▁ SPECIAL , ▁ DIRECT , ▁ INDIRECT , ▁ OR ▁ CONSEQUENTIAL ▁ DAMAGES ▁ OR ▁ ANY ▁ DAMAGES ENDCOM # ▁ WHATSOEVER ▁ RESULTING ▁ FROM ▁ LOSS ▁ OF ▁ USE , ▁ DATA ▁ OR ▁ PROFITS , ▁ WHETHER ▁ IN ▁ AN ENDCOM # ▁ ACTION ▁ OF ▁ CONTRACT , ▁ NEGLIGENCE ▁ OR ▁ OTHER ▁ TORTIOUS ▁ ACTION , ▁ ARISING ▁ OUT ▁ OF ENDCOM # ▁ OR ▁ IN ▁ CONNECTION ▁ WITH ▁ THE ▁ USE ▁ OR ▁ PERFORMANCE ▁ OF ▁ THIS ▁ SOFTWARE . ENDCOM from __future__ import division NEW_LINE from collections import deque NEW_LINE from datetime import timedelta NEW_LINE from math import ceil NEW_LINE from sys import stderr NEW_LINE from time import time NEW_LINE __version__ = '1.2' NEW_LINE class Infinite ( object ) : NEW_LINE INDENT file = stderr NEW_LINE sma_window = 10 NEW_LINE def __init__ ( self , * args , ** kwargs ) : NEW_LINE INDENT self . index = 0 NEW_LINE self . start_ts = time ( ) NEW_LINE self . _ts = self . start_ts NEW_LINE self . _dt = deque ( maxlen = self . sma_window ) NEW_LINE for key , val in kwargs . items ( ) : NEW_LINE INDENT setattr ( self , key , val ) NEW_LINE DEDENT DEDENT def __getitem__ ( self , key ) : NEW_LINE INDENT if key . startswith ( ' _ ' ) : NEW_LINE INDENT return None NEW_LINE DEDENT return getattr ( self , key , None ) NEW_LINE DEDENT @ property NEW_LINE def avg ( self ) : NEW_LINE INDENT return sum ( self . _dt ) / len ( self . _dt ) if self . _dt else 0 NEW_LINE DEDENT @ property NEW_LINE def elapsed ( self ) : NEW_LINE INDENT return int ( time ( ) - self . start_ts ) NEW_LINE DEDENT @ property NEW_LINE def elapsed_td ( self ) : NEW_LINE INDENT return timedelta ( seconds = self . elapsed ) NEW_LINE DEDENT def update ( self ) : NEW_LINE INDENT pass NEW_LINE DEDENT def start ( self ) : NEW_LINE INDENT pass NEW_LINE DEDENT def finish ( self ) : NEW_LINE INDENT pass NEW_LINE DEDENT def next ( self , n = 1 ) : NEW_LINE INDENT if n > 0 : NEW_LINE INDENT now = time ( ) NEW_LINE dt = ( now - self . _ts ) / n NEW_LINE self . _dt . append ( dt ) NEW_LINE self . _ts = now NEW_LINE DEDENT self . index = self . index + n NEW_LINE self . update ( ) NEW_LINE DEDENT def iter ( self , it ) : NEW_LINE INDENT for x in it : NEW_LINE INDENT yield x NEW_LINE self . next ( ) NEW_LINE DEDENT self . finish ( ) NEW_LINE DEDENT DEDENT class Progress ( Infinite ) : NEW_LINE INDENT def __init__ ( self , * args , ** kwargs ) : NEW_LINE INDENT super ( Progress , self ) . __init__ ( * args , ** kwargs ) NEW_LINE self . max = kwargs . get ( ' max ' , 100 ) NEW_LINE DEDENT @ property NEW_LINE def eta ( self ) : NEW_LINE INDENT return int ( ceil ( self . avg * self . remaining ) ) NEW_LINE DEDENT @ property NEW_LINE def eta_td ( self ) : NEW_LINE INDENT return timedelta ( seconds = self . eta ) NEW_LINE DEDENT @ property NEW_LINE def percent ( self ) : NEW_LINE INDENT return self . progress * 100 NEW_LINE DEDENT @ property NEW_LINE def progress ( self ) : NEW_LINE INDENT return min ( 1 , self . index / self . max ) NEW_LINE DEDENT @ property NEW_LINE def remaining ( self ) : NEW_LINE INDENT return max ( self . max - self . index , 0 ) NEW_LINE DEDENT def start ( self ) : NEW_LINE INDENT self . update ( ) NEW_LINE DEDENT def goto ( self , index ) : NEW_LINE INDENT incr = index - self . index NEW_LINE self . next ( incr ) NEW_LINE DEDENT def iter ( self , it ) : NEW_LINE INDENT try : NEW_LINE INDENT self . max = len ( it ) NEW_LINE DEDENT except TypeError : NEW_LINE INDENT pass NEW_LINE DEDENT for x in it : NEW_LINE INDENT yield x NEW_LINE self . next ( ) NEW_LINE DEDENT self . finish ( ) NEW_LINE DEDENT DEDENT </DOCUMENT>
<DOCUMENT_ID="yatinkumbhare/openstack-nova/tree/master/nova/db/sqlalchemy/migrate_repo/versions/284_placeholder.py"> # ▁ Licensed ▁ under ▁ the ▁ Apache ▁ License , ▁ Version ▁ 2.0 ▁ ( the ▁ " License " ) ; ▁ you ▁ may ENDCOM # ▁ not ▁ use ▁ this ▁ file ▁ except ▁ in ▁ compliance ▁ with ▁ the ▁ License . ▁ You ▁ may ▁ obtain ENDCOM # ▁ a ▁ copy ▁ of ▁ the ▁ License ▁ at ENDCOM # ▁ http : / / www . apache . org / licenses / LICENSE - 2.0 ENDCOM # ▁ Unless ▁ required ▁ by ▁ applicable ▁ law ▁ or ▁ agreed ▁ to ▁ in ▁ writing , ▁ software ENDCOM # ▁ distributed ▁ under ▁ the ▁ License ▁ is ▁ distributed ▁ on ▁ an ▁ " AS ▁ IS " ▁ BASIS , ▁ WITHOUT ENDCOM # ▁ WARRANTIES ▁ OR ▁ CONDITIONS ▁ OF ▁ ANY ▁ KIND , ▁ either ▁ express ▁ or ▁ implied . ▁ See ▁ the ENDCOM # ▁ License ▁ for ▁ the ▁ specific ▁ language ▁ governing ▁ permissions ▁ and ▁ limitations ENDCOM # ▁ under ▁ the ▁ License . ENDCOM # ▁ This ▁ is ▁ a ▁ placeholder ▁ for ▁ Kilo ▁ backports . ENDCOM # ▁ Do ▁ not ▁ use ▁ this ▁ number ▁ for ▁ new ▁ Liberty ▁ work . ▁ New ▁ work ▁ starts ▁ after ENDCOM # ▁ all ▁ the ▁ placeholders . ENDCOM # ▁ See ▁ this ▁ for ▁ more ▁ information : ENDCOM # ▁ http : / / lists . openstack . org / pipermail / openstack - dev / 2013 - March / 006827 . html ENDCOM def upgrade ( migrate_engine ) : NEW_LINE INDENT pass NEW_LINE DEDENT </DOCUMENT>
<DOCUMENT_ID="rjschwei/azure-sdk-for-python/tree/master/azure-mgmt-logic/azure/mgmt/logic/models/generate_upgraded_definition_parameters.py"> # ▁ coding = utf - 8 ENDCOM # ▁ Copyright ▁ ( c ) ▁ Microsoft ▁ Corporation . ▁ All ▁ rights ▁ reserved . ENDCOM # ▁ Licensed ▁ under ▁ the ▁ MIT ▁ License . ▁ See ▁ License . txt ▁ in ▁ the ▁ project ▁ root ▁ for ENDCOM # ▁ license ▁ information . ENDCOM # ▁ Code ▁ generated ▁ by ▁ Microsoft ▁ ( R ) ▁ AutoRest ▁ Code ▁ Generator . ENDCOM # ▁ Changes ▁ may ▁ cause ▁ incorrect ▁ behavior ▁ and ▁ will ▁ be ▁ lost ▁ if ▁ the ▁ code ▁ is ENDCOM # ▁ regenerated . ENDCOM from msrest . serialization import Model NEW_LINE class GenerateUpgradedDefinitionParameters ( Model ) : NEW_LINE INDENT """ GenerateUpgradedDefinitionParameters . STRNEWLINE STRNEWLINE ▁ : param ▁ target _ schema _ version : ▁ The ▁ target ▁ schema ▁ version . STRNEWLINE ▁ : type ▁ target _ schema _ version : ▁ str STRNEWLINE ▁ """ NEW_LINE _attribute_map = { ' target _ schema _ version ' : { ' key ' : ' targetSchemaVersion ' , ' type ' : ' str ' } , } NEW_LINE def __init__ ( self , target_schema_version = None ) : NEW_LINE INDENT self . target_schema_version = target_schema_version NEW_LINE DEDENT DEDENT </DOCUMENT>
<DOCUMENT_ID="mluo613/osf.io/tree/master/scripts/update_comments.py"> """ STRNEWLINE Update ▁ User . comments _ viewed _ timestamp ▁ field . STRNEWLINE """ NEW_LINE import logging NEW_LINE import sys NEW_LINE from modularodm import Q NEW_LINE from framework . auth . core import User NEW_LINE from framework . transactions . context import TokuTransaction NEW_LINE from website . models import Comment NEW_LINE from website . app import init_app NEW_LINE from scripts import utils as script_utils NEW_LINE logger = logging . getLogger ( __name__ ) NEW_LINE def main ( ) : NEW_LINE INDENT update_comments_viewed_timestamp ( ) NEW_LINE DEDENT def update_comments_viewed_timestamp ( ) : NEW_LINE INDENT users = User . find ( Q ( ' comments _ viewed _ timestamp ' , ' ne ' , None ) & Q ( ' comments _ viewed _ timestamp ' , ' ne ' , { } ) ) NEW_LINE for user in users : NEW_LINE INDENT if user . comments_viewed_timestamp : NEW_LINE INDENT timestamps = { } NEW_LINE for node_id in user . comments_viewed_timestamp : NEW_LINE INDENT node_timestamps = user . comments_viewed_timestamp [ node_id ] NEW_LINE # ▁ node ▁ timestamp ENDCOM if node_timestamps . get ( ' node ' , None ) : NEW_LINE INDENT timestamps [ node_id ] = node_timestamps [ ' node ' ] NEW_LINE # ▁ file ▁ timestamps ENDCOM DEDENT file_timestamps = node_timestamps . get ( ' files ' , None ) NEW_LINE if file_timestamps : NEW_LINE INDENT for file_id in file_timestamps : NEW_LINE INDENT timestamps [ file_id ] = file_timestamps [ file_id ] NEW_LINE DEDENT DEDENT DEDENT user . comments_viewed_timestamp = timestamps NEW_LINE user . save ( ) NEW_LINE logger . info ( ' Migrated ▁ timestamp ▁ for ▁ user ▁ { 0 } ' . format ( user . _id ) ) NEW_LINE DEDENT DEDENT DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT dry = ' - - dry ' in sys . argv NEW_LINE if not dry : NEW_LINE INDENT script_utils . add_file_logger ( logger , __file__ ) NEW_LINE DEDENT init_app ( routes = False , set_backends = True ) NEW_LINE with TokuTransaction ( ) : NEW_LINE INDENT main ( ) NEW_LINE if dry : NEW_LINE INDENT raise Exception ( ' Dry ▁ Run ▁ - - ▁ Aborting ▁ Transaction ' ) NEW_LINE DEDENT DEDENT DEDENT </DOCUMENT>
<DOCUMENT_ID="chouseknecht/ansible/tree/master/lib/ansible/module_utils/network/eos/argspec/facts/facts.py"> # ▁ - * - ▁ coding : ▁ utf - 8 ▁ - * - ENDCOM # ▁ Copyright ▁ 2019 ▁ Red ▁ Hat ENDCOM # ▁ GNU ▁ General ▁ Public ▁ License ▁ v3.0 + ▁ ( see ▁ COPYING ▁ or ▁ https : / / www . gnu . org / licenses / gpl - 3.0 . txt ) ENDCOM """ STRNEWLINE The ▁ arg ▁ spec ▁ for ▁ the ▁ eos ▁ facts ▁ module . STRNEWLINE """ NEW_LINE from __future__ import ( absolute_import , division , print_function ) NEW_LINE __metaclass__ = type NEW_LINE class FactsArgs ( object ) : NEW_LINE INDENT """ ▁ The ▁ arg ▁ spec ▁ for ▁ the ▁ eos ▁ facts ▁ module STRNEWLINE ▁ """ NEW_LINE def __init__ ( self , ** kwargs ) : NEW_LINE INDENT pass NEW_LINE DEDENT argument_spec = { ' gather _ subset ' : dict ( default = [ ' ! config ' ] , type = ' list ' ) , ' gather _ network _ resources ' : dict ( type = ' list ' ) , } NEW_LINE DEDENT </DOCUMENT>
<DOCUMENT_ID="kcompher/BuildingMachineLearningSystemsWithPython/tree/master/ch03/rel_post_01.py"> # ▁ This ▁ code ▁ is ▁ supporting ▁ material ▁ for ▁ the ▁ book ENDCOM # ▁ Building ▁ Machine ▁ Learning ▁ Systems ▁ with ▁ Python ENDCOM # ▁ by ▁ Willi ▁ Richert ▁ and ▁ Luis ▁ Pedro ▁ Coelho ENDCOM # ▁ published ▁ by ▁ PACKT ▁ Publishing ENDCOM # ▁ It ▁ is ▁ made ▁ available ▁ under ▁ the ▁ MIT ▁ License ENDCOM import os NEW_LINE import sys NEW_LINE import scipy as sp NEW_LINE from sklearn . feature_extraction . text import CountVectorizer NEW_LINE DIR = r " . . / data / toy " NEW_LINE posts = [ open ( os . path . join ( DIR , f ) ) . read ( ) for f in os . listdir ( DIR ) ] NEW_LINE new_post = " imaging ▁ databases " NEW_LINE import nltk . stem NEW_LINE english_stemmer = nltk . stem . SnowballStemmer ( ' english ' ) NEW_LINE class StemmedCountVectorizer ( CountVectorizer ) : NEW_LINE INDENT def build_analyzer ( self ) : NEW_LINE INDENT analyzer = super ( StemmedCountVectorizer , self ) . build_analyzer ( ) NEW_LINE return lambda doc : ( english_stemmer . stem ( w ) for w in analyzer ( doc ) ) NEW_LINE # ▁ vectorizer ▁ = ▁ CountVectorizer ( min _ df = 1 , ▁ stop _ words = ' english ' , ENDCOM # ▁ preprocessor = stemmer ) ENDCOM DEDENT DEDENT vectorizer = StemmedCountVectorizer ( min_df = 1 , stop_words = ' english ' ) NEW_LINE from sklearn . feature_extraction . text import TfidfVectorizer NEW_LINE class StemmedTfidfVectorizer ( TfidfVectorizer ) : NEW_LINE INDENT def build_analyzer ( self ) : NEW_LINE INDENT analyzer = super ( StemmedTfidfVectorizer , self ) . build_analyzer ( ) NEW_LINE return lambda doc : ( english_stemmer . stem ( w ) for w in analyzer ( doc ) ) NEW_LINE DEDENT DEDENT vectorizer = StemmedTfidfVectorizer ( min_df = 1 , stop_words = ' english ' , charset_error = ' ignore ' ) NEW_LINE print ( vectorizer ) NEW_LINE X_train = vectorizer . fit_transform ( posts ) NEW_LINE num_samples , num_features = X_train . shape NEW_LINE print ( " # samples : ▁ % d , ▁ # features : ▁ % d " % ( num_samples , num_features ) ) NEW_LINE new_post_vec = vectorizer . transform ( [ new_post ] ) NEW_LINE print ( new_post_vec , type ( new_post_vec ) ) NEW_LINE print ( new_post_vec . toarray ( ) ) NEW_LINE print ( vectorizer . get_feature_names ( ) ) NEW_LINE def dist_raw ( v1 , v2 ) : NEW_LINE INDENT delta = v1 - v2 NEW_LINE return sp . linalg . norm ( delta . toarray ( ) ) NEW_LINE DEDENT def dist_norm ( v1 , v2 ) : NEW_LINE INDENT v1_normalized = v1 / sp . linalg . norm ( v1 . toarray ( ) ) NEW_LINE v2_normalized = v2 / sp . linalg . norm ( v2 . toarray ( ) ) NEW_LINE delta = v1_normalized - v2_normalized NEW_LINE return sp . linalg . norm ( delta . toarray ( ) ) NEW_LINE DEDENT dist = dist_norm NEW_LINE best_dist = sys . maxsize NEW_LINE best_i = None NEW_LINE for i in range ( 0 , num_samples ) : NEW_LINE INDENT post = posts [ i ] NEW_LINE if post == new_post : NEW_LINE INDENT continue NEW_LINE DEDENT post_vec = X_train . getrow ( i ) NEW_LINE d = dist ( post_vec , new_post_vec ) NEW_LINE print ( " = = = ▁ Post ▁ % i ▁ with ▁ dist = % .2f : ▁ % s " % ( i , d , post ) ) NEW_LINE if d < best_dist : NEW_LINE INDENT best_dist = d NEW_LINE best_i = i NEW_LINE DEDENT DEDENT print ( " Best ▁ post ▁ is ▁ % i ▁ with ▁ dist = % .2f " % ( best_i , best_dist ) ) NEW_LINE </DOCUMENT>
<DOCUMENT_ID="haad/ansible/tree/master/lib/ansible/modules/cloud/lxd/lxd_profile.py"> # ! / usr / bin / python ENDCOM # ▁ - * - ▁ coding : ▁ utf - 8 ▁ - * - ENDCOM # ▁ ( c ) ▁ 2016 , ▁ Hiroaki ▁ Nakamura ▁ < hnakamur @ gmail . com > ENDCOM # ▁ GNU ▁ General ▁ Public ▁ License ▁ v3.0 + ▁ ( see ▁ COPYING ▁ or ▁ https : / / www . gnu . org / licenses / gpl - 3.0 . txt ) ENDCOM from __future__ import absolute_import , division , print_function NEW_LINE __metaclass__ = type NEW_LINE ANSIBLE_METADATA = { ' metadata _ version ' : '1.1' , ' status ' : [ ' preview ' ] , ' supported _ by ' : ' community ' } NEW_LINE DOCUMENTATION = ''' STRNEWLINE - - - STRNEWLINE module : ▁ lxd _ profile STRNEWLINE short _ description : ▁ Manage ▁ LXD ▁ profiles STRNEWLINE version _ added : ▁ " 2.2 " STRNEWLINE description : STRNEWLINE ▁ ▁ - ▁ Management ▁ of ▁ LXD ▁ profiles STRNEWLINE author : ▁ " Hiroaki ▁ Nakamura ▁ ( @ hnakamur ) " STRNEWLINE options : STRNEWLINE ▁ ▁ ▁ ▁ name : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ Name ▁ of ▁ a ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ true STRNEWLINE ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ Description ▁ of ▁ the ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ version _ added : ▁ " 2.5 " STRNEWLINE ▁ ▁ ▁ ▁ config : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ ' The ▁ config ▁ for ▁ the ▁ container ▁ ( e . g . ▁ { " limits . memory " : ▁ " 4GB " } ) . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ See ▁ U ( https : / / github . com / lxc / lxd / blob / master / doc / rest - api . md # patch - 3 ) ' STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ If ▁ the ▁ profile ▁ already ▁ exists ▁ and ▁ its ▁ " config " ▁ value ▁ in ▁ metadata STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ obtained ▁ from STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ GET ▁ / 1.0 / profiles / < name > STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ U ( https : / / github . com / lxc / lxd / blob / master / doc / rest - api . md # get - 19 ) STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ are ▁ different , ▁ they ▁ this ▁ module ▁ tries ▁ to ▁ apply ▁ the ▁ configurations . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ Not ▁ all ▁ config ▁ values ▁ are ▁ supported ▁ to ▁ apply ▁ the ▁ existing ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ Maybe ▁ you ▁ need ▁ to ▁ delete ▁ and ▁ recreate ▁ a ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ devices : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ ' The ▁ devices ▁ for ▁ the ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ( e . g . ▁ { " rootfs " : ▁ { " path " : ▁ " / dev / kvm " , ▁ " type " : ▁ " unix - char " } ) . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ See ▁ U ( https : / / github . com / lxc / lxd / blob / master / doc / rest - api . md # patch - 3 ) ' STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ new _ name : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ A ▁ new ▁ name ▁ of ▁ a ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ If ▁ this ▁ parameter ▁ is ▁ specified ▁ a ▁ profile ▁ will ▁ be ▁ renamed ▁ to ▁ this ▁ name . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ See ▁ U ( https : / / github . com / lxc / lxd / blob / master / doc / rest - api . md # post - 11 ) STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ state : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ choices : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ present STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ absent STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ Define ▁ the ▁ state ▁ of ▁ a ▁ profile . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ default : ▁ present STRNEWLINE ▁ ▁ ▁ ▁ url : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ The ▁ unix ▁ domain ▁ socket ▁ path ▁ or ▁ the ▁ https ▁ URL ▁ for ▁ the ▁ LXD ▁ server . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ default : ▁ unix : / var / lib / lxd / unix . socket STRNEWLINE ▁ ▁ ▁ ▁ key _ file : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ The ▁ client ▁ certificate ▁ key ▁ file ▁ path . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ default : ▁ ' " { } / . config / lxc / client . key " ▁ . format ( os . environ [ " HOME " ] ) ' STRNEWLINE ▁ ▁ ▁ ▁ cert _ file : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ The ▁ client ▁ certificate ▁ file ▁ path . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ default : ▁ ' " { } / . config / lxc / client . crt " ▁ . format ( os . environ [ " HOME " ] ) ' STRNEWLINE ▁ ▁ ▁ ▁ trust _ password : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ The ▁ client ▁ trusted ▁ password . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ You ▁ need ▁ to ▁ set ▁ this ▁ password ▁ on ▁ the ▁ LXD ▁ server ▁ before STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ running ▁ this ▁ module ▁ using ▁ the ▁ following ▁ command . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ lxc ▁ config ▁ set ▁ core . trust _ password ▁ < some ▁ random ▁ password > STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ See ▁ U ( https : / / www . stgraber . org / 2016/04/18 / lxd - api - direct - interaction / ) STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ - ▁ If ▁ trust _ password ▁ is ▁ set , ▁ this ▁ module ▁ send ▁ a ▁ request ▁ for STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ authentication ▁ before ▁ sending ▁ any ▁ requests . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ required : ▁ false STRNEWLINE notes : STRNEWLINE ▁ ▁ - ▁ Profiles ▁ must ▁ have ▁ a ▁ unique ▁ name . ▁ If ▁ you ▁ attempt ▁ to ▁ create ▁ a ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ with ▁ a ▁ name ▁ that ▁ already ▁ existed ▁ in ▁ the ▁ users ▁ namespace ▁ the ▁ module ▁ will STRNEWLINE ▁ ▁ ▁ ▁ simply ▁ return ▁ as ▁ " unchanged " . STRNEWLINE ''' NEW_LINE EXAMPLES = ''' STRNEWLINE # ▁ An ▁ example ▁ for ▁ creating ▁ a ▁ profile STRNEWLINE - ▁ hosts : ▁ localhost STRNEWLINE ▁ ▁ connection : ▁ local STRNEWLINE ▁ ▁ tasks : STRNEWLINE ▁ ▁ ▁ ▁ - ▁ name : ▁ Create ▁ a ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ lxd _ profile : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ name : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ state : ▁ present STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ config : ▁ { } STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ description : ▁ my ▁ macvlan ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ devices : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ eth0 : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ nictype : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ parent : ▁ br0 STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ type : ▁ nic STRNEWLINE STRNEWLINE # ▁ An ▁ example ▁ for ▁ creating ▁ a ▁ profile ▁ via ▁ http ▁ connection STRNEWLINE - ▁ hosts : ▁ localhost STRNEWLINE ▁ ▁ connection : ▁ local STRNEWLINE ▁ ▁ tasks : STRNEWLINE ▁ ▁ - ▁ name : ▁ create ▁ macvlan ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ lxd _ profile : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ url : ▁ https : / / 127.0.0.1:8443 STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ # ▁ These ▁ cert _ file ▁ and ▁ key _ file ▁ values ▁ are ▁ equal ▁ to ▁ the ▁ default ▁ values . STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ # cert _ file : ▁ " { { ▁ lookup ( ' env ' , ▁ ' HOME ' ) ▁ } } / . config / lxc / client . crt " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ # key _ file : ▁ " { { ▁ lookup ( ' env ' , ▁ ' HOME ' ) ▁ } } / . config / lxc / client . key " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ trust _ password : ▁ mypassword STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ name : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ state : ▁ present STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ config : ▁ { } STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ description : ▁ my ▁ macvlan ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ devices : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ eth0 : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ nictype : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ parent : ▁ br0 STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ type : ▁ nic STRNEWLINE STRNEWLINE # ▁ An ▁ example ▁ for ▁ deleting ▁ a ▁ profile STRNEWLINE - ▁ hosts : ▁ localhost STRNEWLINE ▁ ▁ connection : ▁ local STRNEWLINE ▁ ▁ tasks : STRNEWLINE ▁ ▁ ▁ ▁ - ▁ name : ▁ Delete ▁ a ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ lxd _ profile : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ name : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ state : ▁ absent STRNEWLINE STRNEWLINE # ▁ An ▁ example ▁ for ▁ renaming ▁ a ▁ profile STRNEWLINE - ▁ hosts : ▁ localhost STRNEWLINE ▁ ▁ connection : ▁ local STRNEWLINE ▁ ▁ tasks : STRNEWLINE ▁ ▁ ▁ ▁ - ▁ name : ▁ Rename ▁ a ▁ profile STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ lxd _ profile : STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ name : ▁ macvlan STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ new _ name : ▁ macvlan2 STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ state : ▁ present STRNEWLINE ''' NEW_LINE RETURN = ''' STRNEWLINE old _ state : STRNEWLINE ▁ ▁ description : ▁ The ▁ old ▁ state ▁ of ▁ the ▁ profile STRNEWLINE ▁ ▁ returned : ▁ success STRNEWLINE ▁ ▁ type : ▁ string STRNEWLINE ▁ ▁ sample : ▁ " absent " STRNEWLINE logs : STRNEWLINE ▁ ▁ description : ▁ The ▁ logs ▁ of ▁ requests ▁ and ▁ responses . STRNEWLINE ▁ ▁ returned : ▁ when ▁ ansible - playbook ▁ is ▁ invoked ▁ with ▁ - vvvv . STRNEWLINE ▁ ▁ type : ▁ list STRNEWLINE ▁ ▁ sample : ▁ " ( too ▁ long ▁ to ▁ be ▁ placed ▁ here ) " STRNEWLINE actions : STRNEWLINE ▁ ▁ description : ▁ List ▁ of ▁ actions ▁ performed ▁ for ▁ the ▁ profile . STRNEWLINE ▁ ▁ returned : ▁ success STRNEWLINE ▁ ▁ type : ▁ list STRNEWLINE ▁ ▁ sample : ▁ ' [ " create " ] ' STRNEWLINE ''' NEW_LINE import os NEW_LINE from ansible . module_utils . basic import AnsibleModule NEW_LINE from ansible . module_utils . lxd import LXDClient , LXDClientException NEW_LINE # ▁ PROFILE _ STATES ▁ is ▁ a ▁ list ▁ for ▁ states ▁ supported ENDCOM PROFILES_STATES = [ ' present ' , ' absent ' ] NEW_LINE # ▁ CONFIG _ PARAMS ▁ is ▁ a ▁ list ▁ of ▁ config ▁ attribute ▁ names . ENDCOM CONFIG_PARAMS = [ ' config ' , ' description ' , ' devices ' ] NEW_LINE class LXDProfileManagement ( object ) : NEW_LINE INDENT def __init__ ( self , module ) : NEW_LINE INDENT """ Management ▁ of ▁ LXC ▁ containers ▁ via ▁ Ansible . STRNEWLINE STRNEWLINE ▁ : param ▁ module : ▁ Processed ▁ Ansible ▁ Module . STRNEWLINE ▁ : type ▁ module : ▁ ` ` object ` ` STRNEWLINE ▁ """ NEW_LINE self . module = module NEW_LINE self . name = self . module . params [ ' name ' ] NEW_LINE self . _build_config ( ) NEW_LINE self . state = self . module . params [ ' state ' ] NEW_LINE self . new_name = self . module . params . get ( ' new _ name ' , None ) NEW_LINE self . url = self . module . params [ ' url ' ] NEW_LINE self . key_file = self . module . params . get ( ' key _ file ' , None ) NEW_LINE self . cert_file = self . module . params . get ( ' cert _ file ' , None ) NEW_LINE self . debug = self . module . _verbosity >= 4 NEW_LINE try : NEW_LINE INDENT self . client = LXDClient ( self . url , key_file = self . key_file , cert_file = self . cert_file , debug = self . debug ) NEW_LINE DEDENT except LXDClientException as e : NEW_LINE INDENT self . module . fail_json ( msg = e . msg ) NEW_LINE DEDENT self . trust_password = self . module . params . get ( ' trust _ password ' , None ) NEW_LINE self . actions = [ ] NEW_LINE DEDENT def _build_config ( self ) : NEW_LINE INDENT self . config = { } NEW_LINE for attr in CONFIG_PARAMS : NEW_LINE INDENT param_val = self . module . params . get ( attr , None ) NEW_LINE if param_val is not None : NEW_LINE INDENT self . config [ attr ] = param_val NEW_LINE DEDENT DEDENT DEDENT def _get_profile_json ( self ) : NEW_LINE INDENT return self . client . do ( ' GET ' , ' / 1.0 / profiles / {0 } ' . format ( self . name ) , ok_error_codes = [ 404 ] ) NEW_LINE DEDENT @ staticmethod NEW_LINE def _profile_json_to_module_state ( resp_json ) : NEW_LINE INDENT if resp_json [ ' type ' ] == ' error ' : NEW_LINE INDENT return ' absent ' NEW_LINE DEDENT return ' present ' NEW_LINE DEDENT def _update_profile ( self ) : NEW_LINE INDENT if self . state == ' present ' : NEW_LINE INDENT if self . old_state == ' absent ' : NEW_LINE INDENT if self . new_name is None : NEW_LINE INDENT self . _create_profile ( ) NEW_LINE DEDENT else : NEW_LINE INDENT self . module . fail_json ( msg = ' new _ name ▁ must ▁ not ▁ be ▁ set ▁ when ▁ the ▁ profile ▁ does ▁ not ▁ exist ▁ and ▁ the ▁ specified ▁ state ▁ is ▁ present ' , changed = False ) NEW_LINE DEDENT DEDENT else : NEW_LINE INDENT if self . new_name is not None and self . new_name != self . name : NEW_LINE INDENT self . _rename_profile ( ) NEW_LINE DEDENT if self . _needs_to_apply_profile_configs ( ) : NEW_LINE INDENT self . _apply_profile_configs ( ) NEW_LINE DEDENT DEDENT DEDENT elif self . state == ' absent ' : NEW_LINE INDENT if self . old_state == ' present ' : NEW_LINE INDENT if self . new_name is None : NEW_LINE INDENT self . _delete_profile ( ) NEW_LINE DEDENT else : NEW_LINE INDENT self . module . fail_json ( msg = ' new _ name ▁ must ▁ not ▁ be ▁ set ▁ when ▁ the ▁ profile ▁ exists ▁ and ▁ the ▁ specified ▁ state ▁ is ▁ absent ' , changed = False ) NEW_LINE DEDENT DEDENT DEDENT DEDENT def _create_profile ( self ) : NEW_LINE INDENT config = self . config . copy ( ) NEW_LINE config [ ' name ' ] = self . name NEW_LINE self . client . do ( ' POST ' , ' / 1.0 / profiles ' , config ) NEW_LINE self . actions . append ( ' create ' ) NEW_LINE DEDENT def _rename_profile ( self ) : NEW_LINE INDENT config = { ' name ' : self . new_name } NEW_LINE self . client . do ( ' POST ' , ' / 1.0 / profiles / { } ' . format ( self . name ) , config ) NEW_LINE self . actions . append ( ' rename ' ) NEW_LINE self . name = self . new_name NEW_LINE DEDENT def _needs_to_change_profile_config ( self , key ) : NEW_LINE INDENT if key not in self . config : NEW_LINE INDENT return False NEW_LINE DEDENT old_configs = self . old_profile_json [ ' metadata ' ] . get ( key , None ) NEW_LINE return self . config [ key ] != old_configs NEW_LINE DEDENT def _needs_to_apply_profile_configs ( self ) : NEW_LINE INDENT return ( self . _needs_to_change_profile_config ( ' config ' ) or self . _needs_to_change_profile_config ( ' description ' ) or self . _needs_to_change_profile_config ( ' devices ' ) ) NEW_LINE DEDENT def _apply_profile_configs ( self ) : NEW_LINE INDENT config = self . old_profile_json . copy ( ) NEW_LINE for k , v in self . config . items ( ) : NEW_LINE INDENT config [ k ] = v NEW_LINE DEDENT self . client . do ( ' PUT ' , ' / 1.0 / profiles / { } ' . format ( self . name ) , config ) NEW_LINE self . actions . append ( ' apply _ profile _ configs ' ) NEW_LINE DEDENT def _delete_profile ( self ) : NEW_LINE INDENT self . client . do ( ' DELETE ' , ' / 1.0 / profiles / { } ' . format ( self . name ) ) NEW_LINE self . actions . append ( ' delete ' ) NEW_LINE DEDENT def run ( self ) : NEW_LINE INDENT """ Run ▁ the ▁ main ▁ method . """ NEW_LINE try : NEW_LINE INDENT if self . trust_password is not None : NEW_LINE INDENT self . client . authenticate ( self . trust_password ) NEW_LINE DEDENT self . old_profile_json = self . _get_profile_json ( ) NEW_LINE self . old_state = self . _profile_json_to_module_state ( self . old_profile_json ) NEW_LINE self . _update_profile ( ) NEW_LINE state_changed = len ( self . actions ) > 0 NEW_LINE result_json = { ' changed ' : state_changed , ' old _ state ' : self . old_state , ' actions ' : self . actions } NEW_LINE if self . client . debug : NEW_LINE INDENT result_json [ ' logs ' ] = self . client . logs NEW_LINE DEDENT self . module . exit_json ( ** result_json ) NEW_LINE DEDENT except LXDClientException as e : NEW_LINE INDENT state_changed = len ( self . actions ) > 0 NEW_LINE fail_params = { ' msg ' : e . msg , ' changed ' : state_changed , ' actions ' : self . actions } NEW_LINE if self . client . debug : NEW_LINE INDENT fail_params [ ' logs ' ] = e . kwargs [ ' logs ' ] NEW_LINE DEDENT self . module . fail_json ( ** fail_params ) NEW_LINE DEDENT DEDENT DEDENT def main ( ) : NEW_LINE INDENT """ Ansible ▁ Main ▁ module . """ NEW_LINE module = AnsibleModule ( argument_spec = dict ( name = dict ( type = ' str ' , required = True ) , new_name = dict ( type = ' str ' , ) , config = dict ( type = ' dict ' , ) , description = dict ( type = ' str ' , ) , devices = dict ( type = ' dict ' , ) , state = dict ( choices = PROFILES_STATES , default = ' present ' ) , url = dict ( type = ' str ' , default = ' unix : / var / lib / lxd / unix . socket ' ) , key_file = dict ( type = ' str ' , default = ' { } / . config / lxc / client . key ' . format ( os . environ [ ' HOME ' ] ) ) , cert_file = dict ( type = ' str ' , default = ' { } / . config / lxc / client . crt ' . format ( os . environ [ ' HOME ' ] ) ) , trust_password = dict ( type = ' str ' , no_log = True ) ) , supports_check_mode = False , ) NEW_LINE lxd_manage = LXDProfileManagement ( module = module ) NEW_LINE lxd_manage . run ( ) NEW_LINE DEDENT if __name__ == ' _ _ main _ _ ' : NEW_LINE INDENT main ( ) NEW_LINE DEDENT </DOCUMENT>
