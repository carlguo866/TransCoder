@crc32_context = internal global i32 zeroinitializer @".str.3:g_3~00" = private unnamed_addr constant [4 x i8] c"g_3\00" @g_3 = internal global i16 zeroinitializer @".str.2:1~00" = private unnamed_addr constant [2 x i8] c"1\00" define dso_local i32 @main ( i32 %0 , i8 * * %1 ) #0 { %3 = alloca i32 , align 4 %4 = alloca i32 , align 4 %5 = alloca i8 * * , align 8 %6 = alloca i32 , align 4 store i32 0 , i32 * %3 , align 4 store i32 %0 , i32 * %4 , align 4 store i8 * * %1 , i8 * * * %5 , align 8 store i32 0 , i32 * %6 , align 4 %7 = load i32 , i32 * %4 , align 4 %8 = icmp eq i32 %7 , 2 br i1 %8 , label %9 , label %16 9: %10 = load i8 * * , i8 * * * %5 , align 8 %11 = getelementptr inbounds i8 * , i8 * * %10 , i64 1 %12 = load i8 * , i8 * * %11 , align 8 %13 = call i32 @strcmp ( i8 * %12 , i8 * getelementptr inbounds ( [ 2 x i8 ] , [ 2 x i8 ] * @".str.2:1~00" , i64 0 , i64 0 ) ) #4 %14 = icmp eq i32 %13 , 0 br i1 %14 , label %15 , label %16 15: store i32 1 , i32 * %6 , align 4 br label %16 16: call void @platform_main_begin ( ) call void @crc32_gentab ( ) %17 = call signext i16 @func_1 ( ) %18 = load i16 , i16 * @g_3 , align 2 %19 = sext i16 %18 to i64 %20 = load i32 , i32 * %6 , align 4 call void @transparent_crc ( i64 %19 , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.3:g_3~00" , i64 0 , i64 0 ) , i32 %20 ) %21 = load i32 , i32 * @crc32_context , align 4 %22 = zext i32 %21 to i64 %23 = xor i64 %22 , 4294967295 %24 = trunc i64 %23 to i32 %25 = load i32 , i32 * %6 , align 4 call void @platform_main_end ( i32 %24 , i32 %25 ) ret i32 0 }declare i32 @strcmp ( i8 * , i8 * ) declare void @platform_main_begin ( ) declare void @crc32_gentab ( ) declare i16 @func_1 ( ) declare void @transparent_crc ( i64 , i8 * , i32 ) declare void @platform_main_end ( i32 , i32 ) 
