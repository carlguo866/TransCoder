define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str:%d%d%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 i32 * %4 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %3 
 %9 = mul nsw i32 %7 , %8 
 %10 = load i32 , i32 * %4 
 %11 = load i32 , i32 * %2 
 %12 = mul nsw i32 %10 , %11 
 %13 = load i32 , i32 * %3 
 %14 = icmp eq i32 %12 , %13 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %19 
 16: 
 %17 = load i32 , i32 * %2 
 %18 = load i32 , i32 * %3 
 call void @solve ( i32 %17 i32 %18 ) 
 br label %19 
 19: 
 %20 = load i32 , i32 * %2 
 %21 = load i32 , i32 * %3 
 %22 = add nsw i32 %20 , %21 
 store i32 %22 , i32 * %5 
 %23 = load i32 , i32 * %5 
 %24 = load i32 , i32 * %3 
 %25 = icmp eq i32 %23 , %24 
 br i1 %25 , label %26 , label %28 
 26: 
 %27 = load i32 , i32 * %2 
 store i32 %27 , i32 * %5 
 br label %28 
 28: 
 %29 = load i32 , i32 * %3 
 %30 = load i32 , i32 * %4 
 %31 = icmp eq i32 %29 , %30 
 br i1 %31 , label %32 , label %34 
 32: 
 %33 = load i32 , i32 * %3 
 store i32 %33 , i32 * %5 
 br label %34 
 34: 
 %35 = load i32 , i32 * %3 
 %36 = load i32 , i32 * %4 
 %37 = icmp eq i32 %35 , %36 
 br i1 %37 , label %38 , label %40 
 38: 
 %39 = 
