define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %2 
 %9 = mul nsw i32 %7 , %8 
 store i32 %9 , i32 * %3 
 %10 = load i32 , i32 * %3 
 %11 = load i32 , i32 * %2 
 %12 = mul nsw i32 %10 , %11 
 %13 = load i32 , i32 * %3 
 %14 = mul nsw i32 %12 , %13 
 %15 = load i32 , i32 * %4 
 %16 = mul nsw i32 %14 , %15 
 %17 = add nsw i32 %13 , %16 
 %18 = load i32 , i32 * %5 
 %19 = add nsw i32 %17 , %18 
 store i32 %19 , i32 * %5 
 %20 = load i32 , i32 * %5 
 %21 = load i32 , i32 * %3 
 %22 = mul nsw i32 %20 , %21 
 %23 = load i32 , i32 * %4 
 %24 = add nsw i32 %22 , %23 
 store i32 %24 , i32 * %4 
 %25 = load i32 , i32 * %5 
 %26 = load i32 , i32 * %4 
 %27 = mul nsw i32 %25 , %26 
 %28 = load i32 , i32 * %3 
 %29 = add nsw i32 %28 , %27 
 store i32 %29 , i32 * %5 
 %30 = load i32 , i32 * %5 
 %31 = load i32 , i32 * %3 
 %32 = icmp eq i32 %30 , %31 
 br i1 %32 , label %33 , label %35 
 33: 
 %34 = load i32 , i32 * %5 
 store i32 %34 , i32 * %3 
 br label %35 
