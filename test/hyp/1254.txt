define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * @n ) 
 %7 = load i32 , i32 * @n 
 %8 = icmp eq i32 %7 , 0 
 br i1 %8 , label %9 , label %10 
 9: 
 br label %34 
 10: 
 %11 = load i32 , i32 * @n 
 %12 = add nsw i32 %11 , 1 
 %13 = load i32 , i32 * @n 
 %14 = icmp eq i32 %11 , %13 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %34 
 16: 
 %17 = load i32 , i32 * @n 
 %18 = add nsw i32 %17 , 1 
 %19 = load i32 , i32 * @n 
 %20 = icmp eq i32 %18 , %19 
 br i1 %20 , label %21 , label %22 
 21: 
 store i32 1 , i32 * %3 
 br label %34 
 22: 
 %23 = load i32 , i32 * @n 
 %24 = add nsw i32 %23 , 1 
 store i32 %24 , i32 * @n 
 br label %25 
 25: 
 %26 = load i32 , i32 * @n 
 %27 = load i32 , i32 * @n 
 %28 = icmp eq i32 %26 , %27 
 br i1 %28 , label %29 , label %30 
 29: 
 store i32 0 , i32 * %3 
 br label %34 
 30: 
 br label %31 
 31: 
 %32 = load i32 , i32 * %3 
 %33 = add nsw i32 %32 , 1 
 store i32 %33 , i32 * %3 
 br label %25 
 34: 
 %35 = load i32 , i32 * @n 
 %36 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %35 ) 
 ret i32 0 
 } 
