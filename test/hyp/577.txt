define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = call i32 @gcd ( i32 %7 ) 
 store i32 %8 , i32 * %3 
 %9 = load i32 , i32 * %2 
 %10 = load i32 , i32 * %3 
 %11 = call i32 @gcd ( i32 %9 i32 %10 ) 
 store i32 %11 , i32 * %4 
 %12 = load i32 , i32 * %4 
 %13 = call i32 @gcd ( i32 %12 i32 %13 ) 
 %14 = load i32 , i32 * %3 
 %15 = call i32 @gcd ( i32 %14 i32 %15 ) 
 %16 = icmp ne i32 %16 , 0 
 br i1 %17 , label %17 , label %19 
 17: 
 %18 = load i32 , i32 * %3 
 store i32 %18 , i32 * %5 
 br label %19 
 19: 
 %20 = load i32 , i32 * %4 
 %21 = load i32 , i32 * %3 
 %22 = call i32 @gcd ( i32 %20 i32 %21 ) 
 store i32 %22 , i32 * %3 
 %23 = load i32 , i32 * %3 
 %24 = load i32 , i32 * %4 
 %25 = call i32 @gcd ( i32 %23 i32 %24 ) 
 %26 = icmp ne i32 %25 , 0 
 br i1 %26 , label %27 , label %29 
 27: 
 %28 = load i32 , i32 * %3 
 store i32 %28 , i32 * %4 
 br label %29 
 29: 
 %30 = load i32 , i32 * %4 
 %31 = load i32 , i32 * %3 
 %32 = icmp eq i32 %30 , %31 
 br i1 %32 , label %33 , label %37 
 33: 
 %34 = load i32 , i32 * %3 
 %35 = load i32 , i32 * 
