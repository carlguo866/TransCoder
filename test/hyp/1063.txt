define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %2 
 %9 = mul nsw i32 %7 , %8 
 store i32 %9 , i32 * %3 
 %10 = load i32 , i32 * %2 
 %11 = load i32 , i32 * %3 
 %12 = mul nsw i32 %10 , %11 
 store i32 %12 , i32 * %4 
 %13 = load i32 , i32 * %2 
 %14 = load i32 , i32 * %3 
 %15 = mul nsw i32 %13 , %14 
 %16 = load i32 , i32 * %4 
 %17 = mul nsw i32 %15 , %16 
 store i32 %17 , i32 * %5 
 %18 = load i32 , i32 * %5 
 %19 = load i32 , i32 * %4 
 %20 = mul nsw i32 %18 , %19 
 %21 = load i32 , i32 * %3 
 %22 = icmp eq i32 %20 , %21 
 br i1 %22 , label %23 , label %25 
 23: 
 %24 = load i32 , i32 * %5 
 store i32 %24 , i32 * %3 
 br label %25 
 25: 
 %26 = load i32 , i32 * %5 
 %27 = load i32 , i32 * %4 
 %28 = add nsw i32 %27 , %26 
 store i32 %28 , i32 * %4 
 %29 = load i32 , i32 * %3 
 %30 = load i32 , i32 * %4 
 %31 = add nsw i32 %29 , %30 
 store i32 %31 , i32 * %3 
 %32 = load i32 , i32 * %3 
 %33 = load i32 , i32 * %4 
 %34 = icmp eq i32 %32 , %33 
 br i1 %34 , label %35 , label %37 
 35: 
 %36 = load i32 , i32 * %3 
 br label %37 
 37: 
 %38 = load i32 , i32 * %4 
 %39 = load i32 , i32 * %3 
 %40 = icmp 
