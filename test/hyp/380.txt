define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i32 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %10 = load i32 , i32 * %6 
 %11 = load i32 , i32 * %6 
 %12 = sub nsw i32 %10 , %11 
 store i32 %12 , i32 * %8 
 %13 = load i32 , i32 * %8 
 %14 = load i32 , i32 * %6 
 %15 = sub nsw i32 %13 , %14 
 %16 = icmp eq i32 %15 , 0 
 br i1 %16 , label %17 , label %19 
 17: 
 %18 = load i32 , i32 * %8 
 store i32 %18 , i32 * %7 
 br label %19 
 19: 
 %20 = load i32 , i32 * %8 
 %21 = load i32 , i32 * %6 
 %22 = sub nsw i32 %20 , %21 
 store i32 %22 , i32 * %7 
 %23 = load i32 , i32 * %7 
 %24 = load i32 , i32 * %8 
 %25 = sub nsw i32 %23 , %24 
 %26 = icmp eq i32 %25 , 0 
 br i1 %26 , label %27 , label %29 
 27: 
 %28 = load i32 , i32 * %8 
 store i32 %28 , i32 * %7 
 br label %29 
 29: 
 %30 = load i32 , i32 * %7 
 %31 = load i32 , i32 * %8 
 %32 = sub nsw i32 %30 , %31 
 %33 = icmp eq i32 %32 , 0 
 br i1 %33 , label %34 , label %36 
 34: 
 %35 = load i32 , i32 * %8 
 store i32 %35 , i32 * %7 
 br label %36 
 36: 
 %37 = load i32 , i32 * %7 
 %38 = load i32 , i32 * %8 
 %39 = sub nsw i32 %37 , %38 
 %40 = icmp eq i32 %39 , 0 
 br i1 %40 , label %41 , label %36 
 41: 
 %42 = load i32 , i32 * %8 
 %43 = load i32 , i32 * %7 
 %44 = sub nsw i32 %42 , %43 
 %45 = icmp eq i32 %44 , 0 
 br i1 %45 , label %46 , label %45 
 46: 
 %47 = load i32 , i32 * %7 
 %48 = load i32 , i32 * %8 
 %49 = sub nsw i32 %48 , %47 
 store i32 %49 , i32 * %7 
 br label %50 
 50: 
