define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 12 x i8 ] @".str:%d %d %d %d %d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 i32 * %4 i32 * %5 i32 * %6 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %3 
 %9 = icmp eq i32 %7 , %8 
 br i1 %9 , label %10 , label %14 
 10: 
 %11 = load i32 , i32 * %2 
 %12 = load i32 , i32 * %3 
 %13 = icmp eq i32 %11 , %12 
 br i1 %13 , label %14 , label %14 
 14: 
 %15 = load i32 , i32 * %3 
 %16 = load i32 , i32 * %4 
 %17 = icmp eq i32 %15 , %16 
 br i1 %17 , label %18 , label %19 
 18: 
 br label %20 
 19: 
 br label %20 
 20: 
 %21 = load i32 , i32 * %2 
 %22 = load i32 , i32 * %3 
 %23 = icmp eq i32 %21 , %22 
 br i1 %23 , label %24 , label %26 
 24: 
 %25 = load i32 , i32 * %2 
 br label %26 
 26: 
 %27 = load i32 , i32 * %3 
 %28 = load i32 , i32 * %4 
 %29 = icmp eq i32 %27 , %28 
 br i1 %29 , label %30 , label %31 
 30: 
 br label %33 
 31: 
 %32 = load i32 , i32 * %2 
 br label %33 
 33: 
 br label %34 
 34: 
 %35 = load i32 , i32 * %3 
 %36 = load i32 , i32 * %4 
 %37 = icmp eq i32 %35 , %36 
 br i1 %37 , label %38 , label %40 
 38: 
 %39 = load i32 , i32 * %2 
 br label %40 
 40: 
 %41 = load i32 , i32 * %3 
 %42 = load i32 , i32 * %4 
 %43 = icmp eq i32 %41 , %42 
 br i1 %43 , label %44 , label %46 
 44: 
 %45 = load i32 , i32 * %2 
 br label %46 
 46: 
 %47 = load i32 , i32 * %3 
 br label %48 
 
