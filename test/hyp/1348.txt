define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %2 
 %9 = call i32 @cell ( i32 %7 i32 %8 ) 
 %10 = load i32 , i32 * %5 
 %11 = load i32 , i32 * %2 
 %12 = call i32 @cell ( i32 %10 i32 %11 ) 
 %13 = load i32 , i32 * %5 
 %14 = call i32 @cell ( i32 %13 i32 %14 ) 
 %15 = load i32 , i32 * %5 
 %16 = load i32 , i32 * %2 
 %17 = call i32 @cell ( i32 %15 i32 %16 ) 
 %18 = load i32 , i32 * %5 
 %19 = call i32 @cell ( i32 %18 i32 %19 ) 
 %20 = load i32 , i32 * %5 
 %21 = load i32 , i32 * %2 
 %22 = load i32 , i32 * %3 
 %23 = call i32 @cell ( i32 %20 i32 %21 ) 
 %24 = load i32 , i32 * %5 
 %25 = load i32 , i32 * %3 
 %26 = load i32 , i32 * %2 
 %27 = load i32 , i32 * %3 
 %28 = load i32 , i32 * %2 
 %29 = load i32 , i32 * %3 
 %30 = call i32 @cell ( i32 %25 i32 %26 i32 %27 i32 %28 ) 
 %31 = load i32 , i32 * %5 
 %32 = load i32 , i32 * %3 
 %33 = load i32 , i32 * %2 
 %34 = load i32 , i32 * %3 
 %35 = load i32 , i32 * %2 
 %36 = load i32 , i32 * %3 
 %37 = load i32 , i32 * %2 
 %38 = load i32 , i32 * %3 
 %39 = call i32 @cell ( i32 %33 i32 %34 i32 %35 i32 %36 ) 
 %40 = load i32 , i32 * %5 
 %41 = load i32 , i32 * %3 
 %42 = load i32 , i32 * %2 
 %43 = load i32 , i32 * %3 
 %44 = call i32 @cell ( i32 %40 i32 %41 i32 %42 ) 
 %45 = load i32 , i32 * %5 
 %46 = load i32 , i32 * %2 
 %47 = load i32 , i32 * %3 
 %48 = load i32 , i32 * %2 
 %49 = load i32 , i32 * %3 
 %50 = call i32 @cell ( i32 %45 i32 %46 i32 %47 ) 
 %51 = load i32 , i32 * %5 
 %52 = add nsw i32 %45 , %48 
 %51 = load i32 , i32 * %5 
 %52 = load i32 , i32 * %2 
 %53 = load i32 , i32 * %3 
 %54 = load i32 , i32 * %2 
 %55 = load i32 , i32 * %3 
 %56 = call i32 @cell ( i32 %51 i32 %52 i32 %53 ) 
 ret i32 %54 
 } 
