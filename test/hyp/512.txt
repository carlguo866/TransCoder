define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = load i32 , i32 * %1 
 %8 = icmp ne i32 %7 , 0 
 br i1 %8 , label %9 , label %6 
 9: 
 %10 = load i32 , i32 * %1 
 %11 = load i32 , i32 * %2 
 %12 = srem i32 %10 , %11 
 store i32 %12 , i32 * %5 
 %13 = load i32 , i32 * %1 
 %14 = load i32 , i32 * %2 
 %15 = sdiv i32 %14 , %13 
 store i32 %15 , i32 * %3 
 %16 = load i32 , i32 * %3 
 %17 = load i32 , i32 * %4 
 %18 = mul nsw i32 %17 , %16 
 store i32 %18 , i32 * %4 
 %19 = load i32 , i32 * %5 
 %20 = load i32 , i32 * %3 
 %21 = sdiv i32 %19 , %20 
 store i32 %21 , i32 * %3 
 %22 = load i32 , i32 * %3 
 %23 = load i32 , i32 * %4 
 %24 = srem i32 %22 , %23 
 store i32 %24 , i32 * %4 
 %25 = load i32 , i32 * %3 
 %26 = load i32 , i32 * %4 
 %27 = sdiv i32 %25 , %26 
 %28 = load i32 , i32 * %3 
 %29 = sdiv i32 %27 , %28 
 store i32 %29 , i32 * %3 
 %30 = load i32 , i32 * %3 
 %31 = load i32 , i32 * %4 
 %32 = srem i32 %30 , %31 
 store i32 %32 , i32 * %4 
 %33 = load i32 , i32 * %3 
 %34 = load i32 , i32 * %4 
 %35 = srem i32 %33 , %34 
 %36 = load i32 , i32 * %3 
 %37 = 
