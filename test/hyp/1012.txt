define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str:%d%d%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 i32 * %4 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %3 
 %9 = icmp slt i32 %7 , %8 
 br i1 %9 , label %10 , label %14 
 10: 
 %11 = load i32 , i32 * %3 
 %12 = load i32 , i32 * %4 
 %13 = icmp eq i32 %11 , %12 
 br i1 %13 , label %14 , label %16 
 14: 
 %15 = load i32 , i32 * %3 
 br label %19 
 16: 
 %17 = load i32 , i32 * %4 
 %18 = load i32 , i32 * %5 
 br label %19 
 19: 
 %20 = phi i32 [ %15 %14 ] , [ %18 %16 ] 
 store i32 %20 , i32 * %5 
 %21 = load i32 , i32 * %3 
 %22 = load i32 , i32 * %4 
 %23 = icmp eq i32 %21 , %22 
 br i1 %23 , label %24 , label %26 
 24: 
 %25 = load i32 , i32 * %5 
 br label %27 
 26: 
 br label %27 
 27: 
 %28 = load i32 , i32 * %3 
 %29 = load i32 , i32 * %5 
 %30 = icmp eq i32 %28 , %29 
 br i1 %30 , label %31 , label %36 
 31: 
 %32 = load i32 , i32 * %3 
 %33 = load i32 , i32 * %5 
 %34 = icmp eq i32 %32 , %33 
 
