define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i32 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %10 = load i32 , i32 * %6 
 %11 = load i32 , i32 * %6 
 %12 = icmp eq i32 %10 , %11 
 br i1 %12 , label %13 , label %15 
 13: 
 %14 = load i32 , i32 * %6 
 store i32 %14 , i32 * %7 
 br label %15 
 15: 
 %16 = load i32 , i32 * %6 
 %17 = load i32 , i32 * %7 
 %18 = icmp sle i32 %16 , %17 
 br i1 %18 , label %19 , label %34 
 19: 
 %20 = load i32 , i32 * %6 
 %21 = load i32 , i32 * %7 
 %22 = srem i32 %20 , %21 
 %23 = icmp eq i32 %22 , 0 
 br i1 %23 , label %24 , label %25 
 24: 
 store i32 1 , i32 * %3 
 br label %25 
 25: 
 %26 = load i32 , i32 * %6 
 %27 = add nsw i32 %26 , 1 
 store i32 %27 , i32 * %6 
 %28 = load i32 , i32 * %7 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 %28 ) 
 %30 = load i32 , i32 * %3 
 %31 = load i32 , i32 * %7 
 %32 = sdiv i32 %30 , %31 
 %33 = load i32 , i32 * %6 
 store i32 %32 , i32 * %7 
 br label %15 
 34: 
 %35 = load i32 , i32 * %7 
 %36 = add nsw i32 %35 , 1 
 store i32 %36 , i32 * %7 
 br label %15 
 37: 
 %38 = load i32 , i32 * %3 
 ret i32 %38 
 } 
