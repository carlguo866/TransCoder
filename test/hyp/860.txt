define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = load i32 , i32 * %2 
 %9 = sdiv i32 %7 , %8 
 store i32 %9 , i32 * %3 
 %10 = load i32 , i32 * %2 
 %11 = load i32 , i32 * %3 
 %12 = sdiv i32 %10 , %11 
 store i32 %12 , i32 * %4 
 %13 = load i32 , i32 * %2 
 %14 = load i32 , i32 * %4 
 %15 = srem i32 %13 , %14 
 %16 = icmp eq i32 %15 , 0 
 br i1 %16 , label %17 , label %19 
 17: 
 %18 = load i32 , i32 * %3 
 br label %19 
 19: 
 %20 = load i32 , i32 * %4 
 %21 = load i32 , i32 * %3 
 %22 = sdiv i32 %20 , %21 
 store i32 %22 , i32 * %5 
 %23 = load i32 , i32 * %4 
 %24 = load i32 , i32 * %5 
 %25 = sdiv i32 %23 , %24 
 %26 = load i32 , i32 * %3 
 %27 = srem i32 %25 , %26 
 %28 = icmp eq i32 %27 , 0 
 br i1 %28 , label %29 , label %31 
 29: 
 %30 = load i32 , i32 * %3 
 br label %31 
 31: 
 %32 = load i32 , i32 * %4 
 %33 = load i32 , i32 * %5 
 %34 = sdiv i32 %32 , %33 
 %35 = load i32 , i32 * %3 
 %36 = sdiv i32 %34 , %35 
 %37 = load i32 , i32 * %4 
 %38 = srem i32 %36 , %37 
 %39 = icmp eq i32 %38 , 0 
 br i1 %39 , label %40 , label %43 
 40: 
 %41 
