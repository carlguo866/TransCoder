define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca double 
 %3 = alloca double 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca double 
 store i32 0 , i32 * %1 
 store double , double * 0.000000e+00 %2 
 store double , double * 0.000000e+00 %3 
 store i32 0 , i32 * %6 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %4 i32 * %5 ) 
 %10 = load i32 , i32 * %4 
 %11 = icmp eq i32 %10 , 0 
 br i1 %11 , label %12 , label %16 
 12: 
 %13 = load i32 , i32 * %5 
 %14 = icmp eq i32 %13 , 0 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %36 
 16: 
 %17 = load i32 , i32 * %6 
 %18 = call double @theta_convert ( i32 %17 ) 
 store double %18 , double * %7 
 %19 = load i32 , i32 * %4 
 %20 = sitofp i32 %19 to double 
 %21 = load double , double * %7 
 %22 = call double @cos ( double %21 ) #3 
 %23 = fmul double %20 , %22 
 %24 = load double , double * %2 
 %25 = fadd double %24 , %23 
 store double %25 , double * %2 
 %26 = load i32 , i32 * %4 
 %27 = sitofp i32 %26 to double 
 %28 = load double , double * %7 
 %29 = call double @sin ( double %28 ) #3 
 %30 = fmul double %27 , %29 
 %31 = load double , double * %3 
 %32 = fadd double %31 , %30 
 store double %32 , double * %3 
 %33 = load i32 , i32 * %5 
 %34 = load i32 , i32 * %6 
 %35 = call i32 @theta_add ( i32 %33 i32 %34 ) 
 store i32 %35 , i32 * %6 
 br label %8 
 36: 
 %37 = load double , double * %2 
 %38 = fptosi double %37 to i32 
 %39 = load double , double * %3 
 %40 = fptosi double %39 to i32 
 %41 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %38 i32 %40 ) 
 ret i32 0 
 } 
