define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 store i32 0 , i32 * %1 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%ld~00" i64 0 i64 0 ) i64 * %2 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %33 
 8: 
 store i64 0 , i64 * %4 
 store i64 2 , i64 * %3 
 br label %9 
 9: 
 %10 = load i64 , i64 * %3 
 %11 = load i64 , i64 * %2 
 %12 = icmp sle i64 %10 , %11 
 br i1 %12 , label %13 , label %30 
 13: 
 %14 = load i64 , i64 * %3 
 %15 = call i32 @check ( i64 %14 ) 
 %16 = icmp eq i32 %15 , 0 
 br i1 %16 , label %17 , label %20 
 17: 
 %18 = load i64 , i64 * %4 
 %19 = add nsw i64 %18 , 1 
 store i64 %19 , i64 * %4 
 br label %20 
 20: 
 %21 = load i64 , i64 * %3 
 %22 = icmp eq i64 %21 , 2 
 br i1 %22 , label %23 , label %26 
 23: 
 %24 = load i64 , i64 * %3 
 %25 = sub nsw i64 %24 , 1 
 store i64 %25 , i64 * %3 
 br label %26 
 26: 
 br label %27 
 27: 
 %28 = load i64 , i64 * %3 
 %29 = add nsw i64 %28 , 2 
 store i64 %29 , i64 * %3 
 br label %9 
 30: 
 %31 = load i64 , i64 * %4 
 %32 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i64 %31 ) 
 br label %5 
 33: 
 ret i32 0 
 } 
