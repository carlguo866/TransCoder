define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca { double , double } 
 %3 = alloca { double , double } 
 %4 = alloca { double , double } 
 %5 = alloca { double , double } 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = getelementptr inbounds { double , double } , { double , double } * %2 , i32 0 , i32 0 
 %8 = getelementptr inbounds { double , double } , { double , double } * %2 , i32 0 , i32 1 
 %9 = getelementptr inbounds { double , double } , { double , double } * %3 , i32 0 , i32 0 
 %10 = getelementptr inbounds { double , double } , { double , double } * %3 , i32 0 , i32 1 
 %11 = getelementptr inbounds { double , double } , { double , double } * %4 , i32 0 , i32 0 
 %12 = getelementptr inbounds { double , double } , { double , double } * %4 , i32 0 , i32 1 
 %13 = getelementptr inbounds { double , double } , { double , double } * %5 , i32 0 , i32 0 
 %14 = getelementptr inbounds { double , double } , { double , double } * %5 , i32 0 , i32 1 
 %15 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 32 x i8 ] @".str:%lf %lf %lf %lf %lf %lf %lf %lf~00" i64 0 i64 0 ) double * %7 double * %8 double * %9 double * %10 double * %11 double * %12 double * %13 double * %14 ) 
 %16 = icmp ne i32 %15 , -1 
 br i1 %16 , label %17 , label %25 
 17: 
 %18 = call i32 @contains ( { double double } * %2 { double double } * %3 { double double } * %4 { double double } * %5 ) 
 %19 = icmp ne i32 %18 , 0 
 br i1 %19 , label %20 , label %22 
 20: 
 %21 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:YES~0A~00" i64 0 i64 0 ) ) 
 br label %24 
 22: 
 %23 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.2:NO~0A~00" i64 0 i64 0 ) ) 
 br label %24 
 24: 
 br label %6 
 25: 
 ret i32 0 
 } 
