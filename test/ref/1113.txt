define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * getelementptr inbounds ( [ 1000000 x i32 ] , [ 1000000 x i32 ] * @primeFlag i64 0 i64 0 ) 
 store i32 1 , i32 * %3 
 br label %4 
 4: 
 %5 = load i32 , i32 * %3 
 %6 = icmp sle i32 %5 , 999999 
 br i1 %6 , label %7 , label %22 
 7: 
 %8 = load i32 , i32 * %3 
 %9 = sub nsw i32 %8 , 1 
 %10 = sext i32 %9 to i64 
 %11 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * @primeFlag , i64 0 , i64 %10 
 %12 = load i32 , i32 * %11 
 %13 = load i32 , i32 * %3 
 %14 = call i32 @IsPrime ( i32 %13 ) 
 %15 = add nsw i32 %12 , %14 
 %16 = load i32 , i32 * %3 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * @primeFlag , i64 0 , i64 %17 
 store i32 %15 , i32 * %18 
 br label %19 
 19: 
 %20 = load i32 , i32 * %3 
 %21 = add nsw i32 %20 , 1 
 store i32 %21 , i32 * %3 
 br label %4 
 22: 
 br label %23 
 23: 
 %24 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %25 = icmp ne i32 %24 , -1 
 br i1 %25 , label %26 , label %36 
 26: 
 %27 = load i32 , i32 * %2 
 %28 = icmp eq i32 %27 , 0 
 br i1 %28 , label %29 , label %30 
 29: 
 br label %36 
 30: 
 %31 = load i32 , i32 * %2 
 %32 = sext i32 %31 to i64 
 %33 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * @primeFlag , i64 0 , i64 %32 
 %34 = load i32 , i32 * %33 
 %35 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %34 ) 
 br label %23 
 36: 
 ret i32 0 
 } 
