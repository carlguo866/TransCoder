define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca [ 5 x i32 ] 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %7 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %8 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %9 = getelementptr inbounds i32 , i32 * %8 , i64 1 
 %10 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %11 = getelementptr inbounds i32 , i32 * %10 , i64 2 
 %12 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %13 = getelementptr inbounds i32 , i32 * %12 , i64 3 
 %14 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %15 = getelementptr inbounds i32 , i32 * %14 , i64 4 
 %16 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 15 x i8 ] @".str:%d %d %d %d %d~00" i64 0 i64 0 ) i32 * %7 i32 * %9 i32 * %11 i32 * %13 i32 * %15 ) 
 %17 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %18 = bitcast i32 * %17 to i8 * 
 call void @qsort ( i8 * %18 i64 5 i64 4 i32 ( i8 * i8 * ) * @cmpr ) 
 %19 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 0 
 %20 = load i32 , i32 * %19 
 %21 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 1 
 %22 = load i32 , i32 * %21 
 %23 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 2 
 %24 = load i32 , i32 * %23 
 %25 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 3 
 %26 = load i32 , i32 * %25 
 %27 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %6 , i64 0 , i64 4 
 %28 = load i32 , i32 * %27 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 16 x i8 ] @".str.1:%d %d %d %d %d~0A~00" i64 0 i64 0 ) i32 %20 i32 %22 i32 %24 i32 %26 i32 %28 ) 
 ret i32 0 
 } 
