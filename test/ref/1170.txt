define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca [ 10 x i32 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 br label %4 
 4: 
 %5 = load i32 , i32 * %2 
 %6 = icmp slt i32 %5 , 10 
 br i1 %6 , label %7 , label %14 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = sext i32 %8 to i64 
 %10 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %3 , i64 0 , i64 %9 
 store i32 0 , i32 * %10 
 br label %11 
 11: 
 %12 = load i32 , i32 * %2 
 %13 = add nsw i32 %12 , 1 
 store i32 %13 , i32 * %2 
 br label %4 
 14: 
 store i32 0 , i32 * %2 
 br label %15 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %3 , i64 0 , i64 %17 
 %19 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %18 ) 
 %20 = icmp ne i32 %19 , -1 
 br i1 %20 , label %21 , label %44 
 21: 
 %22 = load i32 , i32 * %2 
 %23 = sext i32 %22 to i64 
 %24 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %3 , i64 0 , i64 %23 
 %25 = load i32 , i32 * %24 
 %26 = icmp ne i32 %25 , 0 
 br i1 %26 , label %40 , label %27 
 27: 
 %28 = load i32 , i32 * %2 
 %29 = sub nsw i32 %28 , 2 
 store i32 %29 , i32 * %2 
 %30 = load i32 , i32 * %2 
 %31 = add nsw i32 %30 , 1 
 %32 = sext i32 %31 to i64 
 %33 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %3 , i64 0 , i64 %32 
 %34 = load i32 , i32 * %33 
 %35 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %34 ) 
 %36 = load i32 , i32 * %2 
 %37 = add nsw i32 %36 , 1 
 %38 = sext i32 %37 to i64 
 %39 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %3 , i64 0 , i64 %38 
 store i32 0 , i32 * %39 
 br label %40 
 40: 
 br label %41 
 41: 
 %42 = load i32 , i32 * %2 
 %43 = add nsw i32 %42 , 1 
 store i32 %43 , i32 * %2 
 br label %15 
 44: 
 ret i32 0 
 } 
