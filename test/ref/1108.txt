define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca double 
 %8 = alloca double 
 store i32 0 , i32 * %1 
 store double , double * 0.000000e+00 %5 
 store double , double * 0.000000e+00 %6 
 store double , double * 0.000000e+00 %4 
 store double , double * 0.000000e+00 %7 
 store double , double * 0.000000e+00 %8 
 br label %9 
 9: 
 %10 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %7 double * %8 ) 
 %11 = load double , double * %7 
 %12 = fcmp oeq double %11 , 0.000000e+00 
 br i1 %12 , label %13 , label %17 
 13: 
 %14 = load double , double * %8 
 %15 = fcmp oeq double %14 , 0.000000e+00 
 br i1 %15 , label %16 , label %17 
 16: 
 br label %37 
 17: 
 %18 = load double , double * %4 
 %19 = fmul double %18 , 3.141500e+00 
 %20 = fdiv double %19 , 1.800000e+02 
 %21 = call double @sin ( double %20 ) #3 
 %22 = load double , double * %7 
 %23 = fmul double %21 , %22 
 %24 = load double , double * %5 
 %25 = fadd double %24 , %23 
 store double %25 , double * %5 
 %26 = load double , double * %4 
 %27 = fmul double %26 , 3.141500e+00 
 %28 = fdiv double %27 , 1.800000e+02 
 %29 = call double @cos ( double %28 ) #3 
 %30 = load double , double * %7 
 %31 = fmul double %29 , %30 
 %32 = load double , double * %6 
 %33 = fadd double %32 , %31 
 store double %33 , double * %6 
 %34 = load double , double * %8 
 %35 = load double , double * %4 
 %36 = fadd double %35 , %34 
 store double %36 , double * %4 
 br label %9 
 37: 
 %38 = load double , double * %5 
 %39 = fptosi double %38 to i32 
 %40 = load double , double * %6 
 %41 = fptosi double %40 to i32 
 %42 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %39 i32 %41 ) 
 ret i32 0 
 } 
