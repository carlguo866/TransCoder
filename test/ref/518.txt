define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 1 , i32 * getelementptr inbounds ( [ 1000000 x i32 ] , [ 1000000 x i32 ] * @table i64 0 i64 2 ) 
 store i32 3 , i32 * @uncheck_min 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%i~00" i64 0 i64 0 ) i32 * %3 ) 
 %7 = icmp eq i32 %6 , 1 
 br i1 %7 , label %8 , label %27 
 8: 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %2 
 br label %9 
 9: 
 %10 = load i32 , i32 * %2 
 %11 = load i32 , i32 * %3 
 %12 = icmp sle i32 %10 , %11 
 br i1 %12 , label %13 , label %24 
 13: 
 %14 = load i32 , i32 * %2 
 %15 = call i32 @isprime ( i32 %14 ) 
 %16 = icmp ne i32 %15 , 0 
 br i1 %16 , label %17 , label %20 
 17: 
 %18 = load i32 , i32 * %4 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * %4 
 br label %20 
 20: 
 br label %21 
 21: 
 %22 = load i32 , i32 * %2 
 %23 = add nsw i32 %22 , 1 
 store i32 %23 , i32 * %2 
 br label %9 
 24: 
 %25 = load i32 , i32 * %4 
 %26 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %25 ) 
 br label %5 
 27: 
 ret i32 0 
 } 
