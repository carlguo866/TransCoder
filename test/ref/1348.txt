define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca [ 30 x i32 ] 
 %7 = alloca i32 
 %8 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %7 
 br label %9 
 9: 
 %10 = load i32 , i32 * %7 
 %11 = icmp slt i32 %10 , 30 
 br i1 %11 , label %12 , label %21 
 12: 
 %13 = load i32 , i32 * %7 
 %14 = add nsw i32 %13 , 1 
 %15 = load i32 , i32 * %7 
 %16 = sext i32 %15 to i64 
 %17 = getelementptr inbounds [ 30 x i32 ] , [ 30 x i32 ] * %6 , i64 0 , i64 %16 
 store i32 %14 , i32 * %17 
 br label %18 
 18: 
 %19 = load i32 , i32 * %7 
 %20 = add nsw i32 %19 , 1 
 store i32 %20 , i32 * %7 
 br label %9 
 21: 
 %22 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %23 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 store i32 0 , i32 * %7 
 br label %24 
 24: 
 %25 = load i32 , i32 * %7 
 %26 = load i32 , i32 * %2 
 %27 = icmp slt i32 %25 , %26 
 br i1 %27 , label %28 , label %33 
 28: 
 %29 = getelementptr inbounds [ 30 x i32 ] , [ 30 x i32 ] * %6 , i64 0 , i64 0 
 call void @sort ( i32 * %29 ) 
 br label %30 
 30: 
 %31 = load i32 , i32 * %7 
 %32 = add nsw i32 %31 , 1 
 store i32 %32 , i32 * %7 
 br label %24 
 33: 
 store i32 0 , i32 * %7 
 br label %34 
 34: 
 %35 = load i32 , i32 * %7 
 %36 = load i32 , i32 * %3 
 %37 = icmp slt i32 %35 , %36 
 br i1 %37 , label %38 , label %47 
 38: 
 %39 = load i32 , i32 * %7 
 %40 = sext i32 %39 to i64 
 %41 = getelementptr inbounds [ 30 x i32 ] , [ 30 x i32 ] * %6 , i64 0 , i64 %40 
 %42 = load i32 , i32 * %41 
 %43 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%d~0D~0A~00" i64 0 i64 0 ) i32 %42 ) 
 br label %44 
 44: 
 %45 = load i32 , i32 * %7 
 %46 = add nsw i32 %45 , 1 
 store i32 %46 , i32 * %7 
 br label %34 
 47: 
 ret i32 0 
 } 
