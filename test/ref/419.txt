define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 %2 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * @n ) 
 store i64 1 , i64 * getelementptr inbounds ( [ 25 x i64 ] , [ 25 x i64 ] * @ans i64 0 i64 1 ) 
 store i32 2 , i32 * @i 
 br label %3 
 3: 
 %4 = load i32 , i32 * @i 
 %5 = load i32 , i32 * @n 
 %6 = icmp sle i32 %4 , %5 
 br i1 %6 , label %7 , label %22 
 7: 
 %8 = load i32 , i32 * @i 
 %9 = sub nsw i32 %8 , 1 
 %10 = sext i32 %9 to i64 
 %11 = getelementptr inbounds [ 25 x i64 ] , [ 25 x i64 ] * @ans , i64 0 , i64 %10 
 %12 = load i64 , i64 * %11 
 %13 = load i32 , i32 * @i 
 %14 = sext i32 %13 to i64 
 %15 = mul nsw i64 %12 , %14 
 %16 = load i32 , i32 * @i 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 25 x i64 ] , [ 25 x i64 ] * @ans , i64 0 , i64 %17 
 store i64 %15 , i64 * %18 
 br label %19 
 19: 
 %20 = load i32 , i32 * @i 
 %21 = add nsw i32 %20 , 1 
 store i32 %21 , i32 * @i 
 br label %3 
 22: 
 %23 = load i32 , i32 * @n 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 25 x i64 ] , [ 25 x i64 ] * @ans , i64 0 , i64 %24 
 %26 = load i64 , i64 * %25 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %26 ) 
 ret i32 0 
 } 
