define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %1 
 br label %4 
 4: 
 %5 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %6 = icmp ne i32 %5 , -1 
 br i1 %6 , label %7 , label %19 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = icmp eq i32 %8 , 0 
 br i1 %9 , label %10 , label %14 
 10: 
 %11 = load i32 , i32 * @i 
 %12 = add nsw i32 %11 , -1 
 store i32 %12 , i32 * @i 
 %13 = load i32 , i32 * %2 
 call void @pop ( i32 %13 ) 
 br label %18 
 14: 
 %15 = load i32 , i32 * %2 
 call void @push ( i32 %15 ) 
 %16 = load i32 , i32 * @i 
 %17 = add nsw i32 %16 , 1 
 store i32 %17 , i32 * @i 
 br label %18 
 18: 
 br label %4 
 19: 
 store i32 0 , i32 * %3 
 br label %20 
 20: 
 %21 = load i32 , i32 * %3 
 %22 = load i32 , i32 * @j 
 %23 = icmp slt i32 %21 , %22 
 br i1 %23 , label %24 , label %33 
 24: 
 %25 = load i32 , i32 * %3 
 %26 = sext i32 %25 to i64 
 %27 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * @data2 , i64 0 , i64 %26 
 %28 = load i32 , i32 * %27 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %28 ) 
 br label %30 
 30: 
 %31 = load i32 , i32 * %3 
 %32 = add nsw i32 %31 , 1 
 store i32 %32 , i32 * %3 
 br label %20 
 33: 
 %34 = load i32 , i32 * %1 
 ret i32 %34 
 } 
