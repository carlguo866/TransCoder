define dso_local i32 @pop ( i32 * %0 i32 * %1 i32 %2 i32 * %3 ) #0 { 
 %5 = alloca i32 * 
 %6 = alloca i32 * 
 %7 = alloca i32 
 %8 = alloca i32 * 
 store i32 * %0 , i32 * * %5 
 store i32 * %1 , i32 * * %6 
 store i32 %2 , i32 * %7 
 store i32 * %3 , i32 * * %8 
 %9 = load i32 , i32 * %7 
 %10 = add nsw i32 %9 , -1 
 store i32 %10 , i32 * %7 
 %11 = load i32 * , i32 * * %5 
 %12 = load i32 , i32 * %7 
 %13 = sext i32 %12 to i64 
 %14 = getelementptr inbounds i32 , i32 * %11 , i64 %13 
 %15 = load i32 , i32 * %14 
 %16 = load i32 * , i32 * * %6 
 %17 = load i32 * , i32 * * %8 
 %18 = load i32 , i32 * %17 
 %19 = sext i32 %18 to i64 
 %20 = getelementptr inbounds i32 , i32 * %16 , i64 %19 
 store i32 %15 , i32 * %20 
 %21 = load i32 * , i32 * * %8 
 %22 = load i32 , i32 * %21 
 %23 = add nsw i32 %22 , 1 
 %24 = load i32 * , i32 * * %8 
 store i32 %23 , i32 * %24 
 %25 = load i32 , i32 * %7 
 ret i32 %25 
 } 
