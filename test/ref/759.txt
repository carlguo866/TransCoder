define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i64 
 %4 = alloca i64 
 store i32 0 , i32 * %1 
 store i64 0 , i64 * %3 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %31 
 8: 
 store i64 0 , i64 * %3 
 %9 = load i32 , i32 * %2 
 %10 = sext i32 %9 to i64 
 store i64 %10 , i64 * %4 
 br label %11 
 11: 
 %12 = load i64 , i64 * %4 
 %13 = icmp slt i64 %12 , 600 
 br i1 %13 , label %14 , label %28 
 14: 
 %15 = load i64 , i64 * %4 
 %16 = load i64 , i64 * %4 
 %17 = mul nsw i64 %15 , %16 
 %18 = load i32 , i32 * %2 
 %19 = sext i32 %18 to i64 
 %20 = mul nsw i64 %17 , %19 
 %21 = load i64 , i64 * %3 
 %22 = add nsw i64 %21 , %20 
 store i64 %22 , i64 * %3 
 br label %23 
 23: 
 %24 = load i32 , i32 * %2 
 %25 = sext i32 %24 to i64 
 %26 = load i64 , i64 * %4 
 %27 = add nsw i64 %26 , %25 
 store i64 %27 , i64 * %4 
 br label %11 
 28: 
 %29 = load i64 , i64 * %3 
 %30 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %29 ) 
 br label %5 
 31: 
 ret i32 0 
 } 
