define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 store double , double * 0x400921FB54411744 %4 
 store double , double * 0.000000e+00 %5 
 store double , double * 0.000000e+00 %6 
 store i32 90 , i32 * %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 %10 = load i32 , i32 * %2 
 %11 = icmp ne i32 %10 , 0 
 br i1 %11 , label %15 , label %12 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = icmp ne i32 %13 , 0 
 br label %15 
 15: 
 %16 = phi i1 [ true %8 ] , [ %14 %12 ] 
 br i1 %16 , label %17 , label %47 
 17: 
 %18 = load i32 , i32 * %2 
 %19 = sitofp i32 %18 to double 
 %20 = load double , double * %4 
 %21 = fmul double 2.000000e+00 , %20 
 %22 = load i32 , i32 * %7 
 %23 = sitofp i32 %22 to double 
 %24 = fmul double %21 , %23 
 %25 = fdiv double %24 , 3.600000e+02 
 %26 = call double @sin ( double %25 ) #3 
 %27 = fmul double %19 , %26 
 %28 = load double , double * %6 
 %29 = fadd double %28 , %27 
 store double %29 , double * %6 
 %30 = load i32 , i32 * %2 
 %31 = sitofp i32 %30 to double 
 %32 = load double , double * %4 
 %33 = fmul double 2.000000e+00 , %32 
 %34 = load i32 , i32 * %7 
 %35 = sitofp i32 %34 to double 
 %36 = fmul double %33 , %35 
 %37 = fdiv double %36 , 3.600000e+02 
 %38 = call double @cos ( double %37 ) #3 
 %39 = fmul double %31 , %38 
 %40 = load double , double * %5 
 %41 = fadd double %40 , %39 
 store double %41 , double * %5 
 %42 = load i32 , i32 * %7 
 %43 = load i32 , i32 * %3 
 %44 = sub nsw i32 %42 , %43 
 %45 = add nsw i32 %44 , 360 
 %46 = srem i32 %45 , 360 
 store i32 %46 , i32 * %7 
 br label %8 
 47: 
 %48 = load double , double * %5 
 %49 = fptosi double %48 to i32 
 %50 = load double , double * %6 
 %51 = fptosi double %50 to i32 
 %52 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %49 i32 %51 ) 
 ret i32 0 
 } 
