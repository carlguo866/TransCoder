define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i8 
 %3 = alloca [ 80 x i8 ] 
 %4 = alloca i8 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i32 
 %9 = alloca i32 
 %10 = alloca %struct.largenumber 
 %11 = alloca %struct.largenumber 
 store i32 0 , i32 * %1 
 %12 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %5 ) 
 br label %13 
 13: 
 %14 = load i32 , i32 * %5 
 %15 = add nsw i32 %14 , -1 
 store i32 %15 , i32 * %5 
 %16 = icmp ne i32 %14 , 0 
 br i1 %16 , label %17 , label %35 
 17: 
 call void @clear_large_number ( %struct.largenumber * %10 ) 
 call void @clear_large_number ( %struct.largenumber * %11 ) 
 call void @read_large_number ( %struct.largenumber * %10 ) 
 call void @read_large_number ( %struct.largenumber * %11 ) 
 %18 = getelementptr inbounds %struct.largenumber , %struct.largenumber * %10 , i32 0 , i32 1 
 %19 = load i32 , i32 * %18 
 %20 = icmp eq i32 %19 , -1 
 br i1 %20 , label %25 , label %21 
 21: 
 %22 = getelementptr inbounds %struct.largenumber , %struct.largenumber * %11 , i32 0 , i32 1 
 %23 = load i32 , i32 * %22 
 %24 = icmp eq i32 %23 , -1 
 br i1 %24 , label %25 , label %27 
 25: 
 %26 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 10 x i8 ] @".str.3:overflow~0A~00" i64 0 i64 0 ) ) 
 br label %13 
 27: 
 %28 = call %struct.largenumber * @sum_large_number ( %struct.largenumber * %10 %struct.largenumber * %11 ) 
 %29 = getelementptr inbounds %struct.largenumber , %struct.largenumber * %10 , i32 0 , i32 1 
 %30 = load i32 , i32 * %29 
 %31 = icmp eq i32 %30 , -1 
 br i1 %31 , label %32 , label %34 
 32: 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 10 x i8 ] @".str.3:overflow~0A~00" i64 0 i64 0 ) ) 
 br label %13 
 34: 
 call void @print_large_number ( %struct.largenumber * %10 ) 
 br label %13 
 35: 
 ret i32 0 
 } 
