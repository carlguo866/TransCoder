define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca [ 81 x i8 ] 
 %4 = alloca [ 81 x i8 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 br label %5 
 5: 
 %6 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %3 , i64 0 , i64 0 
 %7 = load { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * , { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * * @stdin 
 %8 = call i8 * @fgets ( i8 * %6 i32 81 { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * %7 ) 
 %9 = icmp ne i8 * %8 , null 
 br i1 %9 , label %10 , label %27 
 10: 
 %11 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %3 , i64 0 , i64 0 
 %12 = call i64 @strlen ( i8 * %11 ) #5 
 %13 = icmp ule i64 %12 , 1 
 br i1 %13 , label %14 , label %15 
 14: 
 br label %27 
 15: 
 %16 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %3 , i64 0 , i64 0 
 call void @remove_feed ( i8 * %16 ) 
 %17 = load i32 , i32 * %2 
 %18 = icmp sge i32 %17 , 20 
 br i1 %18 , label %19 , label %20 
 19: 
 br label %27 
 20: 
 %21 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %3 , i64 0 , i64 0 
 %22 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %4 , i64 0 , i64 0 
 call void @decode ( i8 * %21 i8 * %22 ) 
 %23 = getelementptr inbounds [ 81 x i8 ] , [ 81 x i8 ] * %4 , i64 0 , i64 0 
 %24 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%s~0A~00" i64 0 i64 0 ) i8 * %23 ) 
 %25 = load i32 , i32 * %2 
 %26 = add nsw i32 %25 , 1 
 store i32 %26 , i32 * %2 
 br label %5 
 27: 
 ret i32 0 
 } 
