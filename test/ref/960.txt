define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca { i32 %struct.stack * } * 
 store i32 0 , i32 * %1 
 %4 = call noalias i8 * @malloc ( i64 8 ) #3 
 %5 = bitcast i8 * %4 to { i32 %struct.stack * } * 
 store { i32 %struct.stack * } * %5 , { i32 %struct.stack * } * * %3 
 %6 = load { i32 %struct.stack * } * , { i32 %struct.stack * } * * %3 
 %7 = getelementptr inbounds { i32 %struct.stack * } , { i32 %struct.stack * } * %6 , i32 0 , i32 1 
 store { i32 %struct.stack * } * null , { i32 %struct.stack * } * * %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %10 = xor i32 %9 , -1 
 %11 = icmp ne i32 %10 , 0 
 br i1 %11 , label %12 , label %26 
 12: 
 %13 = load i32 , i32 * %2 
 %14 = icmp ne i32 %13 , 0 
 br i1 %14 , label %15 , label %19 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = load { i32 %struct.stack * } * , { i32 %struct.stack * } * * %3 
 %18 = call { i32 %struct.stack * } * @push ( i32 %16 { i32 %struct.stack * } * %17 ) 
 store { i32 %struct.stack * } * %18 , { i32 %struct.stack * } * * %3 
 br label %25 
 19: 
 %20 = load { i32 %struct.stack * } * , { i32 %struct.stack * } * * %3 
 %21 = call i32 @read_top ( { i32 %struct.stack * } * %20 ) 
 %22 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %21 ) 
 %23 = load { i32 %struct.stack * } * , { i32 %struct.stack * } * * %3 
 %24 = call { i32 %struct.stack * } * @pop ( { i32 %struct.stack * } * %23 ) 
 store { i32 %struct.stack * } * %24 , { i32 %struct.stack * } * * %3 
 br label %25 
 25: 
 br label %8 
 26: 
 %27 = load { i32 %struct.stack * } * , { i32 %struct.stack * } * * %3 
 %28 = bitcast { i32 %struct.stack * } * %27 to i8 * 
 call void @free ( i8 * %28 ) #3 
 ret i32 0 
 } 
