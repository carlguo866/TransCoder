define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 1000 x i32 ] 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %43 
 10: 
 %11 = load i32 , i32 * %5 
 %12 = add nsw i32 %11 , 1 
 store i32 %12 , i32 * %5 
 %13 = load i32 , i32 * %5 
 %14 = sext i32 %13 to i64 
 %15 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %4 , i64 0 , i64 %14 
 store i32 0 , i32 * %15 
 store i32 0 , i32 * %3 
 br label %16 
 16: 
 %17 = load i32 , i32 * %3 
 %18 = icmp slt i32 %17 , 600 
 br i1 %18 , label %19 , label %37 
 19: 
 %20 = load i32 , i32 * %5 
 %21 = sext i32 %20 to i64 
 %22 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %4 , i64 0 , i64 %21 
 %23 = load i32 , i32 * %22 
 %24 = load i32 , i32 * %2 
 %25 = load i32 , i32 * %3 
 %26 = mul nsw i32 %24 , %25 
 %27 = load i32 , i32 * %3 
 %28 = mul nsw i32 %26 , %27 
 %29 = add nsw i32 %23 , %28 
 %30 = load i32 , i32 * %5 
 %31 = sext i32 %30 to i64 
 %32 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %4 , i64 0 , i64 %31 
 store i32 %29 , i32 * %32 
 br label %33 
 33: 
 %34 = load i32 , i32 * %3 
 %35 = load i32 , i32 * %2 
 %36 = add nsw i32 %34 , %35 
 store i32 %36 , i32 * %3 
 br label %16 
 37: 
 %38 = load i32 , i32 * %5 
 %39 = sext i32 %38 to i64 
 %40 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %4 , i64 0 , i64 %39 
 %41 = load i32 , i32 * %40 
 %42 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %41 ) 
 br label %7 
 43: 
 ret i32 0 
 } 
