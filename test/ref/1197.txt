define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 1024 x i32 ] 
 %3 = alloca [ 1024 x i32 ] 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %6 
 store i32 0 , i32 * %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %4 ) 
 %10 = icmp ne i32 %9 , -1 
 br i1 %10 , label %11 , label %35 
 11: 
 %12 = load i32 , i32 * %4 
 %13 = icmp ne i32 %12 , 0 
 br i1 %13 , label %14 , label %21 
 14: 
 %15 = load i32 , i32 * %4 
 %16 = load i32 , i32 * %6 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 1024 x i32 ] , [ 1024 x i32 ] * %2 , i64 0 , i64 %17 
 store i32 %15 , i32 * %18 
 %19 = load i32 , i32 * %6 
 %20 = add nsw i32 %19 , 1 
 store i32 %20 , i32 * %6 
 br label %34 
 21: 
 %22 = load i32 , i32 * %6 
 %23 = sub nsw i32 %22 , 1 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 1024 x i32 ] , [ 1024 x i32 ] * %2 , i64 0 , i64 %24 
 %26 = load i32 , i32 * %25 
 %27 = load i32 , i32 * %7 
 %28 = sext i32 %27 to i64 
 %29 = getelementptr inbounds [ 1024 x i32 ] , [ 1024 x i32 ] * %3 , i64 0 , i64 %28 
 store i32 %26 , i32 * %29 
 %30 = load i32 , i32 * %6 
 %31 = add nsw i32 %30 , -1 
 store i32 %31 , i32 * %6 
 %32 = load i32 , i32 * %7 
 %33 = add nsw i32 %32 , 1 
 store i32 %33 , i32 * %7 
 br label %34 
 34: 
 br label %8 
 35: 
 br label %36 
 36: 
 %37 = load i32 , i32 * %6 
 %38 = load i32 , i32 * %7 
 %39 = icmp slt i32 %37 , %38 
 br i1 %39 , label %40 , label %48 
 40: 
 %41 = load i32 , i32 * %6 
 %42 = sext i32 %41 to i64 
 %43 = getelementptr inbounds [ 1024 x i32 ] , [ 1024 x i32 ] * %3 , i64 0 , i64 %42 
 %44 = load i32 , i32 * %43 
 %45 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %44 ) 
 %46 = load i32 , i32 * %6 
 %47 = add nsw i32 %46 , 1 
 store i32 %47 , i32 * %6 
 br label %36 
 48: 
 ret i32 0 
 } 
