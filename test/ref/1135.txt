define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i32 
 %9 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 store i32 600 , i32 * %3 
 br label %10 
 10: 
 %11 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %5 ) 
 %12 = icmp ne i32 %11 , -1 
 br i1 %12 , label %13 , label %45 
 13: 
 %14 = load i32 , i32 * %3 
 %15 = load i32 , i32 * %2 
 %16 = sub nsw i32 %14 , %15 
 %17 = load i32 , i32 * %5 
 %18 = sdiv i32 %16 , %17 
 store i32 %18 , i32 * %6 
 store i32 0 , i32 * %9 
 %19 = load i32 , i32 * %2 
 store i32 %19 , i32 * %4 
 store i32 1 , i32 * %7 
 br label %20 
 20: 
 %21 = load i32 , i32 * %7 
 %22 = load i32 , i32 * %6 
 %23 = icmp sle i32 %21 , %22 
 br i1 %23 , label %24 , label %38 
 24: 
 %25 = load i32 , i32 * %5 
 %26 = load i32 , i32 * %4 
 %27 = call i32 @f ( i32 %26 ) 
 %28 = mul nsw i32 %25 , %27 
 store i32 %28 , i32 * %8 
 %29 = load i32 , i32 * %5 
 %30 = load i32 , i32 * %4 
 %31 = add nsw i32 %30 , %29 
 store i32 %31 , i32 * %4 
 %32 = load i32 , i32 * %8 
 %33 = load i32 , i32 * %9 
 %34 = add nsw i32 %33 , %32 
 store i32 %34 , i32 * %9 
 br label %35 
 35: 
 %36 = load i32 , i32 * %7 
 %37 = add nsw i32 %36 , 1 
 store i32 %37 , i32 * %7 
 br label %20 
 38: 
 %39 = load i32 , i32 * %9 
 %40 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %39 ) 
 %41 = load i32 , i32 * %5 
 %42 = icmp eq i32 %41 , 0 
 br i1 %42 , label %43 , label %44 
 43: 
 br label %45 
 44: 
 br label %10 
 45: 
 %46 = load i32 , i32 * %1 
 ret i32 %46 
 } 
