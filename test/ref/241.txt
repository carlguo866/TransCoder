define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 %4 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 br label %5 
 5: 
 %6 = load i32 , i32 * %3 
 %7 = icmp ne i32 %6 , 0 
 br i1 %7 , label %8 , label %15 
 8: 
 br label %9 
 9: 
 %10 = load i32 , i32 * %3 
 %11 = add nsw i32 %10 , -1 
 store i32 %11 , i32 * %3 
 %12 = sext i32 %10 to i64 
 %13 = load i64 , i64 * @f 
 %14 = mul nsw i64 %13 , %12 
 store i64 %14 , i64 * @f 
 br label %5 
 15: 
 %16 = load i64 , i64 * @f 
 %17 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %16 ) 
 call void @exit ( i32 0 ) #3 
 unreachable 
 } 
