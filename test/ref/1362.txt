define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca [ 101 x i8 ] 
 %9 = alloca [ 101 x i8 ] 
 %10 = alloca i8 * 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %11 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 store i32 0 , i32 * %7 
 br label %12 
 12: 
 %13 = load i32 , i32 * %7 
 %14 = load i32 , i32 * %6 
 %15 = icmp slt i32 %13 , %14 
 br i1 %15 , label %16 , label %30 
 16: 
 %17 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %8 , i64 0 , i64 0 
 %18 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:%s~00" i64 0 i64 0 ) i8 * %17 ) 
 %19 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %9 , i64 0 , i64 0 
 %20 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:%s~00" i64 0 i64 0 ) i8 * %19 ) 
 %21 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %8 , i64 0 , i64 0 
 %22 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %9 , i64 0 , i64 0 
 %23 = call i8 * @add ( i8 * %21 i8 * %22 ) 
 store i8 * %23 , i8 * * %10 
 %24 = load i8 * , i8 * * %10 
 %25 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.2:%s~0A~00" i64 0 i64 0 ) i8 * %24 ) 
 %26 = load i8 * , i8 * * %10 
 call void @free ( i8 * %26 ) #4 
 br label %27 
 27: 
 %28 = load i32 , i32 * %7 
 %29 = add nsw i32 %28 , 1 
 store i32 %29 , i32 * %7 
 br label %12 
 30: 
 ret i32 0 
 } 
