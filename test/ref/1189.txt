define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca double 
 %6 = alloca double 
 store i32 0 , i32 * %1 
 store i32 90 , i32 * %4 
 store double , double * 0.000000e+00 %5 
 store double , double * 0.000000e+00 %6 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%d%*c%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 %9 = load i32 , i32 * %2 
 %10 = sitofp i32 %9 to double 
 %11 = load i32 , i32 * %4 
 %12 = sitofp i32 %11 to double 
 %13 = fdiv double %12 , 1.800000e+02 
 %14 = fmul double %13 , 3.141590e+00 
 %15 = call double @cos ( double %14 ) #3 
 %16 = fmul double %10 , %15 
 %17 = load double , double * %5 
 %18 = fadd double %17 , %16 
 store double %18 , double * %5 
 %19 = load i32 , i32 * %2 
 %20 = sitofp i32 %19 to double 
 %21 = load i32 , i32 * %4 
 %22 = sitofp i32 %21 to double 
 %23 = fdiv double %22 , 1.800000e+02 
 %24 = fmul double %23 , 3.141590e+00 
 %25 = call double @sin ( double %24 ) #3 
 %26 = fmul double %20 , %25 
 %27 = load double , double * %6 
 %28 = fadd double %27 , %26 
 store double %28 , double * %6 
 %29 = load i32 , i32 * %3 
 %30 = load i32 , i32 * %4 
 %31 = sub nsw i32 %30 , %29 
 store i32 %31 , i32 * %4 
 br label %32 
 32: 
 %33 = load i32 , i32 * %2 
 %34 = icmp ne i32 %33 , 0 
 br i1 %34 , label %38 , label %35 
 35: 
 %36 = load i32 , i32 * %3 
 %37 = icmp ne i32 %36 , 0 
 br label %38 
 38: 
 %39 = phi i1 [ true %32 ] , [ %37 %35 ] 
 br i1 %39 , label %7 , label %40 
 40: 
 %41 = load double , double * %5 
 %42 = fptosi double %41 to i32 
 %43 = load double , double * %6 
 %44 = fptosi double %43 to i32 
 %45 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %42 i32 %44 ) 
 ret i32 0 
 } 
