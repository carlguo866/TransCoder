define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 br label %4 
 4: 
 %5 = load i32 , i32 * %3 
 %6 = sext i32 %5 to i64 
 %7 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @t i64 0 i64 0 ) , i64 %6 
 %8 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %7 ) 
 %9 = xor i32 %8 , -1 
 %10 = load i32 , i32 * %3 
 %11 = mul nsw i32 %9 , %10 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %32 
 13: 
 br label %14 
 14: 
 %15 = load i32 , i32 * %3 
 %16 = sext i32 %15 to i64 
 %17 = getelementptr inbounds [ 0 x i32 ] , [ 0 x i32 ] * bitcast ( [ 1 x i32 ] * @t to [ 0 x i32 ] * ) , i64 0 , i64 %16 
 %18 = load i32 , i32 * %17 
 %19 = icmp ne i32 %18 , 0 
 br i1 %19 , label %20 , label %23 
 20: 
 %21 = load i32 , i32 * %3 
 %22 = add nsw i32 %21 , 1 
 store i32 %22 , i32 * %3 
 br label %30 
 23: 
 %24 = load i32 , i32 * %3 
 %25 = add nsw i32 %24 , -1 
 store i32 %25 , i32 * %3 
 %26 = sext i32 %25 to i64 
 %27 = getelementptr inbounds [ 0 x i32 ] , [ 0 x i32 ] * bitcast ( [ 1 x i32 ] * @t to [ 0 x i32 ] * ) , i64 0 , i64 %26 
 %28 = load i32 , i32 * %27 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %28 ) 
 br label %30 
 30: 
 %31 = phi i32 [ %21 %20 ] , [ %29 %23 ] 
 br label %4 
 32: 
 %33 = load i32 , i32 * %2 
 ret i32 %33 
 } 
