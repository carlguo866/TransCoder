define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %38 
 8: 
 store i32 1 , i32 * %3 
 %9 = load i32 , i32 * %2 
 %10 = load i32 , i32 * %2 
 %11 = mul nsw i32 %9 , %10 
 %12 = load i32 , i32 * %2 
 %13 = mul nsw i32 %11 , %12 
 store i32 %13 , i32 * %4 
 br label %14 
 14: 
 %15 = load i32 , i32 * %2 
 %16 = load i32 , i32 * %3 
 %17 = mul nsw i32 %15 , %16 
 %18 = load i32 , i32 * %2 
 %19 = sub nsw i32 600 , %18 
 %20 = icmp ne i32 %17 , %19 
 br i1 %20 , label %21 , label %35 
 21: 
 %22 = load i32 , i32 * %3 
 %23 = add nsw i32 %22 , 1 
 store i32 %23 , i32 * %3 
 %24 = load i32 , i32 * %2 
 %25 = load i32 , i32 * %3 
 %26 = mul nsw i32 %24 , %25 
 %27 = load i32 , i32 * %2 
 %28 = mul nsw i32 %26 , %27 
 %29 = load i32 , i32 * %3 
 %30 = mul nsw i32 %28 , %29 
 %31 = load i32 , i32 * %2 
 %32 = mul nsw i32 %30 , %31 
 %33 = load i32 , i32 * %4 
 %34 = add nsw i32 %33 , %32 
 store i32 %34 , i32 * %4 
 br label %14 
 35: 
 %36 = load i32 , i32 * %4 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 br label %5 
 38: 
 ret i32 0 
 } 
