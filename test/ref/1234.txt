define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 101 x i8 ] 
 %5 = alloca [ 101 x i8 ] 
 %6 = alloca i8 * 
 store i32 0 , i32 * %1 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 store i32 0 , i32 * %3 
 br label %8 
 8: 
 %9 = load i32 , i32 * %3 
 %10 = load i32 , i32 * %2 
 %11 = icmp slt i32 %9 , %10 
 br i1 %11 , label %12 , label %30 
 12: 
 %13 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %4 , i64 0 , i64 0 
 %14 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:%s~00" i64 0 i64 0 ) i8 * %13 ) 
 %15 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %5 , i64 0 , i64 0 
 %16 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:%s~00" i64 0 i64 0 ) i8 * %15 ) 
 %17 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %4 , i64 0 , i64 0 
 %18 = getelementptr inbounds [ 101 x i8 ] , [ 101 x i8 ] * %5 , i64 0 , i64 0 
 %19 = call i32 @add ( i8 * %17 i8 * %18 i8 * * %6 ) 
 %20 = icmp ne i32 %19 , 0 
 br i1 %20 , label %21 , label %23 
 21: 
 %22 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 10 x i8 ] @".str.2:overflow~0A~00" i64 0 i64 0 ) ) 
 br label %27 
 23: 
 %24 = load i8 * , i8 * * %6 
 %25 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.3:%s~0A~00" i64 0 i64 0 ) i8 * %24 ) 
 %26 = load i8 * , i8 * * %6 
 call void @free ( i8 * %26 ) #4 
 br label %27 
 27: 
 %28 = load i32 , i32 * %3 
 %29 = add nsw i32 %28 , 1 
 store i32 %29 , i32 * %3 
 br label %8 
 30: 
 ret i32 0 
 } 
