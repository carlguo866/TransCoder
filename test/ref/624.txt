define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i64 
 store i32 0 , i32 * %1 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %33 
 8: 
 store i64 0 , i64 * %4 
 %9 = load i32 , i32 * %3 
 store i32 %9 , i32 * %2 
 br label %10 
 10: 
 %11 = load i32 , i32 * %2 
 %12 = load i32 , i32 * %3 
 %13 = sub nsw i32 600 , %12 
 %14 = icmp sle i32 %11 , %13 
 br i1 %14 , label %15 , label %30 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = sext i32 %16 to i64 
 %18 = load i32 , i32 * %2 
 %19 = sext i32 %18 to i64 
 %20 = mul nsw i64 %17 , %19 
 %21 = load i32 , i32 * %3 
 %22 = sext i32 %21 to i64 
 %23 = mul nsw i64 %20 , %22 
 %24 = load i64 , i64 * %4 
 %25 = add nsw i64 %24 , %23 
 store i64 %25 , i64 * %4 
 br label %26 
 26: 
 %27 = load i32 , i32 * %3 
 %28 = load i32 , i32 * %2 
 %29 = add nsw i32 %28 , %27 
 store i32 %29 , i32 * %2 
 br label %10 
 30: 
 %31 = load i64 , i64 * %4 
 %32 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %31 ) 
 br label %5 
 33: 
 ret i32 0 
 } 
