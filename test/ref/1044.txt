define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca [ 100 x i32 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %26 
 9: 
 %10 = call i32 @isfull ( ) 
 %11 = icmp ne i32 %10 , 0 
 br i1 %11 , label %25 , label %12 
 12: 
 %13 = load i32 , i32 * %2 
 %14 = icmp ne i32 %13 , 0 
 br i1 %14 , label %15 , label %17 
 15: 
 %16 = load i32 , i32 * %2 
 call void @push ( i32 %16 ) 
 br label %24 
 17: 
 %18 = call i32 @top ( ) 
 %19 = load i32 , i32 * %4 
 %20 = sext i32 %19 to i64 
 %21 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %20 
 store i32 %18 , i32 * %21 
 call void @pop ( ) 
 %22 = load i32 , i32 * %4 
 %23 = add nsw i32 %22 , 1 
 store i32 %23 , i32 * %4 
 br label %24 
 24: 
 br label %25 
 25: 
 br label %6 
 26: 
 store i32 0 , i32 * %3 
 br label %27 
 27: 
 %28 = load i32 , i32 * %3 
 %29 = load i32 , i32 * %4 
 %30 = icmp slt i32 %28 , %29 
 br i1 %30 , label %31 , label %40 
 31: 
 %32 = load i32 , i32 * %3 
 %33 = sext i32 %32 to i64 
 %34 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %33 
 %35 = load i32 , i32 * %34 
 %36 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %35 ) 
 br label %37 
 37: 
 %38 = load i32 , i32 * %3 
 %39 = add nsw i32 %38 , 1 
 store i32 %39 , i32 * %3 
 br label %27 
 40: 
 ret i32 0 
 } 
