define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 br label %4 
 4: 
 %5 = load i32 , i32 * %3 
 %6 = sext i32 %5 to i64 
 %7 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 0 i64 0 ) , i64 %6 
 %8 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %7 ) 
 %9 = xor i32 %8 , -1 
 store i32 %9 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 0 i64 0 ) 
 %10 = icmp ne i32 %9 , 0 
 br i1 %10 , label %11 , label %29 
 11: 
 br label %12 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = add nsw i32 %13 , 1 
 store i32 %14 , i32 * %3 
 %15 = sext i32 %13 to i64 
 %16 = getelementptr inbounds [ 0 x i32 ] , [ 0 x i32 ] * bitcast ( [ 1 x i32 ] * @s to [ 0 x i32 ] * ) , i64 0 , i64 %15 
 %17 = load i32 , i32 * %16 
 %18 = icmp ne i32 %17 , 0 
 br i1 %18 , label %19 , label %20 
 19: 
 br label %27 
 20: 
 %21 = load i32 , i32 * %3 
 %22 = sub nsw i32 %21 , 2 
 store i32 %22 , i32 * %3 
 %23 = sext i32 %22 to i64 
 %24 = getelementptr inbounds [ 0 x i32 ] , [ 0 x i32 ] * bitcast ( [ 1 x i32 ] * @s to [ 0 x i32 ] * ) , i64 0 , i64 %23 
 %25 = load i32 , i32 * %24 
 %26 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %25 ) 
 br label %27 
 27: 
 %28 = phi i32 [ %17 %19 ] , [ %26 %20 ] 
 br label %4 
 29: 
 %30 = load i32 , i32 * %2 
 ret i32 %30 
 } 
