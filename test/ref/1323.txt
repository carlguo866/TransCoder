define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca [ 1000000 x i32 ] 
 store i32 0 , i32 * %1 
 %6 = bitcast [ 1000000 x i32 ] * %5 to i8 * 
 call void @llvm.memset.p0i8.i64 ( i8 * %6 i8 0 i64 4000000 i1 false ) 
 store i32 0 , i32 * %2 
 br label %7 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = icmp slt i32 %8 , 1000000 
 br i1 %9 , label %10 , label %22 
 10: 
 %11 = load i32 , i32 * %2 
 %12 = call i32 @find ( i32 %11 ) 
 %13 = icmp ne i32 %12 , 0 
 br i1 %13 , label %14 , label %18 
 14: 
 %15 = load i32 , i32 * %2 
 %16 = sext i32 %15 to i64 
 %17 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %5 , i64 0 , i64 %16 
 store i32 1 , i32 * %17 
 br label %18 
 18: 
 br label %19 
 19: 
 %20 = load i32 , i32 * %2 
 %21 = add nsw i32 %20 , 1 
 store i32 %21 , i32 * %2 
 br label %7 
 22: 
 br label %23 
 23: 
 %24 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %25 = icmp ne i32 %24 , -1 
 br i1 %25 , label %26 , label %47 
 26: 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %2 
 br label %27 
 27: 
 %28 = load i32 , i32 * %2 
 %29 = load i32 , i32 * %3 
 %30 = icmp sle i32 %28 , %29 
 br i1 %30 , label %31 , label %44 
 31: 
 %32 = load i32 , i32 * %2 
 %33 = sext i32 %32 to i64 
 %34 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %5 , i64 0 , i64 %33 
 %35 = load i32 , i32 * %34 
 %36 = icmp ne i32 %35 , 0 
 br i1 %36 , label %37 , label %40 
 37: 
 %38 = load i32 , i32 * %4 
 %39 = add nsw i32 %38 , 1 
 store i32 %39 , i32 * %4 
 br label %40 
 40: 
 br label %41 
 41: 
 %42 = load i32 , i32 * %2 
 %43 = add nsw i32 %42 , 1 
 store i32 %43 , i32 * %2 
 br label %27 
 44: 
 %45 = load i32 , i32 * %4 
 %46 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %45 ) 
 br label %23 
 47: 
 ret i32 0 
 } 
