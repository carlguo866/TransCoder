define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 store i32 0 , i32 * %1 
 %5 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i64 * %2 ) 
 %6 = load i64 , i64 * %2 
 %7 = icmp ult i64 0 , %6 
 br i1 %7 , label %8 , label %28 
 8: 
 %9 = load i64 , i64 * %2 
 %10 = icmp ule i64 %9 , 20 
 br i1 %10 , label %11 , label %28 
 11: 
 %12 = load i64 , i64 * %2 
 store i64 %12 , i64 * %4 
 %13 = load i64 , i64 * %2 
 %14 = sub i64 %13 , 1 
 store i64 %14 , i64 * %3 
 br label %15 
 15: 
 %16 = load i64 , i64 * %3 
 %17 = icmp ugt i64 %16 , 0 
 br i1 %17 , label %18 , label %25 
 18: 
 %19 = load i64 , i64 * %4 
 %20 = load i64 , i64 * %3 
 %21 = mul i64 %19 , %20 
 store i64 %21 , i64 * %4 
 br label %22 
 22: 
 %23 = load i64 , i64 * %3 
 %24 = add i64 %23 , -1 
 store i64 %24 , i64 * %3 
 br label %15 
 25: 
 %26 = load i64 , i64 * %4 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %26 ) 
 br label %28 
 28: 
 ret i32 0 
 } 
