define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 * 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %8 = call noalias i8 * @malloc ( i64 20 ) #3 
 %9 = bitcast i8 * %8 to i32 * 
 store i32 * %9 , i32 * * %7 
 %10 = load i32 * , i32 * * %7 
 call void @init ( i32 * %10 ) 
 %11 = load i32 * , i32 * * %7 
 call void @sort ( i32 * %11 ) 
 store i32 0 , i32 * %6 
 br label %12 
 12: 
 %13 = load i32 , i32 * %6 
 %14 = icmp slt i32 %13 , 4 
 br i1 %14 , label %15 , label %25 
 15: 
 %16 = load i32 * , i32 * * %7 
 %17 = load i32 , i32 * %6 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds i32 , i32 * %16 , i64 %18 
 %20 = load i32 , i32 * %19 
 %21 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%d ~00" i64 0 i64 0 ) i32 %20 ) 
 br label %22 
 22: 
 %23 = load i32 , i32 * %6 
 %24 = add nsw i32 %23 , 1 
 store i32 %24 , i32 * %6 
 br label %12 
 25: 
 %26 = load i32 * , i32 * * %7 
 %27 = getelementptr inbounds i32 , i32 * %26 , i64 4 
 %28 = load i32 , i32 * %27 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %28 ) 
 ret i32 0 
 } 
