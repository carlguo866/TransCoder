define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 %5 = alloca i64 
 store i32 0 , i32 * %1 
 store i64 0 , i64 * %5 
 store i64 0 , i64 * %2 
 br label %6 
 6: 
 %7 = load i64 , i64 * %2 
 %8 = icmp ult i64 %7 , 1000000 
 br i1 %8 , label %9 , label %19 
 9: 
 %10 = load i64 , i64 * %2 
 %11 = add i64 %10 , 1 
 %12 = call i32 @isprime ( i64 %11 ) 
 %13 = trunc i32 %12 to i8 
 %14 = load i64 , i64 * %2 
 %15 = getelementptr inbounds [ 1000000 x i8 ] , [ 1000000 x i8 ] * @prime , i64 0 , i64 %14 
 store i8 %13 , i8 * %15 
 br label %16 
 16: 
 %17 = load i64 , i64 * %2 
 %18 = add i64 %17 , 1 
 store i64 %18 , i64 * %2 
 br label %6 
 19: 
 br label %20 
 20: 
 %21 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%ld~00" i64 0 i64 0 ) i64 * %4 ) 
 %22 = icmp ne i32 %21 , -1 
 br i1 %22 , label %23 , label %42 
 23: 
 store i64 0 , i64 * %5 
 store i64 1 , i64 * %2 
 br label %24 
 24: 
 %25 = load i64 , i64 * %2 
 %26 = load i64 , i64 * %4 
 %27 = icmp ule i64 %25 , %26 
 br i1 %27 , label %28 , label %39 
 28: 
 %29 = load i64 , i64 * %2 
 %30 = sub i64 %29 , 1 
 %31 = getelementptr inbounds [ 1000000 x i8 ] , [ 1000000 x i8 ] * @prime , i64 0 , i64 %30 
 %32 = load i8 , i8 * %31 
 %33 = sext i8 %32 to i64 
 %34 = load i64 , i64 * %5 
 %35 = add i64 %34 , %33 
 store i64 %35 , i64 * %5 
 br label %36 
 36: 
 %37 = load i64 , i64 * %2 
 %38 = add i64 %37 , 1 
 store i64 %38 , i64 * %2 
 br label %24 
 39: 
 %40 = load i64 , i64 * %5 
 %41 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %40 ) 
 br label %20 
 42: 
 ret i32 0 
 } 
