define dso_local i32 @f ( i32 %0 ) #0 { 
 %2 = alloca i32 
 store i32 %0 , i32 * %2 
 %3 = load i32 , i32 * %2 
 %4 = add nsw i32 %3 , 1 
 %5 = sext i32 %4 to i64 
 %6 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %5 
 %7 = load float , float * %6 
 %8 = load i32 , i32 * %2 
 %9 = add nsw i32 %8 , 2 
 %10 = srem i32 %9 , 6 
 %11 = sext i32 %10 to i64 
 %12 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %11 
 %13 = load float , float * %12 
 %14 = load float , float * getelementptr inbounds ( [ 8 x float ] , [ 8 x float ] * @c i64 0 i64 6 ) 
 %15 = fsub float %13 , %14 
 %16 = fmul float %7 , %15 
 %17 = load i32 , i32 * %2 
 %18 = add nsw i32 %17 , 3 
 %19 = srem i32 %18 , 6 
 %20 = sext i32 %19 to i64 
 %21 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %20 
 %22 = load float , float * %21 
 %23 = load float , float * getelementptr inbounds ( [ 8 x float ] , [ 8 x float ] * @c i64 0 i64 6 ) 
 %24 = load i32 , i32 * %2 
 %25 = sext i32 %24 to i64 
 %26 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %25 
 %27 = load float , float * %26 
 %28 = fsub float %23 , %27 
 %29 = fmul float %22 , %28 
 %30 = fadd float %16 , %29 
 %31 = load float , float * getelementptr inbounds ( [ 8 x float ] , [ 8 x float ] * @c i64 0 i64 7 ) 
 %32 = load i32 , i32 * %2 
 %33 = sext i32 %32 to i64 
 %34 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %33 
 %35 = load float , float * %34 
 %36 = load i32 , i32 * %2 
 %37 = add nsw i32 %36 , 2 
 %38 = srem i32 %37 , 6 
 %39 = sext i32 %38 to i64 
 %40 = getelementptr inbounds [ 8 x float ] , [ 8 x float ] * @c , i64 0 , i64 %39 
 %41 = load float , float * %40 
 %42 = fsub float %35 , %41 
 %43 = fmul float %31 , %42 
 %44 = fadd float %30 , %43 
 %45 = fptosi float %44 to i32 
 ret i32 %45 
 } 
