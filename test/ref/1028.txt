define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 store i32 0 , i32 * %1 
 br label %3 
 3: 
 %4 = load i32 , i32 * @i 
 %5 = sext i32 %4 to i64 
 %6 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * @data , i64 0 , i64 %5 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %26 
 9: 
 %10 = load i32 , i32 * @i 
 %11 = sext i32 %10 to i64 
 %12 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * @data , i64 0 , i64 %11 
 %13 = load i32 , i32 * %12 
 %14 = icmp ne i32 %13 , 0 
 br i1 %14 , label %15 , label %18 
 15: 
 %16 = load i32 , i32 * @i 
 %17 = add nsw i32 %16 , 1 
 store i32 %17 , i32 * @i 
 br label %25 
 18: 
 %19 = call i32 @top ( ) 
 %20 = load i32 , i32 * @k 
 %21 = sext i32 %20 to i64 
 %22 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * @out , i64 0 , i64 %21 
 store i32 %19 , i32 * %22 
 %23 = load i32 , i32 * @k 
 %24 = add nsw i32 %23 , 1 
 store i32 %24 , i32 * @k 
 call void @pop ( ) 
 br label %25 
 25: 
 br label %3 
 26: 
 store i32 0 , i32 * %2 
 br label %27 
 27: 
 %28 = load i32 , i32 * %2 
 %29 = load i32 , i32 * @k 
 %30 = icmp slt i32 %28 , %29 
 br i1 %30 , label %31 , label %40 
 31: 
 %32 = load i32 , i32 * %2 
 %33 = sext i32 %32 to i64 
 %34 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * @out , i64 0 , i64 %33 
 %35 = load i32 , i32 * %34 
 %36 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %35 ) 
 br label %37 
 37: 
 %38 = load i32 , i32 * %2 
 %39 = add nsw i32 %38 , 1 
 store i32 %39 , i32 * %2 
 br label %27 
 40: 
 ret i32 0 
 } 
