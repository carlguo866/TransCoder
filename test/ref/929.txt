define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * 
 store i32 0 , i32 * %1 
 %6 = call i8 * @E_sieve ( i32 999999 ) 
 store i8 * %6 , i8 * * %5 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %34 
 10: 
 store i32 0 , i32 * %4 
 store i32 2 , i32 * %3 
 br label %11 
 11: 
 %12 = load i32 , i32 * %3 
 %13 = load i32 , i32 * %2 
 %14 = icmp sle i32 %12 , %13 
 br i1 %14 , label %15 , label %31 
 15: 
 %16 = load i8 * , i8 * * %5 
 %17 = load i32 , i32 * %3 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds i8 , i8 * %16 , i64 %18 
 %20 = load i8 , i8 * %19 
 %21 = trunc i8 %20 to i1 
 %22 = zext i1 %21 to i32 
 %23 = icmp eq i32 %22 , 1 
 br i1 %23 , label %24 , label %27 
 24: 
 %25 = load i32 , i32 * %4 
 %26 = add nsw i32 %25 , 1 
 store i32 %26 , i32 * %4 
 br label %27 
 27: 
 br label %28 
 28: 
 %29 = load i32 , i32 * %3 
 %30 = add nsw i32 %29 , 1 
 store i32 %30 , i32 * %3 
 br label %11 
 31: 
 %32 = load i32 , i32 * %4 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %32 ) 
 br label %7 
 34: 
 ret i32 0 
 } 
