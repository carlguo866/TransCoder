define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 10 x i32 ] 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 br label %5 
 5: 
 %6 = load i32 , i32 * %4 
 %7 = icmp slt i32 %6 , 10 
 br i1 %7 , label %8 , label %15 
 8: 
 %9 = load i32 , i32 * %4 
 %10 = sext i32 %9 to i64 
 %11 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %10 
 store i32 0 , i32 * %11 
 br label %12 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = add nsw i32 %13 , 1 
 store i32 %14 , i32 * %4 
 br label %5 
 15: 
 store i32 0 , i32 * %4 
 br label %16 
 16: 
 %17 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %18 = icmp ne i32 %17 , -1 
 br i1 %18 , label %19 , label %43 
 19: 
 %20 = load i32 , i32 * %3 
 %21 = icmp eq i32 %20 , 0 
 br i1 %21 , label %22 , label %35 
 22: 
 %23 = load i32 , i32 * %4 
 %24 = sub nsw i32 %23 , 1 
 %25 = sext i32 %24 to i64 
 %26 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %25 
 %27 = load i32 , i32 * %26 
 %28 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %27 ) 
 %29 = load i32 , i32 * %4 
 %30 = sub nsw i32 %29 , 1 
 %31 = sext i32 %30 to i64 
 %32 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %31 
 store i32 0 , i32 * %32 
 %33 = load i32 , i32 * %4 
 %34 = add nsw i32 %33 , -1 
 store i32 %34 , i32 * %4 
 br label %42 
 35: 
 %36 = load i32 , i32 * %3 
 %37 = load i32 , i32 * %4 
 %38 = sext i32 %37 to i64 
 %39 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %38 
 store i32 %36 , i32 * %39 
 %40 = load i32 , i32 * %4 
 %41 = add nsw i32 %40 , 1 
 store i32 %41 , i32 * %4 
 br label %42 
 42: 
 br label %16 
 43: 
 ret i32 0 
 } 
