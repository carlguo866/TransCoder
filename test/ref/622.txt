define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 %5 = alloca i64 
 %6 = alloca i64 
 store i32 0 , i32 * %1 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%ld~00" i64 0 i64 0 ) i64 * %2 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %31 
 10: 
 store i64 0 , i64 * %3 
 store i64 0 , i64 * %4 
 store i64 0 , i64 * %5 
 %11 = load i64 , i64 * %2 
 store i64 %11 , i64 * %6 
 br label %12 
 12: 
 %13 = load i64 , i64 * %2 
 %14 = icmp sgt i64 %13 , 599 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %28 
 16: 
 %17 = load i64 , i64 * %6 
 %18 = load i64 , i64 * %2 
 %19 = mul nsw i64 %17 , %18 
 %20 = load i64 , i64 * %2 
 %21 = mul nsw i64 %19 , %20 
 store i64 %21 , i64 * %3 
 %22 = load i64 , i64 * %4 
 %23 = load i64 , i64 * %3 
 %24 = add nsw i64 %22 , %23 
 store i64 %24 , i64 * %4 
 %25 = load i64 , i64 * %2 
 %26 = load i64 , i64 * %6 
 %27 = add nsw i64 %25 , %26 
 store i64 %27 , i64 * %2 
 br label %12 
 28: 
 %29 = load i64 , i64 * %4 
 %30 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %29 ) 
 br label %7 
 31: 
 ret i32 0 
 } 
