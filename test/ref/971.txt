define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 11 x i32 ] 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 %7 = bitcast [ 11 x i32 ] * %4 to i8 * 
 call void @llvm.memset.p0i8.i64 ( i8 * %7 i8 0 i64 44 i1 false ) 
 store i32 0 , i32 * %5 
 store i32 0 , i32 * %6 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %10 = icmp ne i32 %9 , -1 
 br i1 %10 , label %11 , label %37 
 11: 
 %12 = load i32 , i32 * %2 
 %13 = icmp eq i32 0 , %12 
 br i1 %13 , label %22 , label %14 
 14: 
 %15 = load i32 , i32 * %2 
 %16 = load i32 , i32 * %5 
 %17 = add nsw i32 %16 , 1 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * %4 , i64 0 , i64 %18 
 store i32 %15 , i32 * %19 
 %20 = load i32 , i32 * %5 
 %21 = add nsw i32 %20 , 1 
 store i32 %21 , i32 * %5 
 br label %36 
 22: 
 %23 = load i32 , i32 * %5 
 %24 = icmp sge i32 %23 , 1 
 br i1 %24 , label %25 , label %28 
 25: 
 %26 = load i32 , i32 * %5 
 %27 = add nsw i32 %26 , -1 
 store i32 %27 , i32 * %5 
 br label %29 
 28: 
 br label %37 
 29: 
 %30 = load i32 , i32 * %5 
 %31 = add nsw i32 %30 , 1 
 %32 = sext i32 %31 to i64 
 %33 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * %4 , i64 0 , i64 %32 
 %34 = load i32 , i32 * %33 
 %35 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %34 ) 
 br label %36 
 36: 
 br label %8 
 37: 
 ret i32 0 
 } 
