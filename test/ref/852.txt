define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %34 
 10: 
 store i32 0 , i32 * %3 
 store i32 2 , i32 * %4 
 %11 = load i32 , i32 * %2 
 store i32 %11 , i32 * %5 
 %12 = load i32 , i32 * %2 
 store i32 %12 , i32 * %6 
 br label %13 
 13: 
 %14 = load i32 , i32 * %6 
 %15 = load i32 , i32 * %5 
 %16 = sub nsw i32 600 , %15 
 %17 = icmp sle i32 %14 , %16 
 br i1 %17 , label %18 , label %31 
 18: 
 %19 = load i32 , i32 * %3 
 %20 = load i32 , i32 * %6 
 %21 = load i32 , i32 * %6 
 %22 = mul nsw i32 %20 , %21 
 %23 = load i32 , i32 * %5 
 %24 = mul nsw i32 %22 , %23 
 %25 = add nsw i32 %19 , %24 
 store i32 %25 , i32 * %3 
 %26 = load i32 , i32 * %2 
 %27 = load i32 , i32 * %4 
 %28 = mul nsw i32 %26 , %27 
 store i32 %28 , i32 * %6 
 %29 = load i32 , i32 * %4 
 %30 = add nsw i32 %29 , 1 
 store i32 %30 , i32 * %4 
 br label %13 
 31: 
 %32 = load i32 , i32 * %3 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %32 ) 
 br label %7 
 34: 
 ret i32 0 
 } 
