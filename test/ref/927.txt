define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i64 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %32 
 9: 
 %10 = load i32 , i32 * %2 
 %11 = sdiv i32 600 , %10 
 store i32 %11 , i32 * %4 
 store i64 0 , i64 * %5 
 store i32 0 , i32 * %3 
 br label %12 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = load i32 , i32 * %4 
 %15 = sub nsw i32 %14 , 1 
 %16 = icmp slt i32 %13 , %15 
 br i1 %16 , label %17 , label %29 
 17: 
 %18 = load i32 , i32 * %2 
 %19 = load i32 , i32 * %3 
 %20 = add nsw i32 %19 , 1 
 %21 = mul nsw i32 %18 , %20 
 %22 = load i32 , i32 * %2 
 %23 = call i64 @area ( i32 %21 i32 %22 ) 
 %24 = load i64 , i64 * %5 
 %25 = add nsw i64 %24 , %23 
 store i64 %25 , i64 * %5 
 br label %26 
 26: 
 %27 = load i32 , i32 * %3 
 %28 = add nsw i32 %27 , 1 
 store i32 %28 , i32 * %3 
 br label %12 
 29: 
 %30 = load i64 , i64 * %5 
 %31 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %30 ) 
 br label %6 
 32: 
 ret i32 0 
 } 
