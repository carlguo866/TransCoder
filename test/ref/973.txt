define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 10 x i32 ] 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 br label %5 
 5: 
 %6 = load i32 , i32 * %4 
 %7 = icmp sle i32 %6 , 9 
 br i1 %7 , label %8 , label %15 
 8: 
 %9 = load i32 , i32 * %4 
 %10 = sext i32 %9 to i64 
 %11 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %10 
 store i32 0 , i32 * %11 
 br label %12 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = add nsw i32 %13 , 1 
 store i32 %14 , i32 * %4 
 br label %5 
 15: 
 store i32 0 , i32 * %4 
 br label %16 
 16: 
 %17 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %18 = icmp sle i32 0 , %17 
 br i1 %18 , label %19 , label %38 
 19: 
 %20 = load i32 , i32 * %3 
 %21 = icmp sgt i32 %20 , 0 
 br i1 %21 , label %22 , label %29 
 22: 
 %23 = load i32 , i32 * %3 
 %24 = load i32 , i32 * %4 
 %25 = sext i32 %24 to i64 
 %26 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %25 
 store i32 %23 , i32 * %26 
 %27 = load i32 , i32 * %4 
 %28 = add nsw i32 %27 , 1 
 store i32 %28 , i32 * %4 
 br label %37 
 29: 
 %30 = load i32 , i32 * %4 
 %31 = add nsw i32 %30 , -1 
 store i32 %31 , i32 * %4 
 %32 = load i32 , i32 * %4 
 %33 = sext i32 %32 to i64 
 %34 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %2 , i64 0 , i64 %33 
 %35 = load i32 , i32 * %34 
 %36 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %35 ) 
 br label %37 
 37: 
 br label %16 
 38: 
 ret i32 0 
 } 
