define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 br label %4 
 4: 
 %5 = load i32 , i32 * %3 
 %6 = sext i32 %5 to i64 
 %7 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 11 x i32 ] , [ 11 x i32 ] * @x i64 0 i64 0 ) , i64 %6 
 %8 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %7 ) 
 %9 = xor i32 %8 , -1 
 %10 = icmp ne i32 %9 , 0 
 br i1 %10 , label %11 , label %30 
 11: 
 br label %12 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = sext i32 %13 to i64 
 %15 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * @x , i64 0 , i64 %14 
 %16 = load i32 , i32 * %15 
 %17 = icmp ne i32 %16 , 0 
 br i1 %17 , label %18 , label %21 
 18: 
 %19 = load i32 , i32 * %3 
 %20 = add nsw i32 %19 , 1 
 store i32 %20 , i32 * %3 
 br label %28 
 21: 
 %22 = load i32 , i32 * %3 
 %23 = add nsw i32 %22 , -1 
 store i32 %23 , i32 * %3 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * @x , i64 0 , i64 %24 
 %26 = load i32 , i32 * %25 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %26 ) 
 br label %28 
 28: 
 %29 = phi i32 [ %20 %18 ] , [ %27 %21 ] 
 br label %4 
 30: 
 %31 = load i32 , i32 * %2 
 ret i32 %31 
 } 
