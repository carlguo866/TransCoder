define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca double 
 %7 = alloca double 
 store i32 0 , i32 * %1 
 store i32 90 , i32 * %5 
 store double , double * 0.000000e+00 %6 
 store double , double * 0.000000e+00 %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %3 i32 * %4 ) 
 %10 = load i32 , i32 * %3 
 %11 = icmp eq i32 %10 , 0 
 br i1 %11 , label %12 , label %16 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = icmp eq i32 %13 , 0 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %42 
 16: 
 %17 = load i32 , i32 * %3 
 %18 = sitofp i32 %17 to double 
 %19 = load i32 , i32 * %5 
 %20 = sitofp i32 %19 to double 
 %21 = call double @acos ( double -1.000000e+00 ) #3 
 %22 = fmul double %20 , %21 
 %23 = fdiv double %22 , 1.800000e+02 
 %24 = call double @cos ( double %23 ) #3 
 %25 = fmul double %18 , %24 
 %26 = load double , double * %6 
 %27 = fadd double %26 , %25 
 store double %27 , double * %6 
 %28 = load i32 , i32 * %3 
 %29 = sitofp i32 %28 to double 
 %30 = load i32 , i32 * %5 
 %31 = sitofp i32 %30 to double 
 %32 = call double @acos ( double -1.000000e+00 ) #3 
 %33 = fmul double %31 , %32 
 %34 = fdiv double %33 , 1.800000e+02 
 %35 = call double @sin ( double %34 ) #3 
 %36 = fmul double %29 , %35 
 %37 = load double , double * %7 
 %38 = fadd double %37 , %36 
 store double %38 , double * %7 
 %39 = load i32 , i32 * %4 
 %40 = load i32 , i32 * %5 
 %41 = sub nsw i32 %40 , %39 
 store i32 %41 , i32 * %5 
 br label %8 
 42: 
 %43 = load double , double * %6 
 %44 = fptosi double %43 to i32 
 %45 = load double , double * %7 
 %46 = fptosi double %45 to i32 
 %47 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %44 i32 %46 ) 
 ret i32 0 
 } 
