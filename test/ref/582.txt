define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca [ 30 x i32 ] 
 %4 = alloca i64 
 %5 = alloca i64 
 store i32 0 , i32 * %1 
 store i64 1 , i64 * %5 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = load i32 , i32 * %2 
 %8 = sext i32 %7 to i64 
 store i64 %8 , i64 * %4 
 br label %9 
 9: 
 %10 = load i64 , i64 * %4 
 %11 = icmp sgt i64 %10 , 0 
 br i1 %11 , label %12 , label %26 
 12: 
 %13 = load i64 , i64 * %4 
 %14 = trunc i64 %13 to i32 
 %15 = load i64 , i64 * %4 
 %16 = getelementptr inbounds [ 30 x i32 ] , [ 30 x i32 ] * %3 , i64 0 , i64 %15 
 store i32 %14 , i32 * %16 
 %17 = load i64 , i64 * %5 
 %18 = load i64 , i64 * %4 
 %19 = getelementptr inbounds [ 30 x i32 ] , [ 30 x i32 ] * %3 , i64 0 , i64 %18 
 %20 = load i32 , i32 * %19 
 %21 = sext i32 %20 to i64 
 %22 = mul nsw i64 %17 , %21 
 store i64 %22 , i64 * %5 
 br label %23 
 23: 
 %24 = load i64 , i64 * %4 
 %25 = add nsw i64 %24 , -1 
 store i64 %25 , i64 * %4 
 br label %9 
 26: 
 %27 = load i64 , i64 * %5 
 %28 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %27 ) 
 ret i32 0 
 } 
