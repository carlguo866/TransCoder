define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 5 x i32 ] 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %3 
 br label %5 
 5: 
 %6 = load i32 , i32 * %3 
 %7 = icmp slt i32 %6 , 5 
 br i1 %7 , label %8 , label %16 
 8: 
 %9 = load i32 , i32 * %3 
 %10 = sext i32 %9 to i64 
 %11 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %2 , i64 0 , i64 %10 
 %12 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str: %d~00" i64 0 i64 0 ) i32 * %11 ) 
 br label %13 
 13: 
 %14 = load i32 , i32 * %3 
 %15 = add nsw i32 %14 , 1 
 store i32 %15 , i32 * %3 
 br label %5 
 16: 
 %17 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %2 , i64 0 , i64 0 
 %18 = call i32 ( i32 * i32 i64 i32 ( i32 * i32 * ) * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i64 i32 ( i32 * i32 * ) * ... ) * ) ( i32 * %17 i32 5 i64 4 i32 ( i32 * i32 * ) * @comp ) 
 store i32 0 , i32 * %3 
 br label %19 
 19: 
 %20 = load i32 , i32 * %3 
 %21 = icmp slt i32 %20 , 5 
 br i1 %21 , label %22 , label %36 
 22: 
 %23 = load i32 , i32 * %4 
 %24 = icmp ne i32 %23 , 0 
 br i1 %24 , label %25 , label %27 
 25: 
 %26 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 2 x i8 ] @".str.1: ~00" i64 0 i64 0 ) ) 
 br label %27 
 27: 
 store i32 -1 , i32 * %4 
 %28 = load i32 , i32 * %3 
 %29 = sext i32 %28 to i64 
 %30 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * %2 , i64 0 , i64 %29 
 %31 = load i32 , i32 * %30 
 %32 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.2:%d~00" i64 0 i64 0 ) i32 %31 ) 
 br label %33 
 33: 
 %34 = load i32 , i32 * %3 
 %35 = add nsw i32 %34 , 1 
 store i32 %35 , i32 * %3 
 br label %19 
 36: 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 2 x i8 ] @".str.3:~0A~00" i64 0 i64 0 ) ) 
 ret i32 0 
 } 
