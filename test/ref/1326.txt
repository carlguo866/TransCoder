define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 br label %2 
 2: 
 %3 = load i32 , i32 * @i 
 %4 = sext i32 %3 to i64 
 %5 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 5 x i32 ] , [ 5 x i32 ] * @a i64 0 i64 0 ) , i64 %4 
 %6 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %5 ) 
 %7 = xor i32 %6 , -1 
 %8 = icmp ne i32 %7 , 0 
 br i1 %8 , label %9 , label %13 
 9: 
 %10 = load i32 , i32 * @i 
 %11 = add nsw i32 %10 , 1 
 store i32 %11 , i32 * @i 
 %12 = call i32 ( i32 * i32 i32 i8 * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i8 * ... ) * ) ( i32 * getelementptr inbounds ( [ 5 x i32 ] @a i64 0 i64 0 ) i32 %11 i32 4 i8 * getelementptr inbounds ( [ 12 x i8 ] @".str.1:YXZRPQ~8B~00+~02~C3~00" i64 0 i64 0 ) ) 
 br label %2 
 13: 
 br label %14 
 14: 
 %15 = load i32 , i32 * @i 
 %16 = add nsw i32 %15 , -1 
 store i32 %16 , i32 * @i 
 %17 = icmp ne i32 %15 , 0 
 br i1 %17 , label %18 , label %33 
 18: 
 %19 = load i32 , i32 * @i 
 %20 = icmp ne i32 %19 , 0 
 %21 = zext i1 %20 to i64 
 %22 = select i1 %20 , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.2:%d ~00" i64 0 i64 0 ) , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.3:%d~0A~00" i64 0 i64 0 ) 
 %23 = load i32 , i32 * @i 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * @a , i64 0 , i64 %24 
 %26 = load i32 , i32 * %25 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * %22 i32 %26 ) 
 %28 = icmp ne i32 %27 , 0 
 %29 = xor i1 %28 , true 
 %30 = zext i1 %29 to i32 
 %31 = load i32 , i32 * @i 
 %32 = add nsw i32 %31 , %30 
 store i32 %32 , i32 * @i 
 br label %14 
 33: 
 %34 = load i32 , i32 * %1 
 ret i32 %34 
 } 
