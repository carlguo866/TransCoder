define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca double 
 %6 = alloca double 
 store i32 0 , i32 * %1 
 store i32 90 , i32 * %4 
 store double , double * 0.000000e+00 %5 
 store double , double * 0.000000e+00 %6 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 %9 = load i32 , i32 * %2 
 %10 = load i32 , i32 * %3 
 %11 = add nsw i32 %9 , %10 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %37 
 13: 
 %14 = load i32 , i32 * %2 
 %15 = sitofp i32 %14 to double 
 %16 = load i32 , i32 * %4 
 %17 = sitofp i32 %16 to double 
 %18 = fdiv double %17 , 1.800000e+02 
 %19 = fmul double %18 , 0x400921FB54442D18 
 %20 = call double @cos ( double %19 ) #3 
 %21 = fmul double %15 , %20 
 %22 = load double , double * %5 
 %23 = fadd double %22 , %21 
 store double %23 , double * %5 
 %24 = load i32 , i32 * %2 
 %25 = sitofp i32 %24 to double 
 %26 = load i32 , i32 * %4 
 %27 = sitofp i32 %26 to double 
 %28 = fdiv double %27 , 1.800000e+02 
 %29 = fmul double %28 , 0x400921FB54442D18 
 %30 = call double @sin ( double %29 ) #3 
 %31 = fmul double %25 , %30 
 %32 = load double , double * %6 
 %33 = fadd double %32 , %31 
 store double %33 , double * %6 
 %34 = load i32 , i32 * %3 
 %35 = load i32 , i32 * %4 
 %36 = sub nsw i32 %35 , %34 
 store i32 %36 , i32 * %4 
 br label %7 
 37: 
 %38 = load double , double * %5 
 %39 = fptosi double %38 to i32 
 %40 = load double , double * %6 
 %41 = fptosi double %40 to i32 
 %42 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %39 i32 %41 ) 
 ret i32 0 
 } 
