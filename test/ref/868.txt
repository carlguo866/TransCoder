define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %10 = icmp ne i32 %9 , -1 
 br i1 %10 , label %11 , label %38 
 11: 
 store i32 0 , i32 * %6 
 %12 = load i32 , i32 * %2 
 %13 = sdiv i32 600 , %12 
 store i32 %13 , i32 * %7 
 store i32 0 , i32 * %3 
 br label %14 
 14: 
 %15 = load i32 , i32 * %3 
 %16 = load i32 , i32 * %7 
 %17 = icmp slt i32 %15 , %16 
 br i1 %17 , label %18 , label %35 
 18: 
 %19 = load i32 , i32 * %2 
 store i32 %19 , i32 * %4 
 %20 = load i32 , i32 * %4 
 %21 = load i32 , i32 * %4 
 %22 = mul nsw i32 %20 , %21 
 %23 = load i32 , i32 * %3 
 %24 = mul nsw i32 %22 , %23 
 %25 = load i32 , i32 * %3 
 %26 = mul nsw i32 %24 , %25 
 store i32 %26 , i32 * %5 
 %27 = load i32 , i32 * %4 
 %28 = load i32 , i32 * %5 
 %29 = mul nsw i32 %27 , %28 
 %30 = load i32 , i32 * %6 
 %31 = add nsw i32 %30 , %29 
 store i32 %31 , i32 * %6 
 br label %32 
 32: 
 %33 = load i32 , i32 * %3 
 %34 = add nsw i32 %33 , 1 
 store i32 %34 , i32 * %3 
 br label %14 
 35: 
 %36 = load i32 , i32 * %6 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 br label %8 
 38: 
 ret i32 0 
 } 
