define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 %2 = load i32 * , i32 * * @s 
 %3 = bitcast i32 * %2 to i8 * 
 %4 = call i32 ( i8 * ... ) @scanf ( i8 * %3 i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 0 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 1 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 2 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 3 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 4 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 5 i64 0 ) ) 
 %5 = call i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) * ) ( i32 * getelementptr inbounds ( [ 1 x i32 ] @n i64 0 i64 0 ) i32 %4 i32 4 i32 ( i32 * ) * @M ) 
 %6 = load i32 * , i32 * * @s 
 %7 = bitcast i32 * %6 to i8 * 
 %8 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @n i64 0 i64 0 ) 
 %9 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @n i64 1 i64 0 ) 
 %10 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @n i64 2 i64 0 ) 
 %11 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @n i64 3 i64 0 ) 
 %12 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @n i64 4 i64 0 ) 
 %13 = call i32 ( i8 * ... ) @printf ( i8 * %7 i32 %8 i32 %9 i32 %10 i32 %11 i32 %12 ) 
 %14 = icmp ne i32 %13 , 0 
 %15 = xor i1 %14 , true 
 %16 = zext i1 %15 to i32 
 call void @exit ( i32 %16 ) #3 
 unreachable 
 } 
