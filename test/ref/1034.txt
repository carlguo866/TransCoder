define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca double 
 %3 = alloca double 
 store i32 0 , i32 * %1 
 br label %4 
 4: 
 %5 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %2 double * %3 ) 
 %6 = load double , double * %2 
 %7 = fcmp une double %6 , 0.000000e+00 
 br i1 %7 , label %11 , label %8 
 8: 
 %9 = load double , double * %3 
 %10 = fcmp une double %9 , 0.000000e+00 
 br label %11 
 11: 
 %12 = phi i1 [ true %4 ] , [ %10 %8 ] 
 br i1 %12 , label %13 , label %33 
 13: 
 %14 = load double , double * %2 
 %15 = load double , double * @a 
 %16 = fmul double %15 , 0x400921FB54442D18 
 %17 = fdiv double %16 , 1.800000e+02 
 %18 = call double @sin ( double %17 ) #3 
 %19 = fmul double %14 , %18 
 %20 = load double , double * @x 
 %21 = fadd double %20 , %19 
 store double %21 , double * @x 
 %22 = load double , double * %2 
 %23 = load double , double * @a 
 %24 = fmul double %23 , 0x400921FB54442D18 
 %25 = fdiv double %24 , 1.800000e+02 
 %26 = call double @cos ( double %25 ) #3 
 %27 = fmul double %22 , %26 
 %28 = load double , double * @y 
 %29 = fadd double %28 , %27 
 store double %29 , double * @y 
 %30 = load double , double * %3 
 %31 = load double , double * @a 
 %32 = fadd double %31 , %30 
 store double %32 , double * @a 
 br label %4 
 33: 
 %34 = load double , double * @x 
 %35 = fptosi double %34 to i32 
 %36 = load double , double * @y 
 %37 = fptosi double %36 to i32 
 %38 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %35 i32 %37 ) 
 ret i32 0 
 } 
