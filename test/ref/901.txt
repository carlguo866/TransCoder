define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %35 
 9: 
 %10 = load i32 , i32 * %3 
 %11 = sdiv i32 600 , %10 
 store i32 %11 , i32 * %5 
 store i32 0 , i32 * %2 
 store i32 1 , i32 * %4 
 br label %12 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = load i32 , i32 * %5 
 %15 = sub nsw i32 %14 , 1 
 %16 = icmp sle i32 %13 , %15 
 br i1 %16 , label %17 , label %32 
 17: 
 %18 = load i32 , i32 * %4 
 %19 = load i32 , i32 * %3 
 %20 = mul nsw i32 %18 , %19 
 %21 = load i32 , i32 * %4 
 %22 = load i32 , i32 * %3 
 %23 = mul nsw i32 %21 , %22 
 %24 = mul nsw i32 %20 , %23 
 %25 = load i32 , i32 * %3 
 %26 = mul nsw i32 %24 , %25 
 %27 = load i32 , i32 * %2 
 %28 = add nsw i32 %27 , %26 
 store i32 %28 , i32 * %2 
 br label %29 
 29: 
 %30 = load i32 , i32 * %4 
 %31 = add nsw i32 %30 , 1 
 store i32 %31 , i32 * %4 
 br label %12 
 32: 
 %33 = load i32 , i32 * %2 
 %34 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %33 ) 
 br label %6 
 35: 
 ret i32 0 
 } 
