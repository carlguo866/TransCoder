define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %3 
 br label %5 
 5: 
 %6 = load i32 , i32 * %3 
 %7 = icmp slt i32 %6 , 1000000 
 br i1 %7 , label %8 , label %20 
 8: 
 %9 = load i32 , i32 * %3 
 %10 = call i32 @prime ( i32 %9 ) 
 %11 = icmp eq i32 %10 , 1 
 br i1 %11 , label %12 , label %16 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = sext i32 %13 to i64 
 %15 = getelementptr inbounds [ 1000000 x i8 ] , [ 1000000 x i8 ] * @pn , i64 0 , i64 %14 
 store i8 1 , i8 * %15 
 br label %16 
 16: 
 br label %17 
 17: 
 %18 = load i32 , i32 * %3 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * %3 
 br label %5 
 20: 
 br label %21 
 21: 
 %22 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %23 = icmp ne i32 %22 , -1 
 br i1 %23 , label %24 , label %43 
 24: 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %3 
 br label %25 
 25: 
 %26 = load i32 , i32 * %3 
 %27 = load i32 , i32 * %2 
 %28 = icmp sle i32 %26 , %27 
 br i1 %28 , label %29 , label %40 
 29: 
 %30 = load i32 , i32 * %3 
 %31 = sext i32 %30 to i64 
 %32 = getelementptr inbounds [ 1000000 x i8 ] , [ 1000000 x i8 ] * @pn , i64 0 , i64 %31 
 %33 = load i8 , i8 * %32 
 %34 = sext i8 %33 to i32 
 %35 = load i32 , i32 * %4 
 %36 = add nsw i32 %35 , %34 
 store i32 %36 , i32 * %4 
 br label %37 
 37: 
 %38 = load i32 , i32 * %3 
 %39 = add nsw i32 %38 , 1 
 store i32 %39 , i32 * %3 
 br label %25 
 40: 
 %41 = load i32 , i32 * %4 
 %42 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %41 ) 
 br label %21 
 43: 
 ret i32 0 
 } 
