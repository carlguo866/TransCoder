define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %38 
 9: 
 store i32 0 , i32 * %4 
 store i32 1 , i32 * %5 
 %10 = load i32 , i32 * %3 
 %11 = sdiv i32 600 , %10 
 %12 = sitofp i32 %11 to double 
 %13 = call double @llvm.round.f64 ( double %12 ) 
 %14 = fptosi double %13 to i32 
 store i32 %14 , i32 * %2 
 br label %15 
 15: 
 %16 = load i32 , i32 * %5 
 %17 = load i32 , i32 * %2 
 %18 = icmp slt i32 %16 , %17 
 br i1 %18 , label %19 , label %35 
 19: 
 %20 = load i32 , i32 * %3 
 %21 = load i32 , i32 * %5 
 %22 = mul nsw i32 %20 , %21 
 %23 = sub nsw i32 600 , %22 
 %24 = sitofp i32 %23 to double 
 %25 = call double @pow ( double %24 double 2.000000e+00 ) #4 
 %26 = load i32 , i32 * %3 
 %27 = sitofp i32 %26 to double 
 %28 = fmul double %25 , %27 
 %29 = load i32 , i32 * %4 
 %30 = sitofp i32 %29 to double 
 %31 = fadd double %30 , %28 
 %32 = fptosi double %31 to i32 
 store i32 %32 , i32 * %4 
 %33 = load i32 , i32 * %5 
 %34 = add nsw i32 %33 , 1 
 store i32 %34 , i32 * %5 
 br label %15 
 35: 
 %36 = load i32 , i32 * %4 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 br label %6 
 38: 
 ret i32 0 
 } 
