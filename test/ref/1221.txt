define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 br label %2 
 2: 
 %3 = load i32 , i32 * @e 
 %4 = add nsw i32 %3 , 1 
 store i32 %4 , i32 * @e 
 %5 = sext i32 %3 to i64 
 %6 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 5 x i32 ] , [ 5 x i32 ] * @d i64 0 i64 0 ) , i64 %5 
 %7 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %8 = xor i32 %7 , -1 
 %9 = icmp ne i32 %8 , 0 
 br i1 %9 , label %10 , label %11 
 10: 
 br label %2 
 11: 
 %12 = call i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) * ) ( i32 * getelementptr inbounds ( [ 5 x i32 ] @d i64 0 i64 0 ) i32 5 i32 4 i32 ( i32 * ) * @c ) 
 store i32 5 , i32 * @e 
 br label %13 
 13: 
 %14 = load i32 , i32 * @e 
 %15 = add nsw i32 %14 , -1 
 store i32 %15 , i32 * @e 
 %16 = icmp ne i32 %14 , 0 
 br i1 %16 , label %17 , label %28 
 17: 
 br label %18 
 18: 
 %19 = load i32 , i32 * @e 
 %20 = sext i32 %19 to i64 
 %21 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * @d , i64 0 , i64 %20 
 %22 = load i32 , i32 * %21 
 %23 = load i32 , i32 * @e 
 %24 = icmp ne i32 %23 , 0 
 %25 = zext i1 %24 to i64 
 %26 = select i1 %24 , i32 32 , i32 10 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%d%c~00" i64 0 i64 0 ) i32 %22 i32 %26 ) 
 br label %13 
 28: 
 %29 = load i32 , i32 * %1 
 ret i32 %29 
 } 
