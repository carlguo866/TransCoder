define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 %5 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str:%lld~00" i64 0 i64 0 ) i64 * %2 ) 
 store i64 1 , i64 * %3 
 %6 = load i64 , i64 * %2 
 %7 = icmp sge i64 %6 , 1 
 br i1 %7 , label %8 , label %26 
 8: 
 %9 = load i64 , i64 * %2 
 %10 = icmp sle i64 %9 , 20 
 br i1 %10 , label %11 , label %26 
 11: 
 %12 = load i64 , i64 * %2 
 %13 = trunc i64 %12 to i32 
 store i32 %13 , i32 * %4 
 br label %14 
 14: 
 %15 = load i32 , i32 * %4 
 %16 = icmp sgt i32 %15 , 0 
 br i1 %16 , label %17 , label %25 
 17: 
 %18 = load i64 , i64 * %3 
 %19 = load i32 , i32 * %4 
 %20 = sext i32 %19 to i64 
 %21 = mul i64 %18 , %20 
 store i64 %21 , i64 * %3 
 br label %22 
 22: 
 %23 = load i32 , i32 * %4 
 %24 = add nsw i32 %23 , -1 
 store i32 %24 , i32 * %4 
 br label %14 
 25: 
 br label %26 
 26: 
 %27 = load i64 , i64 * %3 
 %28 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%llu~0A~00" i64 0 i64 0 ) i64 %27 ) 
 ret i32 0 
 } 
