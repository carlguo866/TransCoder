define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 store i32 0 , i32 * %1 
 %4 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str:%llu~00" i64 0 i64 0 ) i64 * %2 ) 
 %5 = load i64 , i64 * %2 
 %6 = icmp uge i64 %5 , 1 
 br i1 %6 , label %7 , label %30 
 7: 
 %8 = load i64 , i64 * %2 
 %9 = icmp ule i64 %8 , 20 
 br i1 %9 , label %10 , label %30 
 10: 
 %11 = load i64 , i64 * %2 
 store i64 %11 , i64 * %3 
 %12 = load i64 , i64 * %3 
 %13 = load i64 , i64 * %2 
 %14 = sub i64 %13 , 1 
 %15 = mul i64 %12 , %14 
 store i64 %15 , i64 * %3 
 %16 = load i64 , i64 * %2 
 %17 = sub i64 %16 , 2 
 store i64 %17 , i64 * %2 
 br label %18 
 18: 
 %19 = load i64 , i64 * %2 
 %20 = icmp ugt i64 %19 , 1 
 br i1 %20 , label %21 , label %27 
 21: 
 %22 = load i64 , i64 * %3 
 %23 = load i64 , i64 * %2 
 %24 = mul i64 %22 , %23 
 store i64 %24 , i64 * %3 
 %25 = load i64 , i64 * %2 
 %26 = sub i64 %25 , 1 
 store i64 %26 , i64 * %2 
 br label %18 
 27: 
 %28 = load i64 , i64 * %3 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%llu~0A~00" i64 0 i64 0 ) i64 %28 ) 
 br label %30 
 30: 
 ret i32 0 
 } 
