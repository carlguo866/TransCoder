define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 601 x i64 ] 
 store i32 0 , i32 * %1 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %40 
 8: 
 %9 = getelementptr inbounds [ 601 x i64 ] , [ 601 x i64 ] * %4 , i64 0 , i64 0 
 %10 = bitcast i64 * %9 to i8 * 
 call void @llvm.memset.p0i8.i64 ( i8 * %10 i8 0 i64 4808 i1 false ) 
 %11 = load i32 , i32 * %3 
 store i32 %11 , i32 * %2 
 br label %12 
 12: 
 %13 = load i32 , i32 * %2 
 %14 = icmp slt i32 %13 , 600 
 br i1 %14 , label %15 , label %36 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 601 x i64 ] , [ 601 x i64 ] * %4 , i64 0 , i64 %17 
 %19 = load i64 , i64 * %18 
 %20 = load i32 , i32 * %3 
 %21 = load i32 , i32 * %2 
 %22 = mul nsw i32 %20 , %21 
 %23 = load i32 , i32 * %2 
 %24 = mul nsw i32 %22 , %23 
 %25 = sext i32 %24 to i64 
 %26 = add nsw i64 %19 , %25 
 %27 = load i32 , i32 * %2 
 %28 = load i32 , i32 * %3 
 %29 = add nsw i32 %27 , %28 
 %30 = sext i32 %29 to i64 
 %31 = getelementptr inbounds [ 601 x i64 ] , [ 601 x i64 ] * %4 , i64 0 , i64 %30 
 store i64 %26 , i64 * %31 
 br label %32 
 32: 
 %33 = load i32 , i32 * %3 
 %34 = load i32 , i32 * %2 
 %35 = add nsw i32 %34 , %33 
 store i32 %35 , i32 * %2 
 br label %12 
 36: 
 %37 = getelementptr inbounds [ 601 x i64 ] , [ 601 x i64 ] * %4 , i64 0 , i64 600 
 %38 = load i64 , i64 * %37 
 %39 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i64 %38 ) 
 br label %5 
 40: 
 ret i32 0 
 } 
