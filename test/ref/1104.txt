define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 100 x i8 ] 
 store i32 0 , i32 * %1 
 br label %3 
 3: 
 %4 = getelementptr inbounds [ 100 x i8 ] , [ 100 x i8 ] * %2 , i64 0 , i64 0 
 %5 = load { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * , { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * * @stdin 
 %6 = call i8 * @fgets ( i8 * %4 i32 100 { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * %5 ) 
 %7 = icmp ne i8 * %6 , null 
 br i1 %7 , label %8 , label %20 
 8: 
 br label %9 
 9: 
 %10 = getelementptr inbounds [ 100 x i8 ] , [ 100 x i8 ] * %2 , i64 0 , i64 0 
 %11 = call i32 @judge ( i8 * %10 ) 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %16 
 13: 
 br label %14 
 14: 
 %15 = getelementptr inbounds [ 100 x i8 ] , [ 100 x i8 ] * %2 , i64 0 , i64 0 
 call void @slide ( i8 * %15 ) 
 br label %9 
 16: 
 br label %17 
 17: 
 %18 = getelementptr inbounds [ 100 x i8 ] , [ 100 x i8 ] * %2 , i64 0 , i64 0 
 %19 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%s~00" i64 0 i64 0 ) i8 * %18 ) 
 br label %3 
 20: 
 ret i32 0 
 } 
