define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 1000 x i32 ] 
 %3 = alloca [ 1000 x i32 ] 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %5 
 br label %6 
 6: 
 %7 = load i32 , i32 * %4 
 %8 = sext i32 %7 to i64 
 %9 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %2 , i64 0 , i64 %8 
 %10 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %9 ) 
 %11 = icmp ne i32 %10 , -1 
 br i1 %11 , label %12 , label %33 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = sext i32 %13 to i64 
 %15 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %2 , i64 0 , i64 %14 
 %16 = load i32 , i32 * %15 
 %17 = icmp eq i32 %16 , 0 
 br i1 %17 , label %18 , label %29 
 18: 
 %19 = load i32 , i32 * %4 
 %20 = sub nsw i32 %19 , 1 
 %21 = sext i32 %20 to i64 
 %22 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %2 , i64 0 , i64 %21 
 %23 = load i32 , i32 * %22 
 %24 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %23 ) 
 %25 = load i32 , i32 * %4 
 %26 = add nsw i32 %25 , -1 
 store i32 %26 , i32 * %4 
 %27 = load i32 , i32 * %5 
 %28 = add nsw i32 %27 , 1 
 store i32 %28 , i32 * %5 
 br label %32 
 29: 
 %30 = load i32 , i32 * %4 
 %31 = add nsw i32 %30 , 1 
 store i32 %31 , i32 * %4 
 br label %32 
 32: 
 br label %6 
 33: 
 ret i32 0 
 } 
