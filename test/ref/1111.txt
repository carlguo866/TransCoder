define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %6 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %31 
 10: 
 store i32 0 , i32 * %6 
 store i32 0 , i32 * %3 
 br label %11 
 11: 
 %12 = load i32 , i32 * %3 
 %13 = icmp slt i32 %12 , 600 
 br i1 %13 , label %14 , label %27 
 14: 
 %15 = load i32 , i32 * %3 
 %16 = load i32 , i32 * %3 
 %17 = mul nsw i32 %15 , %16 
 store i32 %17 , i32 * %5 
 %18 = load i32 , i32 * %6 
 %19 = load i32 , i32 * %2 
 %20 = load i32 , i32 * %5 
 %21 = mul nsw i32 %19 , %20 
 %22 = add nsw i32 %18 , %21 
 store i32 %22 , i32 * %6 
 br label %23 
 23: 
 %24 = load i32 , i32 * %3 
 %25 = load i32 , i32 * %2 
 %26 = add nsw i32 %24 , %25 
 store i32 %26 , i32 * %3 
 br label %11 
 27: 
 %28 = load { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * , { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * * @stdout 
 %29 = load i32 , i32 * %6 
 %30 = call i32 ( { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * i8 * ... ) @fprintf ( { i32 i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * i8 * %struct._IO_marker * %struct._IO_FILE * i32 i32 i64 i16 i8 [ 1 x i8 ] i8 * i64 i8 * i8 * i8 * i8 * i64 i32 [ 20 x i8 ] } * %28 i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %29 ) 
 br label %7 
 31: 
 ret i32 0 
 } 
