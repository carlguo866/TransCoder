define dso_local i8 * @decode ( i8 * %0 i32 %1 ) #0 { 
 %3 = alloca i8 * 
 %4 = alloca i32 
 %5 = alloca i8 * 
 %6 = alloca i32 
 store i8 * %0 , i8 * * %3 
 store i32 %1 , i32 * %4 
 %7 = load i8 * , i8 * * %3 
 %8 = getelementptr inbounds i8 , i8 * %7 , i64 -1 
 store i8 * %8 , i8 * * %5 
 br label %9 
 9: 
 %10 = load i8 * , i8 * * %5 
 %11 = getelementptr inbounds i8 , i8 * %10 , i32 1 
 store i8 * %11 , i8 * * %5 
 %12 = load i8 , i8 * %11 
 %13 = icmp ne i8 %12 , 0 
 br i1 %13 , label %14 , label %46 
 14: 
 %15 = load i8 * , i8 * * %5 
 %16 = call i32 @a ( i8 * %15 ) 
 %17 = icmp ne i32 %16 , 0 
 br i1 %17 , label %18 , label %45 
 18: 
 %19 = load i8 * , i8 * * %5 
 %20 = load i8 , i8 * %19 
 %21 = sext i8 %20 to i32 
 %22 = load i32 , i32 * %4 
 %23 = add nsw i32 %21 , %22 
 store i32 %23 , i32 * %6 
 %24 = load i32 , i32 * %6 
 %25 = icmp sgt i32 %24 , 122 
 br i1 %25 , label %26 , label %31 
 26: 
 %27 = load i32 , i32 * %6 
 %28 = sub nsw i32 %27 , 26 
 %29 = trunc i32 %28 to i8 
 %30 = load i8 * , i8 * * %5 
 store i8 %29 , i8 * %30 
 br label %44 
 31: 
 %32 = load i32 , i32 * %6 
 %33 = icmp slt i32 %32 , 97 
 br i1 %33 , label %34 , label %39 
 34: 
 %35 = load i32 , i32 * %6 
 %36 = add nsw i32 %35 , 26 
 %37 = trunc i32 %36 to i8 
 %38 = load i8 * , i8 * * %5 
 store i8 %37 , i8 * %38 
 br label %43 
 39: 
 %40 = load i32 , i32 * %6 
 %41 = trunc i32 %40 to i8 
 %42 = load i8 * , i8 * * %5 
 store i8 %41 , i8 * %42 
 br label %43 
 43: 
 br label %44 
 44: 
 br label %45 
 45: 
 br label %9 
 46: 
 %47 = load i8 * , i8 * * %3 
 ret i8 * %47 
 } 
