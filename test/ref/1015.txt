define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 1000000 x i32 ] 
 store i32 0 , i32 * %1 
 %5 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %4 , i64 0 , i64 0 
 store i32 0 , i32 * %5 
 store i32 1 , i32 * %3 
 br label %6 
 6: 
 %7 = load i32 , i32 * %3 
 %8 = icmp slt i32 %7 , 1000000 
 br i1 %8 , label %9 , label %24 
 9: 
 %10 = load i32 , i32 * %3 
 %11 = sub nsw i32 %10 , 1 
 %12 = sext i32 %11 to i64 
 %13 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %4 , i64 0 , i64 %12 
 %14 = load i32 , i32 * %13 
 %15 = load i32 , i32 * %3 
 %16 = call i32 @isPrime ( i32 %15 ) 
 %17 = add nsw i32 %14 , %16 
 %18 = load i32 , i32 * %3 
 %19 = sext i32 %18 to i64 
 %20 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %4 , i64 0 , i64 %19 
 store i32 %17 , i32 * %20 
 br label %21 
 21: 
 %22 = load i32 , i32 * %3 
 %23 = add nsw i32 %22 , 1 
 store i32 %23 , i32 * %3 
 br label %6 
 24: 
 br label %25 
 25: 
 %26 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %27 = icmp ne i32 %26 , -1 
 br i1 %27 , label %28 , label %34 
 28: 
 %29 = load i32 , i32 * %2 
 %30 = sext i32 %29 to i64 
 %31 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %4 , i64 0 , i64 %30 
 %32 = load i32 , i32 * %31 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %32 ) 
 br label %25 
 34: 
 ret i32 0 
 } 
