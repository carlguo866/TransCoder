define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca [ 100 x i32 ] 
 store i32 0 , i32 * %1 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d %d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 store i32 0 , i32 * %4 
 br label %7 
 7: 
 %8 = load i32 , i32 * %4 
 %9 = load i32 , i32 * %2 
 %10 = icmp sle i32 %8 , %9 
 br i1 %10 , label %11 , label %20 
 11: 
 %12 = load i32 , i32 * %4 
 %13 = add nsw i32 %12 , 1 
 %14 = load i32 , i32 * %4 
 %15 = sext i32 %14 to i64 
 %16 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %15 
 store i32 %13 , i32 * %16 
 br label %17 
 17: 
 %18 = load i32 , i32 * %4 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * %4 
 br label %7 
 20: 
 store i32 0 , i32 * %4 
 br label %21 
 21: 
 %22 = load i32 , i32 * %4 
 %23 = load i32 , i32 * %3 
 %24 = icmp slt i32 %22 , %23 
 br i1 %24 , label %25 , label %31 
 25: 
 %26 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 0 
 %27 = call i32 @change ( i32 * %26 ) 
 br label %28 
 28: 
 %29 = load i32 , i32 * %4 
 %30 = add nsw i32 %29 , 1 
 store i32 %30 , i32 * %4 
 br label %21 
 31: 
 store i32 0 , i32 * %4 
 br label %32 
 32: 
 %33 = load i32 , i32 * %4 
 %34 = load i32 , i32 * %2 
 %35 = icmp slt i32 %33 , %34 
 br i1 %35 , label %36 , label %45 
 36: 
 %37 = load i32 , i32 * %4 
 %38 = sext i32 %37 to i64 
 %39 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %38 
 %40 = load i32 , i32 * %39 
 %41 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %40 ) 
 br label %42 
 42: 
 %43 = load i32 , i32 * %4 
 %44 = add nsw i32 %43 , 1 
 store i32 %44 , i32 * %4 
 br label %32 
 45: 
 ret i32 0 
 } 
