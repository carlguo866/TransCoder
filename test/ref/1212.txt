define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca float 
 %6 = alloca float 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 store float , float * 0.000000e+00 %6 
 store float , float * 0.000000e+00 %5 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %4 i32 * %3 ) 
 %9 = load i32 , i32 * %4 
 %10 = load i32 , i32 * %3 
 %11 = or i32 %9 , %10 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %39 
 13: 
 %14 = load i32 , i32 * %4 
 %15 = sitofp i32 %14 to double 
 %16 = load i32 , i32 * %2 
 %17 = sitofp i32 %16 to double 
 %18 = fdiv double %17 , 5.730000e+01 
 %19 = call double @cos ( double %18 ) #3 
 %20 = fmul double %15 , %19 
 %21 = load float , float * %6 
 %22 = fpext float %21 to double 
 %23 = fadd double %22 , %20 
 %24 = fptrunc double %23 to float 
 store float %24 , float * %6 
 %25 = load i32 , i32 * %4 
 %26 = sitofp i32 %25 to double 
 %27 = load i32 , i32 * %2 
 %28 = sitofp i32 %27 to double 
 %29 = fdiv double %28 , 5.730000e+01 
 %30 = call double @sin ( double %29 ) #3 
 %31 = fmul double %26 , %30 
 %32 = load float , float * %5 
 %33 = fpext float %32 to double 
 %34 = fsub double %33 , %31 
 %35 = fptrunc double %34 to float 
 store float %35 , float * %5 
 %36 = load i32 , i32 * %3 
 %37 = load i32 , i32 * %2 
 %38 = sub nsw i32 %37 , %36 
 store i32 %38 , i32 * %2 
 br label %7 
 39: 
 %40 = load float , float * %5 
 %41 = fptosi float %40 to i32 
 store i32 %41 , i32 * %2 
 %42 = load float , float * %6 
 %43 = fptosi float %42 to i32 
 store i32 %43 , i32 * %3 
 %44 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %41 i32 %43 ) 
 %45 = icmp ne i32 %44 , 0 
 %46 = xor i1 %45 , true 
 %47 = zext i1 %46 to i32 
 ret i32 %47 
 } 
