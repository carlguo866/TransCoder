define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i64 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%d~0A~00" i64 0 i64 0 ) i32 * %2 ) 
 %7 = xor i32 %6 , -1 
 %8 = icmp ne i32 %7 , 0 
 br i1 %8 , label %9 , label %32 
 9: 
 store i64 0 , i64 * %3 
 %10 = load i32 , i32 * %2 
 store i32 %10 , i32 * %4 
 br label %11 
 11: 
 %12 = load i32 , i32 * %4 
 %13 = icmp slt i32 %12 , 600 
 br i1 %13 , label %14 , label %29 
 14: 
 %15 = load i32 , i32 * %4 
 %16 = sext i32 %15 to i64 
 %17 = load i32 , i32 * %4 
 %18 = sext i32 %17 to i64 
 %19 = mul nsw i64 %16 , %18 
 %20 = load i32 , i32 * %2 
 %21 = sext i32 %20 to i64 
 %22 = mul nsw i64 %19 , %21 
 %23 = load i64 , i64 * %3 
 %24 = add nsw i64 %23 , %22 
 store i64 %24 , i64 * %3 
 br label %25 
 25: 
 %26 = load i32 , i32 * %2 
 %27 = load i32 , i32 * %4 
 %28 = add nsw i32 %27 , %26 
 store i32 %28 , i32 * %4 
 br label %11 
 29: 
 %30 = load i64 , i64 * %3 
 %31 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%lld~0A~00" i64 0 i64 0 ) i64 %30 ) 
 br label %5 
 32: 
 ret i32 0 
 } 
