define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 store i32 0 , i32 * %3 
 store double , double * 0.000000e+00 %4 
 store double , double * 0.000000e+00 %5 
 store double , double * 0.000000e+00 %6 
 store i32 90 , i32 * %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 %10 = load i32 , i32 * %2 
 %11 = icmp eq i32 %10 , 0 
 br i1 %11 , label %12 , label %16 
 12: 
 %13 = load i32 , i32 * %3 
 %14 = icmp eq i32 %13 , 0 
 br i1 %14 , label %15 , label %16 
 15: 
 br label %38 
 16: 
 %17 = load i32 , i32 * %7 
 %18 = sitofp i32 %17 to double 
 %19 = fdiv double %18 , 1.800000e+02 
 %20 = fmul double %19 , 3.141590e+00 
 store double %20 , double * %6 
 %21 = load double , double * %4 
 %22 = load double , double * %6 
 %23 = call double @cos ( double %22 ) #3 
 %24 = load i32 , i32 * %2 
 %25 = sitofp i32 %24 to double 
 %26 = fmul double %23 , %25 
 %27 = fadd double %21 , %26 
 store double %27 , double * %4 
 %28 = load double , double * %5 
 %29 = load double , double * %6 
 %30 = call double @sin ( double %29 ) #3 
 %31 = load i32 , i32 * %2 
 %32 = sitofp i32 %31 to double 
 %33 = fmul double %30 , %32 
 %34 = fadd double %28 , %33 
 store double %34 , double * %5 
 %35 = load i32 , i32 * %7 
 %36 = load i32 , i32 * %3 
 %37 = sub nsw i32 %35 , %36 
 store i32 %37 , i32 * %7 
 br label %8 
 38: 
 %39 = load double , double * %4 
 %40 = fptosi double %39 to i32 
 %41 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %40 ) 
 %42 = load double , double * %5 
 %43 = fptosi double %42 to i32 
 %44 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %43 ) 
 ret i32 0 
 } 
