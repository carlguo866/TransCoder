define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 %2 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 11 x i8 ] @".str:%d%d%d%d%d~00" i64 0 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 0 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 1 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 2 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 3 i64 0 ) i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 4 i64 0 ) ) 
 %3 = call i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i32 ( i32 * ) * ... ) * ) ( i32 * getelementptr inbounds ( [ 1 x i32 ] @s i64 0 i64 0 ) i32 5 i32 4 i32 ( i32 * ) * @M ) 
 %4 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 0 i64 0 ) 
 %5 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 1 i64 0 ) 
 %6 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 2 i64 0 ) 
 %7 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 3 i64 0 ) 
 %8 = load i32 , i32 * getelementptr inbounds ( [ 1 x i32 ] , [ 1 x i32 ] * @s i64 4 i64 0 ) 
 %9 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 16 x i8 ] @".str.1:%d %d %d %d %d~0A~00" i64 0 i64 0 ) i32 %4 i32 %5 i32 %6 i32 %7 i32 %8 ) 
 ret i32 0 
 } 
