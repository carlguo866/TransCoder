define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i8 * 
 %9 = alloca i64 
 %10 = alloca i32 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 store i32 10 , i32 * %6 
 %11 = load i32 , i32 * %6 
 %12 = zext i32 %11 to i64 
 %13 = call i8 * @llvm.stacksave ( ) 
 store i8 * %13 , i8 * * %8 
 %14 = alloca i32 , i64 %12 
 store i64 %12 , i64 * %9 
 store i32 0 , i32 * %10 
 br label %15 
 15: 
 %16 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%u~0A~00" i64 0 i64 0 ) i32 * %7 ) 
 %17 = icmp eq i32 1 , %16 
 br i1 %17 , label %18 , label %34 
 18: 
 %19 = load i32 , i32 * %7 
 %20 = icmp ne i32 %19 , 0 
 br i1 %20 , label %21 , label %27 
 21: 
 %22 = load i32 , i32 * %7 
 %23 = load i32 , i32 * %10 
 %24 = add i32 %23 , 1 
 store i32 %24 , i32 * %10 
 %25 = zext i32 %23 to i64 
 %26 = getelementptr inbounds i32 , i32 * %14 , i64 %25 
 store i32 %22 , i32 * %26 
 br label %15 
 27: 
 %28 = load i32 , i32 * %10 
 %29 = add i32 %28 , -1 
 store i32 %29 , i32 * %10 
 %30 = zext i32 %29 to i64 
 %31 = getelementptr inbounds i32 , i32 * %14 , i64 %30 
 %32 = load i32 , i32 * %31 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%u~0A~00" i64 0 i64 0 ) i32 %32 ) 
 br label %15 
 34: 
 store i32 0 , i32 * %3 
 %35 = load i8 * , i8 * * %8 
 call void @llvm.stackrestore ( i8 * %35 ) 
 %36 = load i32 , i32 * %3 
 ret i32 %36 
 } 
