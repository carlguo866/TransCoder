define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %7 ) 
 %10 = icmp ne i32 %9 , -1 
 br i1 %10 , label %11 , label %39 
 11: 
 store i32 0 , i32 * %3 
 store i32 0 , i32 * %2 
 %12 = load i32 , i32 * %7 
 %13 = sitofp i32 %12 to double 
 %14 = fdiv double 6.000000e+02 , %13 
 %15 = fptosi double %14 to i32 
 store i32 %15 , i32 * %5 
 store i32 0 , i32 * %6 
 br label %16 
 16: 
 %17 = load i32 , i32 * %6 
 %18 = load i32 , i32 * %5 
 %19 = sub nsw i32 %18 , 1 
 %20 = icmp slt i32 %17 , %19 
 br i1 %20 , label %21 , label %36 
 21: 
 %22 = load i32 , i32 * %7 
 %23 = load i32 , i32 * %3 
 %24 = add nsw i32 %23 , %22 
 store i32 %24 , i32 * %3 
 %25 = load i32 , i32 * %3 
 %26 = load i32 , i32 * %3 
 %27 = mul nsw i32 %25 , %26 
 store i32 %27 , i32 * %4 
 %28 = load i32 , i32 * %4 
 %29 = load i32 , i32 * %7 
 %30 = mul nsw i32 %28 , %29 
 %31 = load i32 , i32 * %2 
 %32 = add nsw i32 %31 , %30 
 store i32 %32 , i32 * %2 
 br label %33 
 33: 
 %34 = load i32 , i32 * %6 
 %35 = add nsw i32 %34 , 1 
 store i32 %35 , i32 * %6 
 br label %16 
 36: 
 %37 = load i32 , i32 * %2 
 %38 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %37 ) 
 br label %8 
 39: 
 ret i32 0 
 } 
