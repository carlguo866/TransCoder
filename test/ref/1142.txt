define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca double 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 store double , double * 0.000000e+00 %6 
 store double , double * 0.000000e+00 %7 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 %10 = load i32 , i32 * %4 
 %11 = sitofp i32 %10 to double 
 %12 = fmul double %11 , 0x400921FAFC8B007A 
 %13 = fdiv double %12 , 1.800000e+02 
 store double %13 , double * %5 
 %14 = load i32 , i32 * %2 
 %15 = sitofp i32 %14 to double 
 %16 = load double , double * %5 
 %17 = call double @sin ( double %16 ) #3 
 %18 = fmul double %15 , %17 
 %19 = load double , double * %6 
 %20 = fadd double %19 , %18 
 store double %20 , double * %6 
 %21 = load i32 , i32 * %2 
 %22 = sitofp i32 %21 to double 
 %23 = load double , double * %5 
 %24 = call double @cos ( double %23 ) #3 
 %25 = fmul double %22 , %24 
 %26 = load double , double * %7 
 %27 = fadd double %26 , %25 
 store double %27 , double * %7 
 %28 = load i32 , i32 * %3 
 %29 = load i32 , i32 * %4 
 %30 = add nsw i32 %29 , %28 
 store i32 %30 , i32 * %4 
 br label %31 
 31: 
 %32 = load i32 , i32 * %2 
 %33 = icmp ne i32 %32 , 0 
 br i1 %33 , label %37 , label %34 
 34: 
 %35 = load i32 , i32 * %3 
 %36 = icmp ne i32 %35 , 0 
 br label %37 
 37: 
 %38 = phi i1 [ true %31 ] , [ %36 %34 ] 
 br i1 %38 , label %8 , label %39 
 39: 
 %40 = load double , double * %6 
 %41 = fptosi double %40 to i32 
 %42 = load double , double * %7 
 %43 = fptosi double %42 to i32 
 %44 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %41 i32 %43 ) 
 ret i32 0 
 } 
