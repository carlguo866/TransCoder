define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 %7 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d %d~00" i64 0 i64 0 ) i32 * %2 i32 * %3 ) 
 store i32 1 , i32 * %4 
 br label %8 
 8: 
 %9 = load i32 , i32 * %4 
 %10 = load i32 , i32 * %2 
 %11 = icmp sle i32 %9 , %10 
 br i1 %11 , label %12 , label %20 
 12: 
 %13 = load i32 , i32 * %4 
 %14 = load i32 , i32 * %4 
 %15 = sext i32 %14 to i64 
 %16 = getelementptr inbounds [ 31 x i32 ] , [ 31 x i32 ] * @lots , i64 0 , i64 %15 
 store i32 %13 , i32 * %16 
 br label %17 
 17: 
 %18 = load i32 , i32 * %4 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * %4 
 br label %8 
 20: 
 br label %21 
 21: 
 %22 = load i32 , i32 * %3 
 %23 = icmp sgt i32 %22 , 0 
 br i1 %23 , label %24 , label %30 
 24: 
 %25 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str.1:%d,%d~00" i64 0 i64 0 ) i32 * %5 i32 * %6 ) 
 %26 = load i32 , i32 * %5 
 %27 = load i32 , i32 * %6 
 call void @change ( i32 %26 i32 %27 ) 
 %28 = load i32 , i32 * %3 
 %29 = add nsw i32 %28 , -1 
 store i32 %29 , i32 * %3 
 br label %21 
 30: 
 store i32 1 , i32 * %4 
 br label %31 
 31: 
 %32 = load i32 , i32 * %4 
 %33 = load i32 , i32 * %2 
 %34 = icmp sle i32 %32 , %33 
 br i1 %34 , label %35 , label %44 
 35: 
 %36 = load i32 , i32 * %4 
 %37 = sext i32 %36 to i64 
 %38 = getelementptr inbounds [ 31 x i32 ] , [ 31 x i32 ] * @lots , i64 0 , i64 %37 
 %39 = load i32 , i32 * %38 
 %40 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.2:%d~0A~00" i64 0 i64 0 ) i32 %39 ) 
 br label %41 
 41: 
 %42 = load i32 , i32 * %4 
 %43 = add nsw i32 %42 , 1 
 store i32 %43 , i32 * %4 
 br label %31 
 44: 
 ret i32 0 
 } 
