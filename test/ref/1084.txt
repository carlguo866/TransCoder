define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 store double , double * 0.000000e+00 @y 
 store double , double * 0.000000e+00 @x 
 store double , double * 0.000000e+00 @c 
 br label %2 
 2: 
 %3 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * @a i32 * @b ) 
 %4 = icmp ne i32 %3 , -1 
 br i1 %4 , label %5 , label %35 
 5: 
 %6 = load i32 , i32 * @a 
 %7 = icmp eq i32 %6 , 0 
 br i1 %7 , label %8 , label %12 
 8: 
 %9 = load i32 , i32 * @b 
 %10 = icmp eq i32 %9 , 0 
 br i1 %10 , label %11 , label %12 
 11: 
 br label %35 
 12: 
 %13 = load i32 , i32 * @a 
 %14 = sitofp i32 %13 to double 
 %15 = load double , double * @c 
 %16 = fmul double 0x400921FB54442D18 , %15 
 %17 = fdiv double %16 , 1.800000e+02 
 %18 = call double @sin ( double %17 ) #3 
 %19 = fmul double %14 , %18 
 %20 = load double , double * @x 
 %21 = fadd double %20 , %19 
 store double %21 , double * @x 
 %22 = load i32 , i32 * @a 
 %23 = sitofp i32 %22 to double 
 %24 = load double , double * @c 
 %25 = fmul double 0x400921FB54442D18 , %24 
 %26 = fdiv double %25 , 1.800000e+02 
 %27 = call double @cos ( double %26 ) #3 
 %28 = fmul double %23 , %27 
 %29 = load double , double * @y 
 %30 = fadd double %29 , %28 
 store double %30 , double * @y 
 %31 = load i32 , i32 * @b 
 %32 = sitofp i32 %31 to double 
 %33 = load double , double * @c 
 %34 = fadd double %33 , %32 
 store double %34 , double * @c 
 br label %2 
 35: 
 %36 = load double , double * @x 
 %37 = fptosi double %36 to i32 
 %38 = load double , double * @y 
 %39 = fptosi double %38 to i32 
 %40 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %37 i32 %39 ) 
 ret i32 0 
 } 
