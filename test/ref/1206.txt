define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca double 
 %6 = alloca double 
 store i32 0 , i32 * %1 
 store i32 90 , i32 * %2 
 store double , double * 0.000000e+00 %6 
 store double , double * 0.000000e+00 %5 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %4 i32 * %3 ) 
 %9 = load i32 , i32 * %4 
 %10 = icmp eq i32 %9 , 0 
 br i1 %10 , label %11 , label %14 
 11: 
 %12 = load i32 , i32 * %3 
 %13 = icmp eq i32 %12 , 0 
 br label %14 
 14: 
 %15 = phi i1 [ false %7 ] , [ %13 %11 ] 
 %16 = xor i1 %15 , true 
 br i1 %16 , label %17 , label %39 
 17: 
 %18 = load i32 , i32 * %4 
 %19 = sitofp i32 %18 to double 
 %20 = load i32 , i32 * %2 
 %21 = call double @toRad ( i32 %20 ) 
 %22 = call double @cos ( double %21 ) #3 
 %23 = fmul double %19 , %22 
 %24 = load double , double * %5 
 %25 = fadd double %24 , %23 
 store double %25 , double * %5 
 %26 = load i32 , i32 * %4 
 %27 = sitofp i32 %26 to double 
 %28 = load i32 , i32 * %2 
 %29 = call double @toRad ( i32 %28 ) 
 %30 = call double @sin ( double %29 ) #3 
 %31 = fmul double %27 , %30 
 %32 = load double , double * %6 
 %33 = fadd double %32 , %31 
 store double %33 , double * %6 
 %34 = load i32 , i32 * %2 
 %35 = load i32 , i32 * %3 
 %36 = sub nsw i32 %34 , %35 
 %37 = add nsw i32 %36 , 360 
 %38 = srem i32 %37 , 360 
 store i32 %38 , i32 * %2 
 br label %7 
 39: 
 %40 = load double , double * %5 
 %41 = fptosi double %40 to i32 
 %42 = load double , double * %6 
 %43 = fptosi double %42 to i32 
 %44 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %41 i32 %43 ) 
 ret i32 0 
 } 
