define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 store i32 0 , i32 * %1 
 store i64 0 , i64 * %4 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%ld~00" i64 0 i64 0 ) i64 * %2 ) 
 %7 = icmp ne i32 %6 , -1 
 br i1 %7 , label %8 , label %34 
 8: 
 %9 = load i64 , i64 * %2 
 %10 = srem i64 600 , %9 
 %11 = icmp ne i64 %10 , 0 
 br i1 %11 , label %12 , label %13 
 12: 
 br label %5 
 13: 
 store i64 0 , i64 * %4 
 %14 = load i64 , i64 * %2 
 store i64 %14 , i64 * %3 
 br label %15 
 15: 
 %16 = load i64 , i64 * %3 
 %17 = load i64 , i64 * %2 
 %18 = sub nsw i64 600 , %17 
 %19 = icmp sle i64 %16 , %18 
 br i1 %19 , label %20 , label %31 
 20: 
 %21 = load i64 , i64 * %2 
 %22 = load i64 , i64 * %3 
 %23 = mul nsw i64 %21 , %22 
 %24 = load i64 , i64 * %3 
 %25 = mul nsw i64 %23 , %24 
 %26 = load i64 , i64 * %4 
 %27 = add nsw i64 %26 , %25 
 store i64 %27 , i64 * %4 
 %28 = load i64 , i64 * %2 
 %29 = load i64 , i64 * %3 
 %30 = add nsw i64 %29 , %28 
 store i64 %30 , i64 * %3 
 br label %15 
 31: 
 %32 = load i64 , i64 * %4 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %32 ) 
 br label %5 
 34: 
 ret i32 0 
 } 
