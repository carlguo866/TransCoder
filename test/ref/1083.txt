define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca double 
 %3 = alloca double 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 store i32 0 , i32 * %1 
 store double , double * 0.000000e+00 %2 
 store double , double * 0.000000e+00 %3 
 store double , double * 0.000000e+00 %4 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %5 double * %6 ) 
 %9 = icmp ne i32 %8 , 0 
 br i1 %9 , label %10 , label %34 
 10: 
 %11 = load double , double * %5 
 %12 = fcmp oeq double %11 , 0.000000e+00 
 br i1 %12 , label %13 , label %14 
 13: 
 br label %34 
 14: 
 %15 = load double , double * %5 
 %16 = load double , double * %4 
 %17 = fmul double 0x400921FB54442D28 , %16 
 %18 = fdiv double %17 , 1.800000e+02 
 %19 = call double @sin ( double %18 ) #3 
 %20 = fmul double %15 , %19 
 %21 = load double , double * %2 
 %22 = fadd double %21 , %20 
 store double %22 , double * %2 
 %23 = load double , double * %5 
 %24 = load double , double * %4 
 %25 = fmul double 0x400921FB54442D28 , %24 
 %26 = fdiv double %25 , 1.800000e+02 
 %27 = call double @cos ( double %26 ) #3 
 %28 = fmul double %23 , %27 
 %29 = load double , double * %3 
 %30 = fadd double %29 , %28 
 store double %30 , double * %3 
 %31 = load double , double * %6 
 %32 = load double , double * %4 
 %33 = fadd double %32 , %31 
 store double %33 , double * %4 
 br label %7 
 34: 
 %35 = load double , double * %2 
 %36 = fptosi double %35 to i32 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 %38 = load double , double * %3 
 %39 = fptosi double %38 to i32 
 %40 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %39 ) 
 ret i32 0 
 } 
