define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 br label %4 
 4: 
 %5 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %3 i32 * @d ) 
 %6 = xor i32 %5 , -1 
 %7 = icmp ne i32 %6 , 0 
 br i1 %7 , label %8 , label %49 
 8: 
 %9 = load i32 , i32 * %3 
 %10 = sitofp i32 %9 to double 
 %11 = load float , float * @z 
 %12 = fpext float %11 to double 
 %13 = call double @cos ( double %12 ) #4 
 %14 = fmul double %10 , %13 
 %15 = load float , float * @y 
 %16 = fpext float %15 to double 
 %17 = fadd double %16 , %14 
 %18 = fptrunc double %17 to float 
 store float %18 , float * @y 
 %19 = load i32 , i32 * %3 
 %20 = sitofp i32 %19 to double 
 %21 = load float , float * @z 
 %22 = fpext float %21 to double 
 %23 = call double @sin ( double %22 ) #4 
 %24 = fmul double %20 , %23 
 %25 = load float , float * @x 
 %26 = fpext float %25 to double 
 %27 = fsub double %26 , %24 
 %28 = fptrunc double %27 to float 
 store float %28 , float * @x 
 %29 = load i32 , i32 * @d 
 %30 = sitofp i32 %29 to double 
 %31 = fdiv double %30 , 5.730000e+01 
 %32 = load float , float * @z 
 %33 = fpext float %32 to double 
 %34 = fsub double %33 , %31 
 %35 = fptrunc double %34 to float 
 store float %35 , float * @z 
 br label %36 
 36: 
 %37 = load i32 , i32 * %3 
 %38 = icmp ne i32 %37 , 0 
 br i1 %38 , label %46 , label %39 
 39: 
 %40 = load float , float * @x 
 %41 = fptosi float %40 to i32 
 store i32 %41 , i32 * @d 
 %42 = load float , float * @y 
 %43 = fptosi float %42 to i32 
 store i32 %43 , i32 * %3 
 %44 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %41 i32 %43 ) 
 %45 = icmp ne i32 %44 , 0 
 br label %46 
 46: 
 %47 = phi i1 [ true %36 ] , [ %45 %39 ] 
 %48 = zext i1 %47 to i32 
 br label %4 
 49: 
 call void @exit ( i32 0 ) #5 
 unreachable 
 } 
