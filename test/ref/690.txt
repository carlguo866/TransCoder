define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 11 x i32 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 br label %5 
 5: 
 %6 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %7 = icmp eq i32 %6 , -1 
 br i1 %7 , label %8 , label %9 
 8: 
 br label %29 
 9: 
 %10 = load i32 , i32 * %3 
 %11 = icmp eq i32 %10 , 0 
 br i1 %11 , label %12 , label %21 
 12: 
 %13 = load i32 , i32 * %2 
 %14 = sub nsw i32 %13 , 1 
 %15 = sext i32 %14 to i64 
 %16 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * %4 , i64 0 , i64 %15 
 %17 = load i32 , i32 * %16 
 %18 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %17 ) 
 %19 = load i32 , i32 * %2 
 %20 = sub nsw i32 %19 , 1 
 store i32 %20 , i32 * %2 
 br label %28 
 21: 
 %22 = load i32 , i32 * %3 
 %23 = load i32 , i32 * %2 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 11 x i32 ] , [ 11 x i32 ] * %4 , i64 0 , i64 %24 
 store i32 %22 , i32 * %25 
 %26 = load i32 , i32 * %2 
 %27 = add nsw i32 %26 , 1 
 store i32 %27 , i32 * %2 
 br label %28 
 28: 
 br label %5 
 29: 
 ret i32 0 
 } 
