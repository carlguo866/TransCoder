define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 100 x i32 ] 
 %5 = alloca [ 100 x i32 ] 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %2 
 store i32 0 , i32 * %3 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %42 
 10: 
 %11 = load i32 , i32 * %6 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %20 
 13: 
 %14 = load i32 , i32 * %6 
 %15 = load i32 , i32 * %3 
 %16 = sext i32 %15 to i64 
 %17 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %4 , i64 0 , i64 %16 
 store i32 %14 , i32 * %17 
 %18 = load i32 , i32 * %3 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * %3 
 br label %41 
 20: 
 %21 = load i32 , i32 * %3 
 %22 = icmp ne i32 %21 , 0 
 br i1 %22 , label %23 , label %40 
 23: 
 %24 = load i32 , i32 * %3 
 %25 = add nsw i32 %24 , -1 
 store i32 %25 , i32 * %3 
 %26 = load i32 , i32 * %3 
 %27 = sext i32 %26 to i64 
 %28 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %4 , i64 0 , i64 %27 
 %29 = load i32 , i32 * %28 
 %30 = load i32 , i32 * %2 
 %31 = sext i32 %30 to i64 
 %32 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %31 
 store i32 %29 , i32 * %32 
 %33 = load i32 , i32 * %2 
 %34 = sext i32 %33 to i64 
 %35 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %5 , i64 0 , i64 %34 
 %36 = load i32 , i32 * %35 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 %38 = load i32 , i32 * %2 
 %39 = add nsw i32 %38 , 1 
 store i32 %39 , i32 * %2 
 br label %40 
 40: 
 br label %41 
 41: 
 br label %7 
 42: 
 ret i32 0 
 } 
