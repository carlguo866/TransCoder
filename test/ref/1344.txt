define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca [ 100 x i32 ] 
 %5 = alloca i32 
 %6 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 6 , i32 * %5 
 store i32 1 , i32 * %2 
 br label %7 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = load i32 , i32 * %5 
 %10 = icmp slt i32 %8 , %9 
 br i1 %10 , label %11 , label %19 
 11: 
 %12 = load i32 , i32 * %2 
 %13 = sext i32 %12 to i64 
 %14 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %4 , i64 0 , i64 %13 
 %15 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %14 ) 
 br label %16 
 16: 
 %17 = load i32 , i32 * %2 
 %18 = add nsw i32 %17 , 1 
 store i32 %18 , i32 * %2 
 br label %7 
 19: 
 %20 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %4 , i64 0 , i64 0 
 %21 = load i32 , i32 * %5 
 %22 = call i32 @bubble ( i32 * %20 i32 %21 ) 
 store i32 1 , i32 * %2 
 br label %23 
 23: 
 %24 = load i32 , i32 * %2 
 %25 = load i32 , i32 * %5 
 %26 = icmp slt i32 %24 , %25 
 br i1 %26 , label %27 , label %43 
 27: 
 %28 = load i32 , i32 * %2 
 %29 = sext i32 %28 to i64 
 %30 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %4 , i64 0 , i64 %29 
 %31 = load i32 , i32 * %30 
 %32 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 %31 ) 
 %33 = load i32 , i32 * %2 
 %34 = icmp slt i32 %33 , 5 
 br i1 %34 , label %35 , label %37 
 35: 
 %36 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 2 x i8 ] @".str.1: ~00" i64 0 i64 0 ) ) 
 br label %39 
 37: 
 %38 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 2 x i8 ] @".str.2:~0A~00" i64 0 i64 0 ) ) 
 br label %39 
 39: 
 br label %40 
 40: 
 %41 = load i32 , i32 * %2 
 %42 = add nsw i32 %41 , 1 
 store i32 %42 , i32 * %2 
 br label %23 
 43: 
 ret i32 0 
 } 
