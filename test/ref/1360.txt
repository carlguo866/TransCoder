define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca double 
 %3 = alloca double 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca double 
 %8 = alloca double 
 %9 = alloca double 
 store i32 0 , i32 * %1 
 br label %10 
 10: 
 %11 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 25 x i8 ] @".str:%lf%lf%lf%lf%lf%lf%lf%lf~00" i64 0 i64 0 ) double * %2 double * %3 double * %4 double * %5 double * %6 double * %7 double * %8 double * %9 ) 
 %12 = icmp eq i32 %11 , 8 
 br i1 %12 , label %13 , label %53 
 13: 
 %14 = load double , double * %2 
 %15 = load double , double * %3 
 %16 = load double , double * %4 
 %17 = load double , double * %5 
 %18 = load double , double * %6 
 %19 = load double , double * %7 
 %20 = load double , double * %8 
 %21 = load double , double * %9 
 %22 = call i32 @isSameSide ( double %14 double %15 double %16 double %17 double %18 double %19 double %20 double %21 ) 
 %23 = icmp ne i32 %22 , 1 
 br i1 %23 , label %24 , label %25 
 24: 
 br label %51 
 25: 
 %26 = load double , double * %4 
 %27 = load double , double * %5 
 %28 = load double , double * %6 
 %29 = load double , double * %7 
 %30 = load double , double * %2 
 %31 = load double , double * %3 
 %32 = load double , double * %8 
 %33 = load double , double * %9 
 %34 = call i32 @isSameSide ( double %26 double %27 double %28 double %29 double %30 double %31 double %32 double %33 ) 
 %35 = icmp ne i32 %34 , 1 
 br i1 %35 , label %36 , label %37 
 36: 
 br label %51 
 37: 
 %38 = load double , double * %6 
 %39 = load double , double * %7 
 %40 = load double , double * %2 
 %41 = load double , double * %3 
 %42 = load double , double * %4 
 %43 = load double , double * %5 
 %44 = load double , double * %8 
 %45 = load double , double * %9 
 %46 = call i32 @isSameSide ( double %38 double %39 double %40 double %41 double %42 double %43 double %44 double %45 ) 
 %47 = icmp ne i32 %46 , 1 
 br i1 %47 , label %48 , label %49 
 48: 
 br label %51 
 49: 
 %50 = call i32 @puts ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:YES~00" i64 0 i64 0 ) ) 
 br label %10 
 51: 
 %52 = call i32 @puts ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.2:NO~00" i64 0 i64 0 ) ) 
 br label %10 
 53: 
 ret i32 0 
 } 
