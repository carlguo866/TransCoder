define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 1000000 x i32 ] 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %5 
 br label %6 
 6: 
 %7 = load i32 , i32 * %5 
 %8 = icmp slt i32 %7 , 1000000 
 br i1 %8 , label %9 , label %28 
 9: 
 %10 = load i32 , i32 * %5 
 %11 = call i32 @isPrime ( i32 %10 ) 
 %12 = load i32 , i32 * %5 
 %13 = sext i32 %12 to i64 
 %14 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %13 
 store i32 %11 , i32 * %14 
 %15 = load i32 , i32 * %4 
 %16 = load i32 , i32 * %5 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %17 
 %19 = load i32 , i32 * %18 
 %20 = add nsw i32 %19 , %15 
 store i32 %20 , i32 * %18 
 %21 = load i32 , i32 * %5 
 %22 = sext i32 %21 to i64 
 %23 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %22 
 %24 = load i32 , i32 * %23 
 store i32 %24 , i32 * %4 
 br label %25 
 25: 
 %26 = load i32 , i32 * %5 
 %27 = add nsw i32 %26 , 1 
 store i32 %27 , i32 * %5 
 br label %6 
 28: 
 br label %29 
 29: 
 %30 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %3 ) 
 %31 = icmp ne i32 %30 , -1 
 br i1 %31 , label %32 , label %38 
 32: 
 %33 = load i32 , i32 * %3 
 %34 = sext i32 %33 to i64 
 %35 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %34 
 %36 = load i32 , i32 * %35 
 %37 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %36 ) 
 br label %29 
 38: 
 ret i32 0 
 } 
