define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca double 
 %8 = alloca double 
 %9 = alloca double 
 %10 = alloca double 
 %11 = alloca double 
 %12 = alloca double 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %13 = call i32 @getchar ( ) 
 %14 = sub nsw i32 %13 , 48 
 store i32 %14 , i32 * %6 
 call void @init ( ) 
 br label %15 
 15: 
 %16 = load i32 , i32 * %6 
 %17 = icmp sgt i32 %16 , 0 
 br i1 %17 , label %18 , label %33 
 18: 
 %19 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 24 x i8 ] @".str:%lf %lf %lf %lf %lf %lf~00" i64 0 i64 0 ) double * %7 double * %8 double * %9 double * %10 double * %11 double * %12 ) 
 %20 = load double , double * %7 
 %21 = load double , double * %8 
 %22 = load double , double * %9 
 %23 = load double , double * %10 
 %24 = load double , double * %11 
 %25 = load double , double * %12 
 call void @calc ( double %20 double %21 double %22 double %23 double %24 double %25 ) 
 %26 = load double , double * @xr 
 %27 = load double , double * @yr 
 %28 = load double , double * @r 
 %29 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 16 x i8 ] @".str.1:%.3f %.3f %.3f~0A~00" i64 0 i64 0 ) double %26 double %27 double %28 ) 
 br label %30 
 30: 
 %31 = load i32 , i32 * %6 
 %32 = add nsw i32 %31 , -1 
 store i32 %32 , i32 * %6 
 br label %15 
 33: 
 ret i32 0 
 } 
