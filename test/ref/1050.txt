define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca [ 10 x i32 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %3 
 store i32 0 , i32 * %5 
 %7 = bitcast [ 10 x i32 ] * %6 to i8 * 
 call void @llvm.memset.p0i8.i64 ( i8 * %7 i8 0 i64 40 i1 false ) 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %10 = icmp ne i32 %9 , -1 
 br i1 %10 , label %11 , label %35 
 11: 
 %12 = load i32 , i32 * %2 
 %13 = icmp eq i32 %12 , -1 
 br i1 %13 , label %14 , label %15 
 14: 
 br label %35 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = icmp ne i32 %16 , 0 
 br i1 %17 , label %18 , label %25 
 18: 
 %19 = load i32 , i32 * %2 
 %20 = load i32 , i32 * %5 
 %21 = sext i32 %20 to i64 
 %22 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %6 , i64 0 , i64 %21 
 store i32 %19 , i32 * %22 
 %23 = load i32 , i32 * %5 
 %24 = add nsw i32 %23 , 1 
 store i32 %24 , i32 * %5 
 br label %33 
 25: 
 %26 = load i32 , i32 * %5 
 %27 = add nsw i32 %26 , -1 
 store i32 %27 , i32 * %5 
 %28 = load i32 , i32 * %5 
 %29 = sext i32 %28 to i64 
 %30 = getelementptr inbounds [ 10 x i32 ] , [ 10 x i32 ] * %6 , i64 0 , i64 %29 
 %31 = load i32 , i32 * %30 
 %32 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %31 ) 
 br label %33 
 33: 
 br label %34 
 34: 
 br label %8 
 35: 
 ret i32 0 
 } 
