define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca [ 100 x i32 ] 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %5 
 br label %7 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = icmp ne i32 %8 , -1 
 br i1 %9 , label %10 , label %17 
 10: 
 %11 = load i32 , i32 * %4 
 %12 = sext i32 %11 to i64 
 %13 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %6 , i64 0 , i64 %12 
 %14 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:%d~00" i64 0 i64 0 ) i32 * %13 ) 
 store i32 %14 , i32 * %2 
 %15 = load i32 , i32 * %4 
 %16 = add nsw i32 %15 , 1 
 store i32 %16 , i32 * %4 
 br label %7 
 17: 
 store i32 0 , i32 * %3 
 br label %18 
 18: 
 %19 = load i32 , i32 * %3 
 %20 = load i32 , i32 * %4 
 %21 = icmp slt i32 %19 , %20 
 br i1 %21 , label %22 , label %39 
 22: 
 %23 = load i32 , i32 * %3 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %6 , i64 0 , i64 %24 
 %26 = load i32 , i32 * %25 
 %27 = icmp sgt i32 %26 , 0 
 br i1 %27 , label %28 , label %33 
 28: 
 %29 = load i32 , i32 * %3 
 %30 = sext i32 %29 to i64 
 %31 = getelementptr inbounds [ 100 x i32 ] , [ 100 x i32 ] * %6 , i64 0 , i64 %30 
 %32 = load i32 , i32 * %31 
 call void @push ( i32 %32 ) 
 br label %35 
 33: 
 %34 = call i32 @pop ( ) 
 br label %35 
 35: 
 br label %36 
 36: 
 %37 = load i32 , i32 * %3 
 %38 = add nsw i32 %37 , 1 
 store i32 %38 , i32 * %3 
 br label %18 
 39: 
 ret i32 0 
 } 
