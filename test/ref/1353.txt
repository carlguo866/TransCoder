define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 %7 = alloca double 
 %8 = alloca double 
 %9 = alloca double 
 store i32 0 , i32 * %1 
 store double , double * 1.000000e+00 %9 
 store double , double * 0.000000e+00 %7 
 store double , double * 0.000000e+00 %6 
 store double , double * 9.000000e+01 %8 
 %10 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %4 double * %5 ) 
 br label %11 
 11: 
 %12 = load double , double * %9 
 %13 = fcmp une double %12 , 0.000000e+00 
 br i1 %13 , label %14 , label %42 
 14: 
 %15 = load double , double * %4 
 %16 = load double , double * %8 
 %17 = fmul double %16 , 0x400921FB54411744 
 %18 = fdiv double %17 , 1.800000e+02 
 %19 = call double @cos ( double %18 ) #3 
 %20 = fmul double %15 , %19 
 %21 = load double , double * %6 
 %22 = fsub double %21 , %20 
 store double %22 , double * %6 
 %23 = load double , double * %4 
 %24 = load double , double * %8 
 %25 = fmul double %24 , 0x400921FB54411744 
 %26 = fdiv double %25 , 1.800000e+02 
 %27 = call double @sin ( double %26 ) #3 
 %28 = fmul double %23 , %27 
 %29 = load double , double * %7 
 %30 = fadd double %29 , %28 
 store double %30 , double * %7 
 %31 = load double , double * %5 
 %32 = load double , double * %8 
 %33 = fadd double %32 , %31 
 store double %33 , double * %8 
 %34 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %4 double * %5 ) 
 %35 = load double , double * %4 
 %36 = fcmp oeq double %35 , 0.000000e+00 
 br i1 %36 , label %37 , label %41 
 37: 
 %38 = load double , double * %5 
 %39 = fcmp oeq double %38 , 0.000000e+00 
 br i1 %39 , label %40 , label %41 
 40: 
 store double , double * 0.000000e+00 %9 
 br label %41 
 41: 
 br label %11 
 42: 
 %43 = load double , double * %6 
 %44 = fptosi double %43 to i32 
 store i32 %44 , i32 * %2 
 %45 = load double , double * %7 
 %46 = fptosi double %45 to i32 
 store i32 %46 , i32 * %3 
 %47 = load i32 , i32 * %2 
 %48 = load i32 , i32 * %3 
 %49 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %47 i32 %48 ) 
 ret i32 0 
 } 
