define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 br label %2 
 2: 
 %3 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * @n ) 
 %4 = icmp ne i32 %3 , -1 
 br i1 %4 , label %5 , label %28 
 5: 
 %6 = load i32 , i32 * @n 
 %7 = icmp eq i32 %6 , 0 
 br i1 %7 , label %8 , label %20 
 8: 
 %9 = load i32 , i32 * @flag 
 %10 = add nsw i32 %9 , -1 
 store i32 %10 , i32 * @flag 
 %11 = load i32 , i32 * @flag 
 %12 = sext i32 %11 to i64 
 %13 = getelementptr inbounds [ 15 x i32 ] , [ 15 x i32 ] * @stack , i64 0 , i64 %12 
 %14 = load i32 , i32 * %13 
 %15 = load i32 , i32 * @aflag 
 %16 = sext i32 %15 to i64 
 %17 = getelementptr inbounds [ 15 x i32 ] , [ 15 x i32 ] * @ans , i64 0 , i64 %16 
 store i32 %14 , i32 * %17 
 %18 = load i32 , i32 * @aflag 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * @aflag 
 br label %27 
 20: 
 %21 = load i32 , i32 * @n 
 %22 = load i32 , i32 * @flag 
 %23 = sext i32 %22 to i64 
 %24 = getelementptr inbounds [ 15 x i32 ] , [ 15 x i32 ] * @stack , i64 0 , i64 %23 
 store i32 %21 , i32 * %24 
 %25 = load i32 , i32 * @flag 
 %26 = add nsw i32 %25 , 1 
 store i32 %26 , i32 * @flag 
 br label %27 
 27: 
 br label %2 
 28: 
 store i32 0 , i32 * @i 
 br label %29 
 29: 
 %30 = load i32 , i32 * @i 
 %31 = load i32 , i32 * @aflag 
 %32 = icmp slt i32 %30 , %31 
 br i1 %32 , label %33 , label %42 
 33: 
 %34 = load i32 , i32 * @i 
 %35 = sext i32 %34 to i64 
 %36 = getelementptr inbounds [ 15 x i32 ] , [ 15 x i32 ] * @ans , i64 0 , i64 %35 
 %37 = load i32 , i32 * %36 
 %38 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %37 ) 
 br label %39 
 39: 
 %40 = load i32 , i32 * @i 
 %41 = add nsw i32 %40 , 1 
 store i32 %41 , i32 * @i 
 br label %29 
 42: 
 ret i32 0 
 } 
