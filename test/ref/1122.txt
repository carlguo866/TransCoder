define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 1000000 x i32 ] 
 %3 = alloca i32 
 %4 = alloca i32 
 store i32 0 , i32 * %1 
 %5 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 0 
 call void @gen_prime ( i32 * %5 ) 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %4 ) 
 %8 = icmp ne i32 %7 , -1 
 br i1 %8 , label %9 , label %33 
 9: 
 %10 = load i32 , i32 * %4 
 %11 = icmp eq i32 %10 , 1 
 br i1 %11 , label %12 , label %14 
 12: 
 %13 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str.1:0~0A~00" i64 0 i64 0 ) ) 
 br label %32 
 14: 
 %15 = load i32 , i32 * %4 
 store i32 %15 , i32 * %3 
 br label %16 
 16: 
 %17 = load i32 , i32 * %3 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %18 
 %20 = load i32 , i32 * %19 
 %21 = icmp eq i32 %20 , 0 
 br i1 %21 , label %22 , label %26 
 22: 
 br label %23 
 23: 
 %24 = load i32 , i32 * %3 
 %25 = add nsw i32 %24 , -1 
 store i32 %25 , i32 * %3 
 br label %16 
 26: 
 %27 = load i32 , i32 * %3 
 %28 = sext i32 %27 to i64 
 %29 = getelementptr inbounds [ 1000000 x i32 ] , [ 1000000 x i32 ] * %2 , i64 0 , i64 %28 
 %30 = load i32 , i32 * %29 
 %31 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.2:%d~0A~00" i64 0 i64 0 ) i32 %30 ) 
 br label %32 
 32: 
 br label %6 
 33: 
 ret i32 0 
 } 
