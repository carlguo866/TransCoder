define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 2 , i32 * getelementptr inbounds ( [ 500000 x i32 ] , [ 500000 x i32 ] * @prime i64 0 i64 0 ) 
 store i32 3 , i32 * getelementptr inbounds ( [ 500000 x i32 ] , [ 500000 x i32 ] * @prime i64 0 i64 1 ) 
 br label %4 
 4: 
 %5 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %2 ) 
 %6 = icmp ne i32 %5 , -1 
 br i1 %6 , label %7 , label %38 
 7: 
 %8 = load i32 , i32 * %2 
 %9 = load i32 , i32 * @num_prime 
 %10 = sub nsw i32 %9 , 1 
 %11 = sext i32 %10 to i64 
 %12 = getelementptr inbounds [ 500000 x i32 ] , [ 500000 x i32 ] * @prime , i64 0 , i64 %11 
 %13 = load i32 , i32 * %12 
 %14 = icmp sgt i32 %8 , %13 
 br i1 %14 , label %15 , label %20 
 15: 
 %16 = load i32 , i32 * %2 
 %17 = call i32 @judge ( i32 %16 ) 
 store i32 %17 , i32 * %3 
 %18 = load i32 , i32 * %3 
 %19 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %18 ) 
 br label %37 
 20: 
 %21 = load i32 , i32 * %2 
 %22 = load i32 , i32 * @num_prime 
 %23 = sub nsw i32 %22 , 1 
 %24 = sext i32 %23 to i64 
 %25 = getelementptr inbounds [ 500000 x i32 ] , [ 500000 x i32 ] * @prime , i64 0 , i64 %24 
 %26 = load i32 , i32 * %25 
 %27 = icmp eq i32 %21 , %26 
 br i1 %27 , label %28 , label %31 
 28: 
 %29 = load i32 , i32 * @num_prime 
 %30 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %29 ) 
 br label %36 
 31: 
 %32 = load i32 , i32 * %2 
 %33 = call i32 @find ( i32 %32 ) 
 store i32 %33 , i32 * %3 
 %34 = load i32 , i32 * %3 
 %35 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %34 ) 
 br label %36 
 36: 
 br label %37 
 37: 
 br label %4 
 38: 
 ret i32 0 
 } 
