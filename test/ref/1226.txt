define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca [ 1000 x i32 ] 
 %3 = alloca [ 1000 x i32 ] 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca i32 
 %7 = alloca i32 
 store i32 0 , i32 * %1 
 store i32 0 , i32 * %4 
 store i32 0 , i32 * %5 
 br label %8 
 8: 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %10 = icmp eq i32 %9 , -1 
 br i1 %10 , label %11 , label %12 
 11: 
 br label %35 
 12: 
 %13 = load i32 , i32 * %6 
 %14 = icmp ne i32 %13 , 0 
 br i1 %14 , label %15 , label %22 
 15: 
 %16 = load i32 , i32 * %6 
 %17 = load i32 , i32 * %4 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %2 , i64 0 , i64 %18 
 store i32 %16 , i32 * %19 
 %20 = load i32 , i32 * %4 
 %21 = add nsw i32 %20 , 1 
 store i32 %21 , i32 * %4 
 br label %34 
 22: 
 %23 = load i32 , i32 * %4 
 %24 = add nsw i32 %23 , -1 
 store i32 %24 , i32 * %4 
 %25 = load i32 , i32 * %4 
 %26 = sext i32 %25 to i64 
 %27 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %2 , i64 0 , i64 %26 
 %28 = load i32 , i32 * %27 
 %29 = load i32 , i32 * %5 
 %30 = sext i32 %29 to i64 
 %31 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %3 , i64 0 , i64 %30 
 store i32 %28 , i32 * %31 
 %32 = load i32 , i32 * %5 
 %33 = add nsw i32 %32 , 1 
 store i32 %33 , i32 * %5 
 br label %34 
 34: 
 br label %8 
 35: 
 store i32 0 , i32 * %7 
 br label %36 
 36: 
 %37 = load i32 , i32 * %7 
 %38 = load i32 , i32 * %5 
 %39 = icmp slt i32 %37 , %38 
 br i1 %39 , label %40 , label %49 
 40: 
 %41 = load i32 , i32 * %7 
 %42 = sext i32 %41 to i64 
 %43 = getelementptr inbounds [ 1000 x i32 ] , [ 1000 x i32 ] * %3 , i64 0 , i64 %42 
 %44 = load i32 , i32 * %43 
 %45 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %44 ) 
 br label %46 
 46: 
 %47 = load i32 , i32 * %7 
 %48 = add nsw i32 %47 , 1 
 store i32 %48 , i32 * %7 
 br label %36 
 49: 
 ret i32 0 
 } 
