define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca double 
 %3 = alloca double 
 %4 = alloca double 
 %5 = alloca double 
 %6 = alloca double 
 store i32 0 , i32 * %1 
 store double , double * 0.000000e+00 %2 
 store double , double * 0.000000e+00 %3 
 store double , double * 9.000000e+01 %6 
 br label %7 
 7: 
 %8 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 8 x i8 ] @".str:%lf,%lf~00" i64 0 i64 0 ) double * %4 double * %5 ) 
 %9 = load double , double * %4 
 %10 = fcmp une double %9 , 0.000000e+00 
 br i1 %10 , label %14 , label %11 
 11: 
 %12 = load double , double * %5 
 %13 = fcmp une double %12 , 0.000000e+00 
 br label %14 
 14: 
 %15 = phi i1 [ true %7 ] , [ %13 %11 ] 
 br i1 %15 , label %16 , label %36 
 16: 
 %17 = load double , double * %4 
 %18 = load double , double * %6 
 %19 = fmul double 0x400921FB54442D18 , %18 
 %20 = fdiv double %19 , 1.800000e+02 
 %21 = call double @cos ( double %20 ) #4 
 %22 = fmul double %17 , %21 
 %23 = load double , double * %2 
 %24 = fadd double %23 , %22 
 store double %24 , double * %2 
 %25 = load double , double * %4 
 %26 = load double , double * %6 
 %27 = fmul double 0x400921FB54442D18 , %26 
 %28 = fdiv double %27 , 1.800000e+02 
 %29 = call double @sin ( double %28 ) #4 
 %30 = fmul double %25 , %29 
 %31 = load double , double * %3 
 %32 = fadd double %31 , %30 
 store double %32 , double * %3 
 %33 = load double , double * %5 
 %34 = load double , double * %6 
 %35 = fsub double %34 , %33 
 store double %35 , double * %6 
 br label %7 
 36: 
 %37 = load double , double * %2 
 %38 = fptosi double %37 to i32 
 %39 = load double , double * %3 
 %40 = fptosi double %39 to i32 
 %41 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %38 i32 %40 ) 
 call void @exit ( i32 0 ) #5 
 unreachable 
 } 
