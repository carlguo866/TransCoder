define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca [ 500000 x i64 ] 
 %5 = alloca i64 
 store i32 0 , i32 * %1 
 store i64 0 , i64 * %3 
 store i64 0 , i64 * %2 
 br label %6 
 6: 
 %7 = load i64 , i64 * %2 
 %8 = icmp slt i64 %7 , 1000000 
 br i1 %8 , label %9 , label %23 
 9: 
 %10 = load i64 , i64 * %2 
 %11 = call i32 @judgeprime ( i64 %10 ) 
 %12 = icmp ne i32 %11 , 0 
 br i1 %12 , label %13 , label %19 
 13: 
 %14 = load i64 , i64 * %2 
 %15 = load i64 , i64 * %3 
 %16 = getelementptr inbounds [ 500000 x i64 ] , [ 500000 x i64 ] * %4 , i64 0 , i64 %15 
 store i64 %14 , i64 * %16 
 %17 = load i64 , i64 * %3 
 %18 = add nsw i64 %17 , 1 
 store i64 %18 , i64 * %3 
 br label %19 
 19: 
 br label %20 
 20: 
 %21 = load i64 , i64 * %2 
 %22 = add nsw i64 %21 , 1 
 store i64 %22 , i64 * %2 
 br label %6 
 23: 
 %24 = load i64 , i64 * %3 
 %25 = getelementptr inbounds [ 500000 x i64 ] , [ 500000 x i64 ] * %4 , i64 0 , i64 %24 
 store i64 1000001 , i64 * %25 
 br label %26 
 26: 
 %27 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%ld~00" i64 0 i64 0 ) i64 * %5 ) 
 %28 = icmp ne i32 %27 , -1 
 br i1 %28 , label %29 , label %49 
 29: 
 store i64 0 , i64 * %2 
 br label %30 
 30: 
 %31 = load i64 , i64 * %2 
 %32 = load i64 , i64 * %3 
 %33 = add nsw i64 %32 , 1 
 %34 = icmp slt i64 %31 , %33 
 br i1 %34 , label %35 , label %46 
 35: 
 %36 = load i64 , i64 * %2 
 %37 = getelementptr inbounds [ 500000 x i64 ] , [ 500000 x i64 ] * %4 , i64 0 , i64 %36 
 %38 = load i64 , i64 * %37 
 %39 = load i64 , i64 * %5 
 %40 = icmp sgt i64 %38 , %39 
 br i1 %40 , label %41 , label %42 
 41: 
 br label %46 
 42: 
 br label %43 
 43: 
 %44 = load i64 , i64 * %2 
 %45 = add nsw i64 %44 , 1 
 store i64 %45 , i64 * %2 
 br label %30 
 46: 
 %47 = load i64 , i64 * %2 
 %48 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%ld~0A~00" i64 0 i64 0 ) i64 %47 ) 
 br label %26 
 49: 
 ret i32 0 
 } 
