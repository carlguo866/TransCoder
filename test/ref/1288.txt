define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 %4 = load i32 , i32 * %3 
 %5 = sext i32 %4 to i64 
 %6 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 6 x i32 ] , [ 6 x i32 ] * @a i64 0 i64 0 ) , i64 %5 
 %7 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %6 ) 
 %8 = xor i32 %7 , -1 
 %9 = icmp ne i32 %8 , 0 
 br i1 %9 , label %10 , label %27 
 10: 
 %11 = load i32 , i32 * %3 
 %12 = sub nsw i32 %11 , 1 
 %13 = icmp ne i32 %12 , 0 
 %14 = zext i1 %13 to i64 
 %15 = select i1 %13 , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.1:%d ~00" i64 0 i64 0 ) , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.2:%d~0A~00" i64 0 i64 0 ) 
 %16 = load i32 , i32 * %3 
 %17 = sext i32 %16 to i64 
 %18 = getelementptr inbounds [ 6 x i32 ] , [ 6 x i32 ] * @a , i64 0 , i64 %17 
 %19 = load i32 , i32 * %18 
 %20 = load i32 , i32 * %3 
 %21 = add nsw i32 %20 , 1 
 %22 = call i32 @main ( i32 %21 ) 
 %23 = call i32 ( i8 * ... ) @printf ( i8 * %15 i32 %19 i32 %22 ) 
 %24 = icmp ne i32 %23 , 0 
 %25 = xor i1 %24 , true 
 %26 = zext i1 %25 to i32 
 br label %29 
 27: 
 %28 = call i32 ( i32 * i32 i32 i8 * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i8 * ... ) * ) ( i32 * getelementptr inbounds ( [ 6 x i32 ] @a i64 0 i64 1 ) i32 5 i32 4 i8 * getelementptr inbounds ( [ 12 x i8 ] @".str.3:YXZRPQ~8B~00+~02~C3~00" i64 0 i64 0 ) ) 
 br label %29 
 29: 
 %30 = phi i32 [ %26 %10 ] , [ %28 %27 ] 
 store i32 %30 , i32 * @z 
 %31 = load i32 , i32 * %2 
 ret i32 %31 
 } 
