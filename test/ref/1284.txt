define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 br label %2 
 2: 
 %3 = load i32 , i32 * @i 
 %4 = sext i32 %3 to i64 
 %5 = getelementptr inbounds i32 , i32 * getelementptr inbounds ( [ 5 x i32 ] , [ 5 x i32 ] * @a i64 0 i64 0 ) , i64 %4 
 %6 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %5 ) 
 %7 = xor i32 %6 , -1 
 %8 = icmp ne i32 %7 , 0 
 br i1 %8 , label %9 , label %10 
 9: 
 br label %26 
 10: 
 %11 = load i32 , i32 * @i 
 %12 = add nsw i32 %11 , -1 
 store i32 %12 , i32 * @i 
 %13 = icmp ne i32 %11 , 0 
 %14 = zext i1 %13 to i64 
 %15 = select i1 %13 , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.1:%d ~00" i64 0 i64 0 ) , i8 * getelementptr inbounds ( [ 4 x i8 ] , [ 4 x i8 ] * @".str.2:%d~0A~00" i64 0 i64 0 ) 
 %16 = load i32 , i32 * @i 
 %17 = add nsw i32 %16 , -1 
 store i32 %17 , i32 * @i 
 %18 = sext i32 %17 to i64 
 %19 = getelementptr inbounds [ 5 x i32 ] , [ 5 x i32 ] * @a , i64 0 , i64 %18 
 %20 = load i32 , i32 * %19 
 %21 = call i32 ( i8 * ... ) @printf ( i8 * %15 i32 %20 ) 
 %22 = icmp ne i32 %21 , 0 
 %23 = xor i1 %22 , true 
 %24 = xor i1 %23 , true 
 %25 = zext i1 %24 to i32 
 br label %26 
 26: 
 %27 = phi i32 [ 1 %9 ] , [ %25 %10 ] 
 %28 = load i32 , i32 * @i 
 %29 = add nsw i32 %28 , %27 
 store i32 %29 , i32 * @i 
 %30 = icmp ne i32 %29 , 0 
 br i1 %30 , label %31 , label %35 
 31: 
 br label %32 
 32: 
 %33 = load i32 , i32 * @i 
 %34 = call i32 ( i32 * i32 i32 i8 * ... ) bitcast ( i32 ( ... ) * @qsort to i32 ( i32 * i32 i32 i8 * ... ) * ) ( i32 * getelementptr inbounds ( [ 5 x i32 ] @a i64 0 i64 0 ) i32 %33 i32 4 i8 * getelementptr inbounds ( [ 12 x i8 ] @".str.3:YXZRPQ~8B~00+~02~C3~00" i64 0 i64 0 ) ) 
 br label %2 
 35: 
 %36 = load i32 , i32 * %1 
 ret i32 %36 
 } 
