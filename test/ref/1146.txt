define dso_local i32 @main ( i32 %0 ) #0 { 
 %2 = alloca i32 
 %3 = alloca i32 
 store i32 0 , i32 * %2 
 store i32 %0 , i32 * %3 
 br label %4 
 4: 
 %5 = call i32 ( i8 * ... ) @scanf ( i8 * getelementptr inbounds ( [ 6 x i8 ] @".str:%d,%d~00" i64 0 i64 0 ) i32 * %3 i32 * @d ) 
 %6 = xor i32 %5 , -1 
 %7 = icmp ne i32 %6 , 0 
 br i1 %7 , label %8 , label %34 
 8: 
 %9 = load i32 , i32 * %3 
 %10 = sitofp i32 %9 to double 
 %11 = load i32 , i32 * @t 
 %12 = sitofp i32 %11 to double 
 %13 = fdiv double %12 , 5.730000e+01 
 %14 = call double @cos ( double %13 ) #3 
 %15 = fmul double %10 , %14 
 %16 = load float , float * @y 
 %17 = fpext float %16 to double 
 %18 = fadd double %17 , %15 
 %19 = fptrunc double %18 to float 
 store float %19 , float * @y 
 %20 = load i32 , i32 * %3 
 %21 = sitofp i32 %20 to double 
 %22 = load i32 , i32 * @t 
 %23 = sitofp i32 %22 to double 
 %24 = fdiv double %23 , 5.730000e+01 
 %25 = call double @sin ( double %24 ) #3 
 %26 = fmul double %21 , %25 
 %27 = load float , float * @x 
 %28 = fpext float %27 to double 
 %29 = fsub double %28 , %26 
 %30 = fptrunc double %29 to float 
 store float %30 , float * @x 
 %31 = load i32 , i32 * @d 
 %32 = load i32 , i32 * @t 
 %33 = sub nsw i32 %32 , %31 
 store i32 %33 , i32 * @t 
 br label %43 
 34: 
 %35 = load float , float * @x 
 %36 = fptosi float %35 to i32 
 store i32 %36 , i32 * %3 
 %37 = load float , float * @y 
 %38 = fptosi float %37 to i32 
 store i32 %38 , i32 * @t 
 %39 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 7 x i8 ] @".str.1:%d~0A%d~0A~00" i64 0 i64 0 ) i32 %36 i32 %38 ) 
 %40 = icmp ne i32 %39 , 0 
 %41 = xor i1 %40 , true 
 %42 = zext i1 %41 to i32 
 br label %43 
 43: 
 %44 = phi i32 [ %33 %8 ] , [ %42 %34 ] 
 %45 = icmp ne i32 %44 , 0 
 br i1 %45 , label %46 , label %47 
 46: 
 br label %4 
 47: 
 %48 = load i32 , i32 * %2 
 ret i32 %48 
 } 
