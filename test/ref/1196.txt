define dso_local i32 @main ( i32 %0 i8 * * %1 ) #0 { 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i8 * * 
 %6 = alloca i32 
 %7 = alloca i32 
 %8 = alloca i32 
 store i32 0 , i32 * %3 
 store i32 %0 , i32 * %4 
 store i8 * * %1 , i8 * * * %5 
 %9 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %7 ) 
 %10 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * %8 ) 
 %11 = load i32 , i32 * %7 
 call void @init ( i32 %11 ) 
 %12 = load i32 , i32 * %8 
 call void @shuffle ( i32 %12 ) 
 store i32 0 , i32 * %6 
 br label %13 
 13: 
 %14 = load i32 , i32 * %6 
 %15 = load i32 , i32 * %7 
 %16 = icmp slt i32 %14 , %15 
 br i1 %16 , label %17 , label %27 
 17: 
 %18 = load i32 * , i32 * * @lots 
 %19 = load i32 , i32 * %6 
 %20 = sext i32 %19 to i64 
 %21 = getelementptr inbounds i32 , i32 * %18 , i64 %20 
 %22 = load i32 , i32 * %21 
 %23 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %22 ) 
 br label %24 
 24: 
 %25 = load i32 , i32 * %6 
 %26 = add nsw i32 %25 , 1 
 store i32 %26 , i32 * %6 
 br label %13 
 27: 
 ret i32 0 
 } 
