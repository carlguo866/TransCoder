define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i64 
 %3 = alloca i64 
 %4 = alloca i64 
 %5 = alloca i64 
 store i32 0 , i32 * %1 
 br label %6 
 6: 
 %7 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%lu~00" i64 0 i64 0 ) i64 * %2 ) 
 %8 = icmp eq i32 %7 , 1 
 br i1 %8 , label %9 , label %32 
 9: 
 store i64 1 , i64 * %3 
 %10 = load i64 , i64 * %2 
 store i64 %10 , i64 * %4 
 store i64 0 , i64 * %5 
 br label %11 
 11: 
 %12 = load i64 , i64 * %3 
 %13 = load i64 , i64 * %2 
 %14 = udiv i64 600 , %13 
 %15 = icmp ult i64 %12 , %14 
 br i1 %15 , label %16 , label %29 
 16: 
 %17 = load i64 , i64 * %4 
 %18 = load i64 , i64 * %4 
 %19 = mul i64 %17 , %18 
 %20 = load i64 , i64 * %2 
 %21 = mul i64 %19 , %20 
 %22 = load i64 , i64 * %5 
 %23 = add i64 %22 , %21 
 store i64 %23 , i64 * %5 
 %24 = load i64 , i64 * %2 
 %25 = load i64 , i64 * %4 
 %26 = add i64 %25 , %24 
 store i64 %26 , i64 * %4 
 %27 = load i64 , i64 * %3 
 %28 = add i64 %27 , 1 
 store i64 %28 , i64 * %3 
 br label %11 
 29: 
 %30 = load i64 , i64 * %5 
 %31 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 5 x i8 ] @".str.1:%lu~0A~00" i64 0 i64 0 ) i64 %30 ) 
 br label %6 
 32: 
 ret i32 0 
 } 
