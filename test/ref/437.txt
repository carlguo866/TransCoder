define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 store i32 0 , i32 * %1 
 br label %2 
 2: 
 %3 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 3 x i8 ] @".str:%d~00" i64 0 i64 0 ) i32 * @a ) 
 %4 = xor i32 %3 , -1 
 %5 = icmp ne i32 %4 , 0 
 br i1 %5 , label %6 , label %28 
 6: 
 store i32 0 , i32 * @i 
 store i32 0 , i32 * @b 
 br label %7 
 7: 
 %8 = load i32 , i32 * @i 
 %9 = load i32 , i32 * @a 
 %10 = sdiv i32 600 , %9 
 %11 = icmp slt i32 %8 , %10 
 br i1 %11 , label %12 , label %25 
 12: 
 %13 = load i32 , i32 * @a 
 %14 = load i32 , i32 * @i 
 %15 = mul nsw i32 %13 , %14 
 %16 = load i32 , i32 * @a 
 %17 = mul nsw i32 %15 , %16 
 %18 = load i32 , i32 * @i 
 %19 = add nsw i32 %18 , 1 
 store i32 %19 , i32 * @i 
 %20 = mul nsw i32 %17 , %18 
 %21 = load i32 , i32 * @a 
 %22 = mul nsw i32 %20 , %21 
 %23 = load i32 , i32 * @b 
 %24 = add nsw i32 %23 , %22 
 store i32 %24 , i32 * @b 
 br label %7 
 25: 
 %26 = load i32 , i32 * @b 
 %27 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str.1:%d~0A~00" i64 0 i64 0 ) i32 %26 ) 
 br label %2 
 28: 
 %29 = load i32 , i32 * %1 
 ret i32 %29 
 } 
