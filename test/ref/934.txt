define dso_local i32 @main ( ) #0 { 
 %1 = alloca i32 
 %2 = alloca i32 
 %3 = alloca i32 
 %4 = alloca i32 
 %5 = alloca i32 
 %6 = alloca [ 100000 x i32 ] 
 store i32 0 , i32 * %1 
 %7 = getelementptr inbounds [ 100000 x i32 ] , [ 100000 x i32 ] * %6 , i64 0 , i64 0 
 %8 = call i32 @getprimes ( i32 * %7 i32 1000000 ) 
 store i32 %8 , i32 * %5 
 br label %9 
 9: 
 %10 = call i32 ( i8 * ... ) @__isoc99_scanf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%d~0A~00" i64 0 i64 0 ) i32 * %4 ) 
 %11 = icmp eq i32 %10 , 1 
 br i1 %11 , label %12 , label %34 
 12: 
 store i32 0 , i32 * %3 
 store i32 0 , i32 * %2 
 br label %13 
 13: 
 %14 = load i32 , i32 * %2 
 %15 = load i32 , i32 * %5 
 %16 = icmp slt i32 %14 , %15 
 br i1 %16 , label %17 , label %31 
 17: 
 %18 = load i32 , i32 * %2 
 %19 = sext i32 %18 to i64 
 %20 = getelementptr inbounds [ 100000 x i32 ] , [ 100000 x i32 ] * %6 , i64 0 , i64 %19 
 %21 = load i32 , i32 * %20 
 %22 = load i32 , i32 * %4 
 %23 = icmp sgt i32 %21 , %22 
 br i1 %23 , label %24 , label %25 
 24: 
 br label %31 
 25: 
 %26 = load i32 , i32 * %3 
 %27 = add nsw i32 %26 , 1 
 store i32 %27 , i32 * %3 
 br label %28 
 28: 
 %29 = load i32 , i32 * %2 
 %30 = add nsw i32 %29 , 1 
 store i32 %30 , i32 * %2 
 br label %13 
 31: 
 %32 = load i32 , i32 * %3 
 %33 = call i32 ( i8 * ... ) @printf ( i8 * getelementptr inbounds ( [ 4 x i8 ] @".str:%d~0A~00" i64 0 i64 0 ) i32 %32 ) 
 br label %9 
 34: 
 ret i32 0 
 } 
