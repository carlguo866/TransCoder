define
i32
*
@func_28
(
i8
%0
,
i32
%1
)
{
%3
=
alloca
i8
%4
=
alloca
i32
%5
=
alloca
i32
store
i8
%0
,
i8
*
%3
store
i32
%1
,
i32
*
%4
store
i32
-7
,
i32
*
%5
%6
=
load
i16
*
*
*
,
i16
*
*
*
*
@g_1258
%7
=
load
i16
*
*
,
i16
*
*
*
%6
%8
=
load
i16
*
,
i16
*
*
%7
%9
=
load
volatile
i16
,
i16
*
%8
%10
=
load
i32
,
i32
*
%5
%11
=
call
i16
@safe_rshift_func_int16_t_s_s
(
i16
%9
,
i32
%10
)
%12
=
load
i32
,
i32
*
%5
%13
=
load
i8
,
i8
*
%3
%14
=
sext
i8
%13
to
i32
%15
=
load
i8
,
i8
*
%3
%16
=
sext
i8
%15
to
i32
%17
=
icmp
sge
i32
%14
,
%18
%18
=
zext
i1
%17
to
i32
%19
=
load
i32
,
i32
*
%4
%20
=
trunc
i32
%19
to
i8
%21
=
call
i8
@safe_lshift_func_int8_t_s_s
(
i8
%20
,
i32
6
)
%22
=
load
i32
,
i32
*
%4
%23
=
load
i32
,
i32
*
%4
%24
=
load
i32
*
*
,
i32
*
*
*
@g_526
%25
=
load
i32
*
,
i32
*
*
%24
%26
=
load
i32
,
i32
*
%25
%27
=
icmp
ugt
i32
%23
,
%28
%28
=
zext
i1
%27
to
i32
%29
=
trunc
i32
%28
to
i8
%30
=
call
i8
@safe_add_func_uint8_t_u_u
(
i8
%21
,
i8
%29
)
%31
=
call
i8
@safe_add_func_uint8_t_u_u
(
i8
-8
,
i8
%30
)
%32
=
load
i32
,
i32
*
%5
%33
=
zext
i32
%32
to
i64
%34
=
icmp
ne
i64
%33
,
4294967289
%35
=
zext
i1
%34
to
i32
%36
=
load
i32
,
i32
*
%5
%37
=
or
i32
%35
,
%38
%38
=
icmp
uge
i32
%18
,
%39
%39
=
zext
i1
%38
to
i32
%40
=
load
i32
,
i32
*
%4
%41
=
call
i32
@safe_sub_func_uint32_t_u_u
(
i32
%39
,
i32
%40
)
%42
=
load
i32
*
,
i32
*
*
@g_52
store
i32
%41
,
i32
*
%42
%43
=
load
i32
*
*
,
i32
*
*
*
@g_526
%44
=
load
i32
*
,
i32
*
*
%43
ret
i32
*
%44
}
define
i32
*
@func_28
(
i8
%0
,
i32
%1
)
{
%3
=
alloca
i8
%4
=
alloca
i32
%5
=
alloca
i32
store
i8
%0
,
i8
*
%3
store
i32
%1
,
i32
*
%4
store
i32
-7
,
i32
*
%5
%6
=
load
i16
*
*
*
,
i16
*
*
*
*
@g_1258
%7
=
load
i16
*
*
,
i16
*
*
*
%6
%8
=
load
i16
*
,
i16
*
*
%7
%9
=
load
volatile
i16
,
i16
*
%8
%10
=
load
i32
,
i32
*
%5
%11
=
call
i16
@safe_rshift_func_int16_t_s_s
(
i16
%9
,
i32
%10
)
%12
=
load
i32
,
i32
*
%5
%13
=
load
i8
,
i8
*
%3
%14
=
sext
i8
%13
to
i32
%15
=
load
i8
,
i8
*
%3
%16
=
sext
i8
%15
to
i32
%17
=
icmp
sge
i32
%14
,
%18
%18
=
zext
i1
%17
to
i32
%19
=
load
i32
,
i32
*
%4
%20
=
trunc
i32
%19
to
i8
%21
=
call
i8
@safe_lshift_func_int8_t_s_s
(
i8
%20
,
i32
6
)
%22
=
load
i32
,
i32
*
%4
%23
=
load
i32
,
i32
*
%4
%24
=
load
i32
*
*
,
i32
*
*
*
@g_526
%25
=
load
i32
*
,
i32
*
*
%24
%26
=
load
i32
,
i32
*
%25
%27
=
icmp
ugt
i32
%23
,
%28
%28
=
zext
i1
%27
to
i32
%29
=
trunc
i32
%28
to
i8
%30
=
call
i8
@safe_add_func_uint8_t_u_u
(
i8
%21
,
i8
%29
)
%31
=
call
i8
@safe_add_func_uint8_t_u_u
(
i8
-8
,
i8
%30
)
%32
=
load
i32
,
i32
*
%5
%33
=
zext
i32
%32
to
i64
%34
=
icmp
ne
i64
%33
,
4294967289
%35
=
zext
i1
%34
to
i32
%36
=
load
i32
,
i32
*
%5
%37
=
or
i32
%35
,
%38
%38
=
icmp
uge
i32
%18
,
%39
%39
=
zext
i1
%38
to
i32
%40
=
load
i32
,
i32
*
%4
%41
=
call
i32
@safe_sub_func_uint32_t_u_u
(
i32
%39
,
i32
%40
)
%42
=
load
i32
*
,
i32
*
*
@g_52
store
i32
%41
,
i32
*
%42
%43
=
load
i32
*
*
,
i32
*
*
*
@g_526
%44
=
load
i32
*
,
i32
*
*
%43
ret
i32
*
%44
}
